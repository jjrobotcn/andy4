# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import xcodescanner_pb2 as xcodescanner__pb2


class XCodeScannerServiceStub(object):
    """xcScannerService.XCodeScannerService 扫码设备
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetScanData = channel.unary_stream(
                '/xcScannerService.XCodeScannerService/GetScanData',
                request_serializer=xcodescanner__pb2.GetScanDataRequest.SerializeToString,
                response_deserializer=xcodescanner__pb2.GetScanDataResponse.FromString,
                )


class XCodeScannerServiceServicer(object):
    """xcScannerService.XCodeScannerService 扫码设备
    """

    def GetScanData(self, request, context):
        """GetScanData 监听扫码设备数据

        支持读取常用的二维码，BarCode

        开发管理平台功能参考: http://10.10.10.2/xcode_scanner
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_XCodeScannerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetScanData': grpc.unary_stream_rpc_method_handler(
                    servicer.GetScanData,
                    request_deserializer=xcodescanner__pb2.GetScanDataRequest.FromString,
                    response_serializer=xcodescanner__pb2.GetScanDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'xcScannerService.XCodeScannerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class XCodeScannerService(object):
    """xcScannerService.XCodeScannerService 扫码设备
    """

    @staticmethod
    def GetScanData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/xcScannerService.XCodeScannerService/GetScanData',
            xcodescanner__pb2.GetScanDataRequest.SerializeToString,
            xcodescanner__pb2.GetScanDataResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
