# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import map_pb2 as map__pb2


class MapStub(object):
    """navService.Map 导航地图

    仅无线导航版本支持
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMapInfo = channel.unary_unary(
                '/navService.Map/GetMapInfo',
                request_serializer=map__pb2.GetMapInfoRequest.SerializeToString,
                response_deserializer=map__pb2.GetMapInfoResponse.FromString,
                )
        self.MapPositionStream = channel.unary_stream(
                '/navService.Map/MapPositionStream',
                request_serializer=map__pb2.MapPositionStreamRequest.SerializeToString,
                response_deserializer=map__pb2.MapPositionStreamResponse.FromString,
                )
        self.LocationReset = channel.unary_unary(
                '/navService.Map/LocationReset',
                request_serializer=map__pb2.LocationResetRequest.SerializeToString,
                response_deserializer=map__pb2.LocationResetResponse.FromString,
                )


class MapServicer(object):
    """navService.Map 导航地图

    仅无线导航版本支持
    """

    def GetMapInfo(self, request, context):
        """GetMapInfo 获取地图信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MapPositionStream(self, request, context):
        """MapPositionStream 监听设备的地图定位信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LocationReset(self, request, context):
        """LocationReset 重置当前定位

        某些情况下此方法返回成功时可能出现实际位置与地图位置不相符，
        在有明确参照物附近调用此方法可提高准确定位成功率。

        用于发生定位异常/错误状态，重新初始化导航定位
        重定位错误：定位状态超时|无地图|UWB错误
        重定位超时判断: 默认10s，仅在非错误状态下重置
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MapServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMapInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMapInfo,
                    request_deserializer=map__pb2.GetMapInfoRequest.FromString,
                    response_serializer=map__pb2.GetMapInfoResponse.SerializeToString,
            ),
            'MapPositionStream': grpc.unary_stream_rpc_method_handler(
                    servicer.MapPositionStream,
                    request_deserializer=map__pb2.MapPositionStreamRequest.FromString,
                    response_serializer=map__pb2.MapPositionStreamResponse.SerializeToString,
            ),
            'LocationReset': grpc.unary_unary_rpc_method_handler(
                    servicer.LocationReset,
                    request_deserializer=map__pb2.LocationResetRequest.FromString,
                    response_serializer=map__pb2.LocationResetResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'navService.Map', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Map(object):
    """navService.Map 导航地图

    仅无线导航版本支持
    """

    @staticmethod
    def GetMapInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/navService.Map/GetMapInfo',
            map__pb2.GetMapInfoRequest.SerializeToString,
            map__pb2.GetMapInfoResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MapPositionStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/navService.Map/MapPositionStream',
            map__pb2.MapPositionStreamRequest.SerializeToString,
            map__pb2.MapPositionStreamResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LocationReset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/navService.Map/LocationReset',
            map__pb2.LocationResetRequest.SerializeToString,
            map__pb2.LocationResetResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
