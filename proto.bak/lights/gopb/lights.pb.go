// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lights.proto

package lightsService

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 灯光类型
type LightType int32

const (
	// 保留， 不使用
	LightType_UNDEFINED LightType = 0
	// 嘴部灯光
	LightType_MOUTH LightType = 1
	// 手臂灯光
	LightType_HANDS LightType = 2
	// 耳朵灯光
	LightType_EARS LightType = 3
)

var LightType_name = map[int32]string{
	0: "UNDEFINED",
	1: "MOUTH",
	2: "HANDS",
	3: "EARS",
}

var LightType_value = map[string]int32{
	"UNDEFINED": 0,
	"MOUTH":     1,
	"HANDS":     2,
	"EARS":      3,
}

func (x LightType) String() string {
	return proto.EnumName(LightType_name, int32(x))
}

func (LightType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{0}
}

// 播放模式
type PlayMode int32

const (
	// 预置模式 默认为ALWAYS
	PlayMode_PRESET PlayMode = 0
	// 常亮模式
	PlayMode_ALWAYS PlayMode = 1
	// 滚动模式
	// [1,2,3] => [2,3,1] => [3,1,2]
	PlayMode_MARQUEE PlayMode = 2
	// 闪烁模式
	// [true, true] => [false, false]
	PlayMode_FLASH PlayMode = 3
	// 跳动模式
	// [true, false, true, false] => [false, true, false, true]
	PlayMode_TICKTOCK PlayMode = 4
)

var PlayMode_name = map[int32]string{
	0: "PRESET",
	1: "ALWAYS",
	2: "MARQUEE",
	3: "FLASH",
	4: "TICKTOCK",
}

var PlayMode_value = map[string]int32{
	"PRESET":   0,
	"ALWAYS":   1,
	"MARQUEE":  2,
	"FLASH":    3,
	"TICKTOCK": 4,
}

func (x PlayMode) String() string {
	return proto.EnumName(PlayMode_name, int32(x))
}

func (PlayMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{1}
}

// 预览灯光请求
type PreviewLightRequest struct {
	// 灯光id
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PreviewLightRequest) Reset()         { *m = PreviewLightRequest{} }
func (m *PreviewLightRequest) String() string { return proto.CompactTextString(m) }
func (*PreviewLightRequest) ProtoMessage()    {}
func (*PreviewLightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{0}
}

func (m *PreviewLightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreviewLightRequest.Unmarshal(m, b)
}
func (m *PreviewLightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreviewLightRequest.Marshal(b, m, deterministic)
}
func (m *PreviewLightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreviewLightRequest.Merge(m, src)
}
func (m *PreviewLightRequest) XXX_Size() int {
	return xxx_messageInfo_PreviewLightRequest.Size(m)
}
func (m *PreviewLightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PreviewLightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PreviewLightRequest proto.InternalMessageInfo

func (m *PreviewLightRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// 预览灯光结果
type PreviewLightResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PreviewLightResponse) Reset()         { *m = PreviewLightResponse{} }
func (m *PreviewLightResponse) String() string { return proto.CompactTextString(m) }
func (*PreviewLightResponse) ProtoMessage()    {}
func (*PreviewLightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{1}
}

func (m *PreviewLightResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreviewLightResponse.Unmarshal(m, b)
}
func (m *PreviewLightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreviewLightResponse.Marshal(b, m, deterministic)
}
func (m *PreviewLightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreviewLightResponse.Merge(m, src)
}
func (m *PreviewLightResponse) XXX_Size() int {
	return xxx_messageInfo_PreviewLightResponse.Size(m)
}
func (m *PreviewLightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PreviewLightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PreviewLightResponse proto.InternalMessageInfo

// 播放灯光请求
type PlayLightRequest struct {
	// 灯光类型
	Ltype LightType `protobuf:"varint,1,opt,name=ltype,proto3,enum=lightsService.LightType" json:"ltype,omitempty"`
	// 灯光id
	// name参数非空时将优先匹配
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// 灯光名
	// 仅匹配
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayLightRequest) Reset()         { *m = PlayLightRequest{} }
func (m *PlayLightRequest) String() string { return proto.CompactTextString(m) }
func (*PlayLightRequest) ProtoMessage()    {}
func (*PlayLightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{2}
}

func (m *PlayLightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayLightRequest.Unmarshal(m, b)
}
func (m *PlayLightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayLightRequest.Marshal(b, m, deterministic)
}
func (m *PlayLightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayLightRequest.Merge(m, src)
}
func (m *PlayLightRequest) XXX_Size() int {
	return xxx_messageInfo_PlayLightRequest.Size(m)
}
func (m *PlayLightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayLightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayLightRequest proto.InternalMessageInfo

func (m *PlayLightRequest) GetLtype() LightType {
	if m != nil {
		return m.Ltype
	}
	return LightType_UNDEFINED
}

func (m *PlayLightRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PlayLightRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 播放灯光请求结果
type PlayLightResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayLightResponse) Reset()         { *m = PlayLightResponse{} }
func (m *PlayLightResponse) String() string { return proto.CompactTextString(m) }
func (*PlayLightResponse) ProtoMessage()    {}
func (*PlayLightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{3}
}

func (m *PlayLightResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayLightResponse.Unmarshal(m, b)
}
func (m *PlayLightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayLightResponse.Marshal(b, m, deterministic)
}
func (m *PlayLightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayLightResponse.Merge(m, src)
}
func (m *PlayLightResponse) XXX_Size() int {
	return xxx_messageInfo_PlayLightResponse.Size(m)
}
func (m *PlayLightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayLightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlayLightResponse proto.InternalMessageInfo

// 停止灯光请求
type StopLightRequest struct {
	// 灯光类型列表
	Ltypes               []LightType `protobuf:"varint,1,rep,packed,name=ltypes,proto3,enum=lightsService.LightType" json:"ltypes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *StopLightRequest) Reset()         { *m = StopLightRequest{} }
func (m *StopLightRequest) String() string { return proto.CompactTextString(m) }
func (*StopLightRequest) ProtoMessage()    {}
func (*StopLightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{4}
}

func (m *StopLightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopLightRequest.Unmarshal(m, b)
}
func (m *StopLightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopLightRequest.Marshal(b, m, deterministic)
}
func (m *StopLightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopLightRequest.Merge(m, src)
}
func (m *StopLightRequest) XXX_Size() int {
	return xxx_messageInfo_StopLightRequest.Size(m)
}
func (m *StopLightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopLightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopLightRequest proto.InternalMessageInfo

func (m *StopLightRequest) GetLtypes() []LightType {
	if m != nil {
		return m.Ltypes
	}
	return nil
}

// 停止灯光结果
type StopLightResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopLightResponse) Reset()         { *m = StopLightResponse{} }
func (m *StopLightResponse) String() string { return proto.CompactTextString(m) }
func (*StopLightResponse) ProtoMessage()    {}
func (*StopLightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{5}
}

func (m *StopLightResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopLightResponse.Unmarshal(m, b)
}
func (m *StopLightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopLightResponse.Marshal(b, m, deterministic)
}
func (m *StopLightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopLightResponse.Merge(m, src)
}
func (m *StopLightResponse) XXX_Size() int {
	return xxx_messageInfo_StopLightResponse.Size(m)
}
func (m *StopLightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopLightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopLightResponse proto.InternalMessageInfo

// 灯光数据明细
type LightInfo struct {
	// 灯光类型
	Ltype LightType `protobuf:"varint,1,opt,name=ltype,proto3,enum=lightsService.LightType" json:"ltype,omitempty"`
	// 灯光id
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// 灯光名
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 灯光帧列表
	Frames               []*LightFrame `protobuf:"bytes,4,rep,name=frames,proto3" json:"frames,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LightInfo) Reset()         { *m = LightInfo{} }
func (m *LightInfo) String() string { return proto.CompactTextString(m) }
func (*LightInfo) ProtoMessage()    {}
func (*LightInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{6}
}

func (m *LightInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LightInfo.Unmarshal(m, b)
}
func (m *LightInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LightInfo.Marshal(b, m, deterministic)
}
func (m *LightInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LightInfo.Merge(m, src)
}
func (m *LightInfo) XXX_Size() int {
	return xxx_messageInfo_LightInfo.Size(m)
}
func (m *LightInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LightInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LightInfo proto.InternalMessageInfo

func (m *LightInfo) GetLtype() LightType {
	if m != nil {
		return m.Ltype
	}
	return LightType_UNDEFINED
}

func (m *LightInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LightInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LightInfo) GetFrames() []*LightFrame {
	if m != nil {
		return m.Frames
	}
	return nil
}

// 灯光帧
type LightFrame struct {
	// 灯光hex数据列表
	// e.g. #31ebd1
	Colors []string `protobuf:"bytes,1,rep,name=colors,proto3" json:"colors,omitempty"`
	// 播放速度
	Speed uint32 `protobuf:"varint,2,opt,name=speed,proto3" json:"speed,omitempty"`
	// 播放模式
	Mode                 PlayMode `protobuf:"varint,3,opt,name=mode,proto3,enum=lightsService.PlayMode" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LightFrame) Reset()         { *m = LightFrame{} }
func (m *LightFrame) String() string { return proto.CompactTextString(m) }
func (*LightFrame) ProtoMessage()    {}
func (*LightFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{7}
}

func (m *LightFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LightFrame.Unmarshal(m, b)
}
func (m *LightFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LightFrame.Marshal(b, m, deterministic)
}
func (m *LightFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LightFrame.Merge(m, src)
}
func (m *LightFrame) XXX_Size() int {
	return xxx_messageInfo_LightFrame.Size(m)
}
func (m *LightFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_LightFrame.DiscardUnknown(m)
}

var xxx_messageInfo_LightFrame proto.InternalMessageInfo

func (m *LightFrame) GetColors() []string {
	if m != nil {
		return m.Colors
	}
	return nil
}

func (m *LightFrame) GetSpeed() uint32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *LightFrame) GetMode() PlayMode {
	if m != nil {
		return m.Mode
	}
	return PlayMode_PRESET
}

// 获取灯光数据请求
type ListLightsRequest struct {
	// 灯光类型
	Ltype                LightType `protobuf:"varint,1,opt,name=ltype,proto3,enum=lightsService.LightType" json:"ltype,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListLightsRequest) Reset()         { *m = ListLightsRequest{} }
func (m *ListLightsRequest) String() string { return proto.CompactTextString(m) }
func (*ListLightsRequest) ProtoMessage()    {}
func (*ListLightsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{8}
}

func (m *ListLightsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLightsRequest.Unmarshal(m, b)
}
func (m *ListLightsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLightsRequest.Marshal(b, m, deterministic)
}
func (m *ListLightsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLightsRequest.Merge(m, src)
}
func (m *ListLightsRequest) XXX_Size() int {
	return xxx_messageInfo_ListLightsRequest.Size(m)
}
func (m *ListLightsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLightsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLightsRequest proto.InternalMessageInfo

func (m *ListLightsRequest) GetLtype() LightType {
	if m != nil {
		return m.Ltype
	}
	return LightType_UNDEFINED
}

// 获取灯光数据结果
type ListLightsResponse struct {
	// 灯光数据明细列表
	LightsInfo           []*LightInfo `protobuf:"bytes,1,rep,name=lights_info,json=lightsInfo,proto3" json:"lights_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListLightsResponse) Reset()         { *m = ListLightsResponse{} }
func (m *ListLightsResponse) String() string { return proto.CompactTextString(m) }
func (*ListLightsResponse) ProtoMessage()    {}
func (*ListLightsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{9}
}

func (m *ListLightsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLightsResponse.Unmarshal(m, b)
}
func (m *ListLightsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLightsResponse.Marshal(b, m, deterministic)
}
func (m *ListLightsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLightsResponse.Merge(m, src)
}
func (m *ListLightsResponse) XXX_Size() int {
	return xxx_messageInfo_ListLightsResponse.Size(m)
}
func (m *ListLightsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLightsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLightsResponse proto.InternalMessageInfo

func (m *ListLightsResponse) GetLightsInfo() []*LightInfo {
	if m != nil {
		return m.LightsInfo
	}
	return nil
}

// 创建灯光请求
type NewLightRequest struct {
	// 灯光数据明细
	LightInfo            *LightInfo `protobuf:"bytes,1,opt,name=light_info,json=lightInfo,proto3" json:"light_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NewLightRequest) Reset()         { *m = NewLightRequest{} }
func (m *NewLightRequest) String() string { return proto.CompactTextString(m) }
func (*NewLightRequest) ProtoMessage()    {}
func (*NewLightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{10}
}

func (m *NewLightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewLightRequest.Unmarshal(m, b)
}
func (m *NewLightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewLightRequest.Marshal(b, m, deterministic)
}
func (m *NewLightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewLightRequest.Merge(m, src)
}
func (m *NewLightRequest) XXX_Size() int {
	return xxx_messageInfo_NewLightRequest.Size(m)
}
func (m *NewLightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewLightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewLightRequest proto.InternalMessageInfo

func (m *NewLightRequest) GetLightInfo() *LightInfo {
	if m != nil {
		return m.LightInfo
	}
	return nil
}

// 创建灯光结果
type NewLightResponse struct {
	// 灯光数据明细
	LightInfo            *LightInfo `protobuf:"bytes,1,opt,name=light_info,json=lightInfo,proto3" json:"light_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NewLightResponse) Reset()         { *m = NewLightResponse{} }
func (m *NewLightResponse) String() string { return proto.CompactTextString(m) }
func (*NewLightResponse) ProtoMessage()    {}
func (*NewLightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{11}
}

func (m *NewLightResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewLightResponse.Unmarshal(m, b)
}
func (m *NewLightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewLightResponse.Marshal(b, m, deterministic)
}
func (m *NewLightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewLightResponse.Merge(m, src)
}
func (m *NewLightResponse) XXX_Size() int {
	return xxx_messageInfo_NewLightResponse.Size(m)
}
func (m *NewLightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewLightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewLightResponse proto.InternalMessageInfo

func (m *NewLightResponse) GetLightInfo() *LightInfo {
	if m != nil {
		return m.LightInfo
	}
	return nil
}

// 更新灯光数据请求
type UpdateLightRequest struct {
	// 灯光数据明细
	LightInfo            *LightInfo `protobuf:"bytes,1,opt,name=light_info,json=lightInfo,proto3" json:"light_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateLightRequest) Reset()         { *m = UpdateLightRequest{} }
func (m *UpdateLightRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateLightRequest) ProtoMessage()    {}
func (*UpdateLightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{12}
}

func (m *UpdateLightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLightRequest.Unmarshal(m, b)
}
func (m *UpdateLightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLightRequest.Marshal(b, m, deterministic)
}
func (m *UpdateLightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLightRequest.Merge(m, src)
}
func (m *UpdateLightRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateLightRequest.Size(m)
}
func (m *UpdateLightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLightRequest proto.InternalMessageInfo

func (m *UpdateLightRequest) GetLightInfo() *LightInfo {
	if m != nil {
		return m.LightInfo
	}
	return nil
}

// 更新灯光数据结果
type UpdateLightResponse struct {
	// 灯光数据明细
	LightInfo            *LightInfo `protobuf:"bytes,1,opt,name=light_info,json=lightInfo,proto3" json:"light_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateLightResponse) Reset()         { *m = UpdateLightResponse{} }
func (m *UpdateLightResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateLightResponse) ProtoMessage()    {}
func (*UpdateLightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{13}
}

func (m *UpdateLightResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLightResponse.Unmarshal(m, b)
}
func (m *UpdateLightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLightResponse.Marshal(b, m, deterministic)
}
func (m *UpdateLightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLightResponse.Merge(m, src)
}
func (m *UpdateLightResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateLightResponse.Size(m)
}
func (m *UpdateLightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLightResponse proto.InternalMessageInfo

func (m *UpdateLightResponse) GetLightInfo() *LightInfo {
	if m != nil {
		return m.LightInfo
	}
	return nil
}

// 删除灯光请求
type DeleteLightsRequest struct {
	// 删除灯光id列表
	LightsId             []string `protobuf:"bytes,1,rep,name=lights_id,json=lightsId,proto3" json:"lights_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLightsRequest) Reset()         { *m = DeleteLightsRequest{} }
func (m *DeleteLightsRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteLightsRequest) ProtoMessage()    {}
func (*DeleteLightsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{14}
}

func (m *DeleteLightsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLightsRequest.Unmarshal(m, b)
}
func (m *DeleteLightsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLightsRequest.Marshal(b, m, deterministic)
}
func (m *DeleteLightsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLightsRequest.Merge(m, src)
}
func (m *DeleteLightsRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteLightsRequest.Size(m)
}
func (m *DeleteLightsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLightsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLightsRequest proto.InternalMessageInfo

func (m *DeleteLightsRequest) GetLightsId() []string {
	if m != nil {
		return m.LightsId
	}
	return nil
}

// 删除灯光结果
type DeleteLightsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLightsResponse) Reset()         { *m = DeleteLightsResponse{} }
func (m *DeleteLightsResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteLightsResponse) ProtoMessage()    {}
func (*DeleteLightsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{15}
}

func (m *DeleteLightsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLightsResponse.Unmarshal(m, b)
}
func (m *DeleteLightsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLightsResponse.Marshal(b, m, deterministic)
}
func (m *DeleteLightsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLightsResponse.Merge(m, src)
}
func (m *DeleteLightsResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteLightsResponse.Size(m)
}
func (m *DeleteLightsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLightsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLightsResponse proto.InternalMessageInfo

type StateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateRequest) Reset()         { *m = StateRequest{} }
func (m *StateRequest) String() string { return proto.CompactTextString(m) }
func (*StateRequest) ProtoMessage()    {}
func (*StateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{16}
}

func (m *StateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateRequest.Unmarshal(m, b)
}
func (m *StateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateRequest.Marshal(b, m, deterministic)
}
func (m *StateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateRequest.Merge(m, src)
}
func (m *StateRequest) XXX_Size() int {
	return xxx_messageInfo_StateRequest.Size(m)
}
func (m *StateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StateRequest proto.InternalMessageInfo

type StateResponse struct {
	// 当前是否启用
	IsActive bool `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// 当前是否在播放中
	IsPlaying            bool     `protobuf:"varint,2,opt,name=is_playing,json=isPlaying,proto3" json:"is_playing,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateResponse) Reset()         { *m = StateResponse{} }
func (m *StateResponse) String() string { return proto.CompactTextString(m) }
func (*StateResponse) ProtoMessage()    {}
func (*StateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{17}
}

func (m *StateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateResponse.Unmarshal(m, b)
}
func (m *StateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateResponse.Marshal(b, m, deterministic)
}
func (m *StateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateResponse.Merge(m, src)
}
func (m *StateResponse) XXX_Size() int {
	return xxx_messageInfo_StateResponse.Size(m)
}
func (m *StateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StateResponse proto.InternalMessageInfo

func (m *StateResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *StateResponse) GetIsPlaying() bool {
	if m != nil {
		return m.IsPlaying
	}
	return false
}

type SwitchRequest struct {
	// 启用与关闭
	Active               bool     `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SwitchRequest) Reset()         { *m = SwitchRequest{} }
func (m *SwitchRequest) String() string { return proto.CompactTextString(m) }
func (*SwitchRequest) ProtoMessage()    {}
func (*SwitchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{18}
}

func (m *SwitchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchRequest.Unmarshal(m, b)
}
func (m *SwitchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchRequest.Marshal(b, m, deterministic)
}
func (m *SwitchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchRequest.Merge(m, src)
}
func (m *SwitchRequest) XXX_Size() int {
	return xxx_messageInfo_SwitchRequest.Size(m)
}
func (m *SwitchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchRequest proto.InternalMessageInfo

func (m *SwitchRequest) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type SwitchResponse struct {
	// 当前是否启用
	IsActive             bool     `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SwitchResponse) Reset()         { *m = SwitchResponse{} }
func (m *SwitchResponse) String() string { return proto.CompactTextString(m) }
func (*SwitchResponse) ProtoMessage()    {}
func (*SwitchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e08e6632b915473, []int{19}
}

func (m *SwitchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchResponse.Unmarshal(m, b)
}
func (m *SwitchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchResponse.Marshal(b, m, deterministic)
}
func (m *SwitchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchResponse.Merge(m, src)
}
func (m *SwitchResponse) XXX_Size() int {
	return xxx_messageInfo_SwitchResponse.Size(m)
}
func (m *SwitchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchResponse proto.InternalMessageInfo

func (m *SwitchResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func init() {
	proto.RegisterEnum("lightsService.LightType", LightType_name, LightType_value)
	proto.RegisterEnum("lightsService.PlayMode", PlayMode_name, PlayMode_value)
	proto.RegisterType((*PreviewLightRequest)(nil), "lightsService.PreviewLightRequest")
	proto.RegisterType((*PreviewLightResponse)(nil), "lightsService.PreviewLightResponse")
	proto.RegisterType((*PlayLightRequest)(nil), "lightsService.PlayLightRequest")
	proto.RegisterType((*PlayLightResponse)(nil), "lightsService.PlayLightResponse")
	proto.RegisterType((*StopLightRequest)(nil), "lightsService.StopLightRequest")
	proto.RegisterType((*StopLightResponse)(nil), "lightsService.StopLightResponse")
	proto.RegisterType((*LightInfo)(nil), "lightsService.LightInfo")
	proto.RegisterType((*LightFrame)(nil), "lightsService.LightFrame")
	proto.RegisterType((*ListLightsRequest)(nil), "lightsService.ListLightsRequest")
	proto.RegisterType((*ListLightsResponse)(nil), "lightsService.ListLightsResponse")
	proto.RegisterType((*NewLightRequest)(nil), "lightsService.NewLightRequest")
	proto.RegisterType((*NewLightResponse)(nil), "lightsService.NewLightResponse")
	proto.RegisterType((*UpdateLightRequest)(nil), "lightsService.UpdateLightRequest")
	proto.RegisterType((*UpdateLightResponse)(nil), "lightsService.UpdateLightResponse")
	proto.RegisterType((*DeleteLightsRequest)(nil), "lightsService.DeleteLightsRequest")
	proto.RegisterType((*DeleteLightsResponse)(nil), "lightsService.DeleteLightsResponse")
	proto.RegisterType((*StateRequest)(nil), "lightsService.StateRequest")
	proto.RegisterType((*StateResponse)(nil), "lightsService.StateResponse")
	proto.RegisterType((*SwitchRequest)(nil), "lightsService.SwitchRequest")
	proto.RegisterType((*SwitchResponse)(nil), "lightsService.SwitchResponse")
}

func init() { proto.RegisterFile("lights.proto", fileDescriptor_8e08e6632b915473) }

var fileDescriptor_8e08e6632b915473 = []byte{
	// 875 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x96, 0xdd, 0x6e, 0xe3, 0x44,
	0x1c, 0xc5, 0xd7, 0x49, 0x1a, 0xec, 0x7f, 0x9a, 0xe0, 0x9d, 0x96, 0x92, 0x75, 0xdb, 0x6d, 0x76,
	0x96, 0x65, 0x57, 0x45, 0xb4, 0x10, 0x2e, 0x10, 0xbd, 0x8b, 0x9a, 0x54, 0x2d, 0x4d, 0xd3, 0x62,
	0x27, 0x42, 0x5c, 0x05, 0x93, 0x4c, 0xb2, 0x23, 0xb9, 0xb6, 0xc9, 0xcc, 0x66, 0x89, 0xc4, 0x05,
	0xe2, 0x11, 0xe0, 0x5d, 0x78, 0x11, 0x5e, 0x81, 0x07, 0x41, 0x9e, 0x19, 0x37, 0xfe, 0x48, 0x22,
	0xb4, 0xc0, 0xdd, 0x7c, 0x9c, 0x39, 0xbf, 0xf1, 0xcc, 0x7f, 0x8e, 0x0c, 0xdb, 0x1e, 0x9d, 0xbe,
	0xe6, 0xec, 0x24, 0x9c, 0x05, 0x3c, 0x40, 0x55, 0xd9, 0x73, 0xc8, 0x6c, 0x4e, 0x47, 0xc4, 0x3a,
	0x98, 0x06, 0xc1, 0xd4, 0x23, 0xa7, 0x6e, 0x48, 0x4f, 0x5d, 0xdf, 0x0f, 0xb8, 0xcb, 0x69, 0xe0,
	0x2b, 0x31, 0x7e, 0x01, 0x3b, 0x77, 0x33, 0x32, 0xa7, 0xe4, 0x6d, 0x37, 0x5a, 0x65, 0x93, 0x1f,
	0xdf, 0x10, 0xc6, 0x51, 0x0d, 0x0a, 0x74, 0x5c, 0xd7, 0x1a, 0xda, 0x2b, 0xc3, 0x2e, 0xd0, 0x31,
	0xde, 0x83, 0xdd, 0xb4, 0x8c, 0x85, 0x81, 0xcf, 0x08, 0x9e, 0x80, 0x79, 0xe7, 0xb9, 0x8b, 0xd4,
	0xda, 0x13, 0xd8, 0xf2, 0xf8, 0x22, 0x24, 0x62, 0x79, 0xad, 0x59, 0x3f, 0x49, 0xed, 0xe7, 0x44,
	0x68, 0xfb, 0x8b, 0x90, 0xd8, 0x52, 0xa6, 0x58, 0x85, 0x98, 0x85, 0x10, 0x94, 0x7c, 0xf7, 0x9e,
	0xd4, 0x8b, 0x62, 0x44, 0xb4, 0xf1, 0x0e, 0x3c, 0x4e, 0x70, 0x14, 0xbc, 0x0d, 0xa6, 0xc3, 0x83,
	0x30, 0x05, 0xff, 0x0c, 0xca, 0xc2, 0x95, 0xd5, 0xb5, 0x46, 0x71, 0x23, 0x5d, 0xe9, 0x22, 0xeb,
	0x84, 0x8b, 0xb2, 0xfe, 0x4d, 0x03, 0x43, 0x8c, 0x5c, 0xf9, 0x93, 0xe0, 0xff, 0xf8, 0x22, 0xf4,
	0x39, 0x94, 0x27, 0x33, 0xf7, 0x9e, 0xb0, 0x7a, 0xa9, 0x51, 0x7c, 0x55, 0x69, 0x3e, 0x59, 0x65,
	0x7a, 0x11, 0x29, 0x6c, 0x25, 0xc4, 0x53, 0x80, 0xe5, 0x28, 0xda, 0x83, 0xf2, 0x28, 0xf0, 0x82,
	0x99, 0xfc, 0x52, 0xc3, 0x56, 0x3d, 0xb4, 0x0b, 0x5b, 0x2c, 0x24, 0x44, 0xf2, 0xab, 0xb6, 0xec,
	0xa0, 0x4f, 0xa0, 0x74, 0x1f, 0x8c, 0xe5, 0x16, 0x6a, 0xcd, 0x0f, 0x33, 0xb0, 0xe8, 0x6c, 0x6f,
	0x82, 0x31, 0xb1, 0x85, 0x08, 0x9f, 0xc3, 0xe3, 0x2e, 0x65, 0x5c, 0xc0, 0xd8, 0x3b, 0x5e, 0x2b,
	0xbe, 0x05, 0x94, 0x34, 0x91, 0x07, 0x8b, 0xbe, 0x82, 0x8a, 0x5c, 0x37, 0xa4, 0xfe, 0x24, 0x10,
	0x5b, 0xaf, 0xac, 0xf6, 0x8a, 0x4e, 0xde, 0x06, 0x39, 0x11, 0xb5, 0xf1, 0xd7, 0xf0, 0x7e, 0x2f,
	0x53, 0xa6, 0x5f, 0x82, 0x14, 0xc4, 0x66, 0xda, 0x46, 0x33, 0xc3, 0x8b, 0x9b, 0xf8, 0x1a, 0xcc,
	0x5e, 0xa6, 0x96, 0xdf, 0xdd, 0xec, 0x06, 0xd0, 0x20, 0x1c, 0xbb, 0x9c, 0xfc, 0x37, 0x7b, 0xeb,
	0xc1, 0x4e, 0xca, 0xee, 0xdf, 0x6e, 0xaf, 0x09, 0x3b, 0x6d, 0xe2, 0x11, 0xe5, 0xf7, 0x70, 0x9f,
	0xfb, 0x60, 0xc4, 0x37, 0x31, 0x56, 0x25, 0xa4, 0xab, 0xd3, 0x16, 0xef, 0x3d, 0xbd, 0x46, 0xbd,
	0x8b, 0x1a, 0x6c, 0x3b, 0xdc, 0xe5, 0x44, 0x99, 0xe0, 0x6b, 0xa8, 0xaa, 0xbe, 0xda, 0xe5, 0x3e,
	0x18, 0x94, 0x0d, 0xdd, 0x11, 0xa7, 0x73, 0x59, 0x29, 0xba, 0xad, 0x53, 0xd6, 0x12, 0x7d, 0x74,
	0x08, 0x40, 0xd9, 0x30, 0xf4, 0xdc, 0x05, 0xf5, 0xa7, 0xa2, 0x3e, 0x75, 0xdb, 0xa0, 0xec, 0x4e,
	0x0e, 0xe0, 0x97, 0x50, 0x75, 0xde, 0x52, 0x3e, 0x7a, 0x1d, 0x6f, 0x71, 0x0f, 0xca, 0x29, 0x27,
	0xd5, 0xc3, 0x9f, 0x42, 0x2d, 0x16, 0xfe, 0x03, 0xec, 0xf1, 0x99, 0x7a, 0xcb, 0x51, 0x75, 0xa2,
	0x2a, 0x18, 0x83, 0x5e, 0xbb, 0x73, 0x71, 0xd5, 0xeb, 0xb4, 0xcd, 0x47, 0xc8, 0x80, 0xad, 0x9b,
	0xdb, 0x41, 0xff, 0xd2, 0xd4, 0xa2, 0xe6, 0x65, 0xab, 0xd7, 0x76, 0xcc, 0x02, 0xd2, 0xa1, 0xd4,
	0x69, 0xd9, 0x8e, 0x59, 0x3c, 0xbe, 0x04, 0x3d, 0x7e, 0x1c, 0x08, 0xa0, 0x7c, 0x67, 0x77, 0x9c,
	0x4e, 0xdf, 0x7c, 0x14, 0xb5, 0x5b, 0xdd, 0x6f, 0x5b, 0xdf, 0x39, 0xa6, 0x86, 0x2a, 0xf0, 0xde,
	0x4d, 0xcb, 0xfe, 0x66, 0xd0, 0xe9, 0x98, 0x85, 0xc8, 0xe5, 0xa2, 0xdb, 0x72, 0x2e, 0xcd, 0x22,
	0xda, 0x06, 0xbd, 0x7f, 0x75, 0x7e, 0xdd, 0xbf, 0x3d, 0xbf, 0x36, 0x4b, 0xcd, 0x3f, 0x74, 0xa8,
	0x76, 0x93, 0xb7, 0x85, 0x7e, 0xd1, 0x60, 0x3b, 0x99, 0xaa, 0x08, 0x67, 0x9f, 0x65, 0x3e, 0x99,
	0xad, 0xe7, 0x1b, 0x35, 0xea, 0x9a, 0x5e, 0xfe, 0xfa, 0xe7, 0x5f, 0xbf, 0x17, 0x9e, 0xe1, 0x03,
	0x91, 0xfa, 0xf3, 0xe6, 0xa9, 0x5c, 0x73, 0x1a, 0x4a, 0xf1, 0x50, 0x74, 0xcf, 0xb4, 0x63, 0xc4,
	0xc1, 0x78, 0xc8, 0x55, 0x74, 0xb4, 0x22, 0x15, 0x52, 0xec, 0xc6, 0x7a, 0x81, 0x02, 0x7f, 0x24,
	0xc0, 0x4f, 0xf1, 0x93, 0x2c, 0xd8, 0x73, 0x17, 0x29, 0xea, 0x43, 0xe4, 0xe6, 0xa8, 0xd9, 0x48,
	0xcf, 0x51, 0xf3, 0x69, 0xbd, 0x8e, 0xca, 0x78, 0x10, 0x2e, 0xa9, 0x3f, 0x45, 0xf1, 0x19, 0x07,
	0x12, 0x6a, 0xe4, 0x9e, 0x4e, 0x26, 0xf0, 0xac, 0x67, 0x1b, 0x14, 0x0a, 0xfc, 0x42, 0x80, 0x8f,
	0xb0, 0x95, 0x01, 0x7b, 0x94, 0x71, 0x09, 0x66, 0x11, 0x39, 0x04, 0x3d, 0x4e, 0x1b, 0xf4, 0x34,
	0xe3, 0x9a, 0x89, 0x34, 0xeb, 0x68, 0xed, 0xbc, 0x62, 0x3e, 0x17, 0xcc, 0x43, 0x5c, 0xcf, 0x30,
	0xfd, 0xe4, 0xbd, 0xfe, 0x0c, 0x95, 0x44, 0x86, 0xa0, 0xec, 0xa7, 0xe4, 0xe3, 0xca, 0xc2, 0x9b,
	0x24, 0x0a, 0xfd, 0xb1, 0x40, 0x37, 0xf0, 0x7e, 0x06, 0xfd, 0x46, 0x68, 0x97, 0xf4, 0xa8, 0xb0,
	0x93, 0xf1, 0x91, 0x2b, 0xec, 0x15, 0x79, 0x94, 0x2b, 0xec, 0x95, 0xf9, 0xb3, 0xae, 0xb0, 0xc7,
	0x42, 0x9c, 0x38, 0xf2, 0xef, 0x61, 0x4b, 0x04, 0x13, 0xda, 0xcf, 0x55, 0xcf, 0x32, 0xbe, 0xac,
	0x83, 0xd5, 0x93, 0x0a, 0x76, 0x20, 0x60, 0x7b, 0x68, 0x37, 0x57, 0x56, 0x91, 0xf1, 0x14, 0xca,
	0x32, 0x84, 0x50, 0xce, 0x25, 0x19, 0x62, 0xd6, 0xe1, 0x9a, 0x59, 0x05, 0x69, 0x08, 0x88, 0x85,
	0x3f, 0xc8, 0x42, 0x84, 0xec, 0x4c, 0x3b, 0xfe, 0xa1, 0x2c, 0xfe, 0xd4, 0xbe, 0xf8, 0x3b, 0x00,
	0x00, 0xff, 0xff, 0x4a, 0x7a, 0x3f, 0x9b, 0xe6, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LightsServiceClient is the client API for LightsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LightsServiceClient interface {
	// 预览灯光
	// 创建灯光后使用此方法生成灯光文件
	// 在未生成灯光文件前调用PlayLight将无效
	PreviewLight(ctx context.Context, in *PreviewLightRequest, opts ...grpc.CallOption) (*PreviewLightResponse, error)
	// 播放灯光
	// 需在播放前执行PreviewLight生成灯光文件
	PlayLight(ctx context.Context, in *PlayLightRequest, opts ...grpc.CallOption) (*PlayLightResponse, error)
	// 停止灯光
	StopLight(ctx context.Context, in *StopLightRequest, opts ...grpc.CallOption) (*StopLightResponse, error)
	// 获取灯光数据
	ListLights(ctx context.Context, in *ListLightsRequest, opts ...grpc.CallOption) (*ListLightsResponse, error)
	// 创建灯光
	NewLight(ctx context.Context, in *NewLightRequest, opts ...grpc.CallOption) (*NewLightResponse, error)
	// 更新灯光数据
	UpdateLight(ctx context.Context, in *UpdateLightRequest, opts ...grpc.CallOption) (*UpdateLightResponse, error)
	// 删除灯光
	DeleteLights(ctx context.Context, in *DeleteLightsRequest, opts ...grpc.CallOption) (*DeleteLightsResponse, error)
	// 获取当前灯光模块状态
	State(ctx context.Context, in *StateRequest, opts ...grpc.CallOption) (*StateResponse, error)
	// 控制灯光的开关
	Switch(ctx context.Context, in *SwitchRequest, opts ...grpc.CallOption) (*SwitchResponse, error)
}

type lightsServiceClient struct {
	cc *grpc.ClientConn
}

func NewLightsServiceClient(cc *grpc.ClientConn) LightsServiceClient {
	return &lightsServiceClient{cc}
}

func (c *lightsServiceClient) PreviewLight(ctx context.Context, in *PreviewLightRequest, opts ...grpc.CallOption) (*PreviewLightResponse, error) {
	out := new(PreviewLightResponse)
	err := c.cc.Invoke(ctx, "/lightsService.LightsService/PreviewLight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightsServiceClient) PlayLight(ctx context.Context, in *PlayLightRequest, opts ...grpc.CallOption) (*PlayLightResponse, error) {
	out := new(PlayLightResponse)
	err := c.cc.Invoke(ctx, "/lightsService.LightsService/PlayLight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightsServiceClient) StopLight(ctx context.Context, in *StopLightRequest, opts ...grpc.CallOption) (*StopLightResponse, error) {
	out := new(StopLightResponse)
	err := c.cc.Invoke(ctx, "/lightsService.LightsService/StopLight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightsServiceClient) ListLights(ctx context.Context, in *ListLightsRequest, opts ...grpc.CallOption) (*ListLightsResponse, error) {
	out := new(ListLightsResponse)
	err := c.cc.Invoke(ctx, "/lightsService.LightsService/ListLights", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightsServiceClient) NewLight(ctx context.Context, in *NewLightRequest, opts ...grpc.CallOption) (*NewLightResponse, error) {
	out := new(NewLightResponse)
	err := c.cc.Invoke(ctx, "/lightsService.LightsService/NewLight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightsServiceClient) UpdateLight(ctx context.Context, in *UpdateLightRequest, opts ...grpc.CallOption) (*UpdateLightResponse, error) {
	out := new(UpdateLightResponse)
	err := c.cc.Invoke(ctx, "/lightsService.LightsService/UpdateLight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightsServiceClient) DeleteLights(ctx context.Context, in *DeleteLightsRequest, opts ...grpc.CallOption) (*DeleteLightsResponse, error) {
	out := new(DeleteLightsResponse)
	err := c.cc.Invoke(ctx, "/lightsService.LightsService/DeleteLights", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightsServiceClient) State(ctx context.Context, in *StateRequest, opts ...grpc.CallOption) (*StateResponse, error) {
	out := new(StateResponse)
	err := c.cc.Invoke(ctx, "/lightsService.LightsService/State", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightsServiceClient) Switch(ctx context.Context, in *SwitchRequest, opts ...grpc.CallOption) (*SwitchResponse, error) {
	out := new(SwitchResponse)
	err := c.cc.Invoke(ctx, "/lightsService.LightsService/Switch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LightsServiceServer is the server API for LightsService service.
type LightsServiceServer interface {
	// 预览灯光
	// 创建灯光后使用此方法生成灯光文件
	// 在未生成灯光文件前调用PlayLight将无效
	PreviewLight(context.Context, *PreviewLightRequest) (*PreviewLightResponse, error)
	// 播放灯光
	// 需在播放前执行PreviewLight生成灯光文件
	PlayLight(context.Context, *PlayLightRequest) (*PlayLightResponse, error)
	// 停止灯光
	StopLight(context.Context, *StopLightRequest) (*StopLightResponse, error)
	// 获取灯光数据
	ListLights(context.Context, *ListLightsRequest) (*ListLightsResponse, error)
	// 创建灯光
	NewLight(context.Context, *NewLightRequest) (*NewLightResponse, error)
	// 更新灯光数据
	UpdateLight(context.Context, *UpdateLightRequest) (*UpdateLightResponse, error)
	// 删除灯光
	DeleteLights(context.Context, *DeleteLightsRequest) (*DeleteLightsResponse, error)
	// 获取当前灯光模块状态
	State(context.Context, *StateRequest) (*StateResponse, error)
	// 控制灯光的开关
	Switch(context.Context, *SwitchRequest) (*SwitchResponse, error)
}

// UnimplementedLightsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLightsServiceServer struct {
}

func (*UnimplementedLightsServiceServer) PreviewLight(ctx context.Context, req *PreviewLightRequest) (*PreviewLightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PreviewLight not implemented")
}
func (*UnimplementedLightsServiceServer) PlayLight(ctx context.Context, req *PlayLightRequest) (*PlayLightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayLight not implemented")
}
func (*UnimplementedLightsServiceServer) StopLight(ctx context.Context, req *StopLightRequest) (*StopLightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopLight not implemented")
}
func (*UnimplementedLightsServiceServer) ListLights(ctx context.Context, req *ListLightsRequest) (*ListLightsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLights not implemented")
}
func (*UnimplementedLightsServiceServer) NewLight(ctx context.Context, req *NewLightRequest) (*NewLightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewLight not implemented")
}
func (*UnimplementedLightsServiceServer) UpdateLight(ctx context.Context, req *UpdateLightRequest) (*UpdateLightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLight not implemented")
}
func (*UnimplementedLightsServiceServer) DeleteLights(ctx context.Context, req *DeleteLightsRequest) (*DeleteLightsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLights not implemented")
}
func (*UnimplementedLightsServiceServer) State(ctx context.Context, req *StateRequest) (*StateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method State not implemented")
}
func (*UnimplementedLightsServiceServer) Switch(ctx context.Context, req *SwitchRequest) (*SwitchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Switch not implemented")
}

func RegisterLightsServiceServer(s *grpc.Server, srv LightsServiceServer) {
	s.RegisterService(&_LightsService_serviceDesc, srv)
}

func _LightsService_PreviewLight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PreviewLightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightsServiceServer).PreviewLight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightsService.LightsService/PreviewLight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightsServiceServer).PreviewLight(ctx, req.(*PreviewLightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightsService_PlayLight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayLightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightsServiceServer).PlayLight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightsService.LightsService/PlayLight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightsServiceServer).PlayLight(ctx, req.(*PlayLightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightsService_StopLight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopLightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightsServiceServer).StopLight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightsService.LightsService/StopLight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightsServiceServer).StopLight(ctx, req.(*StopLightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightsService_ListLights_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLightsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightsServiceServer).ListLights(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightsService.LightsService/ListLights",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightsServiceServer).ListLights(ctx, req.(*ListLightsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightsService_NewLight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewLightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightsServiceServer).NewLight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightsService.LightsService/NewLight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightsServiceServer).NewLight(ctx, req.(*NewLightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightsService_UpdateLight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightsServiceServer).UpdateLight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightsService.LightsService/UpdateLight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightsServiceServer).UpdateLight(ctx, req.(*UpdateLightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightsService_DeleteLights_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLightsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightsServiceServer).DeleteLights(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightsService.LightsService/DeleteLights",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightsServiceServer).DeleteLights(ctx, req.(*DeleteLightsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightsService_State_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightsServiceServer).State(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightsService.LightsService/State",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightsServiceServer).State(ctx, req.(*StateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightsService_Switch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SwitchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightsServiceServer).Switch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lightsService.LightsService/Switch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightsServiceServer).Switch(ctx, req.(*SwitchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LightsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lightsService.LightsService",
	HandlerType: (*LightsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PreviewLight",
			Handler:    _LightsService_PreviewLight_Handler,
		},
		{
			MethodName: "PlayLight",
			Handler:    _LightsService_PlayLight_Handler,
		},
		{
			MethodName: "StopLight",
			Handler:    _LightsService_StopLight_Handler,
		},
		{
			MethodName: "ListLights",
			Handler:    _LightsService_ListLights_Handler,
		},
		{
			MethodName: "NewLight",
			Handler:    _LightsService_NewLight_Handler,
		},
		{
			MethodName: "UpdateLight",
			Handler:    _LightsService_UpdateLight_Handler,
		},
		{
			MethodName: "DeleteLights",
			Handler:    _LightsService_DeleteLights_Handler,
		},
		{
			MethodName: "State",
			Handler:    _LightsService_State_Handler,
		},
		{
			MethodName: "Switch",
			Handler:    _LightsService_Switch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lights.proto",
}
