// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: messaging.proto

package messagingService

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// 订阅消息类型
type Subscribe struct {
	// 订阅的主题列表
	Topics               []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subscribe) Reset()         { *m = Subscribe{} }
func (m *Subscribe) String() string { return proto.CompactTextString(m) }
func (*Subscribe) ProtoMessage()    {}
func (*Subscribe) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{0}
}
func (m *Subscribe) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Subscribe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Subscribe.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Subscribe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscribe.Merge(m, src)
}
func (m *Subscribe) XXX_Size() int {
	return m.Size()
}
func (m *Subscribe) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscribe.DiscardUnknown(m)
}

var xxx_messageInfo_Subscribe proto.InternalMessageInfo

func (m *Subscribe) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

// 取消订阅消息类型
type Unsubscribe struct {
	// 取消订阅的主题列表
	Topics               []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Unsubscribe) Reset()         { *m = Unsubscribe{} }
func (m *Unsubscribe) String() string { return proto.CompactTextString(m) }
func (*Unsubscribe) ProtoMessage()    {}
func (*Unsubscribe) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{1}
}
func (m *Unsubscribe) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Unsubscribe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Unsubscribe.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Unsubscribe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Unsubscribe.Merge(m, src)
}
func (m *Unsubscribe) XXX_Size() int {
	return m.Size()
}
func (m *Unsubscribe) XXX_DiscardUnknown() {
	xxx_messageInfo_Unsubscribe.DiscardUnknown(m)
}

var xxx_messageInfo_Unsubscribe proto.InternalMessageInfo

func (m *Unsubscribe) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

// 消息类型
type MessagePublish struct {
	// 数据发布的主题列表
	Topics []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	// 消息内容
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessagePublish) Reset()         { *m = MessagePublish{} }
func (m *MessagePublish) String() string { return proto.CompactTextString(m) }
func (*MessagePublish) ProtoMessage()    {}
func (*MessagePublish) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{2}
}
func (m *MessagePublish) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MessagePublish) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MessagePublish.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MessagePublish) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagePublish.Merge(m, src)
}
func (m *MessagePublish) XXX_Size() int {
	return m.Size()
}
func (m *MessagePublish) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagePublish.DiscardUnknown(m)
}

var xxx_messageInfo_MessagePublish proto.InternalMessageInfo

func (m *MessagePublish) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *MessagePublish) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type MessagingRequest struct {
	// 消息类型oneof
	//
	// Types that are valid to be assigned to MessagingOneof:
	//	*MessagingRequest_Subscribe
	//	*MessagingRequest_Unsubscribe
	//	*MessagingRequest_MessagePublish
	MessagingOneof       isMessagingRequest_MessagingOneof `protobuf_oneof:"messaging_oneof"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *MessagingRequest) Reset()         { *m = MessagingRequest{} }
func (m *MessagingRequest) String() string { return proto.CompactTextString(m) }
func (*MessagingRequest) ProtoMessage()    {}
func (*MessagingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{3}
}
func (m *MessagingRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MessagingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MessagingRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MessagingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagingRequest.Merge(m, src)
}
func (m *MessagingRequest) XXX_Size() int {
	return m.Size()
}
func (m *MessagingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MessagingRequest proto.InternalMessageInfo

type isMessagingRequest_MessagingOneof interface {
	isMessagingRequest_MessagingOneof()
	MarshalTo([]byte) (int, error)
	Size() int
}

type MessagingRequest_Subscribe struct {
	Subscribe *Subscribe `protobuf:"bytes,1,opt,name=subscribe,proto3,oneof"`
}
type MessagingRequest_Unsubscribe struct {
	Unsubscribe *Unsubscribe `protobuf:"bytes,2,opt,name=unsubscribe,proto3,oneof"`
}
type MessagingRequest_MessagePublish struct {
	MessagePublish *MessagePublish `protobuf:"bytes,3,opt,name=message_publish,json=messagePublish,proto3,oneof"`
}

func (*MessagingRequest_Subscribe) isMessagingRequest_MessagingOneof()      {}
func (*MessagingRequest_Unsubscribe) isMessagingRequest_MessagingOneof()    {}
func (*MessagingRequest_MessagePublish) isMessagingRequest_MessagingOneof() {}

func (m *MessagingRequest) GetMessagingOneof() isMessagingRequest_MessagingOneof {
	if m != nil {
		return m.MessagingOneof
	}
	return nil
}

func (m *MessagingRequest) GetSubscribe() *Subscribe {
	if x, ok := m.GetMessagingOneof().(*MessagingRequest_Subscribe); ok {
		return x.Subscribe
	}
	return nil
}

func (m *MessagingRequest) GetUnsubscribe() *Unsubscribe {
	if x, ok := m.GetMessagingOneof().(*MessagingRequest_Unsubscribe); ok {
		return x.Unsubscribe
	}
	return nil
}

func (m *MessagingRequest) GetMessagePublish() *MessagePublish {
	if x, ok := m.GetMessagingOneof().(*MessagingRequest_MessagePublish); ok {
		return x.MessagePublish
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MessagingRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MessagingRequest_OneofMarshaler, _MessagingRequest_OneofUnmarshaler, _MessagingRequest_OneofSizer, []interface{}{
		(*MessagingRequest_Subscribe)(nil),
		(*MessagingRequest_Unsubscribe)(nil),
		(*MessagingRequest_MessagePublish)(nil),
	}
}

func _MessagingRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MessagingRequest)
	// messaging_oneof
	switch x := m.MessagingOneof.(type) {
	case *MessagingRequest_Subscribe:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Subscribe); err != nil {
			return err
		}
	case *MessagingRequest_Unsubscribe:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Unsubscribe); err != nil {
			return err
		}
	case *MessagingRequest_MessagePublish:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MessagePublish); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MessagingRequest.MessagingOneof has unexpected type %T", x)
	}
	return nil
}

func _MessagingRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MessagingRequest)
	switch tag {
	case 1: // messaging_oneof.subscribe
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Subscribe)
		err := b.DecodeMessage(msg)
		m.MessagingOneof = &MessagingRequest_Subscribe{msg}
		return true, err
	case 2: // messaging_oneof.unsubscribe
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Unsubscribe)
		err := b.DecodeMessage(msg)
		m.MessagingOneof = &MessagingRequest_Unsubscribe{msg}
		return true, err
	case 3: // messaging_oneof.message_publish
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MessagePublish)
		err := b.DecodeMessage(msg)
		m.MessagingOneof = &MessagingRequest_MessagePublish{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MessagingRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MessagingRequest)
	// messaging_oneof
	switch x := m.MessagingOneof.(type) {
	case *MessagingRequest_Subscribe:
		s := proto.Size(x.Subscribe)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessagingRequest_Unsubscribe:
		s := proto.Size(x.Unsubscribe)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessagingRequest_MessagePublish:
		s := proto.Size(x.MessagePublish)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type MessagingResponse struct {
	// 消息主题
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// 消息内容
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessagingResponse) Reset()         { *m = MessagingResponse{} }
func (m *MessagingResponse) String() string { return proto.CompactTextString(m) }
func (*MessagingResponse) ProtoMessage()    {}
func (*MessagingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{4}
}
func (m *MessagingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MessagingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MessagingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MessagingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagingResponse.Merge(m, src)
}
func (m *MessagingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MessagingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MessagingResponse proto.InternalMessageInfo

func (m *MessagingResponse) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *MessagingResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*Subscribe)(nil), "messagingService.Subscribe")
	proto.RegisterType((*Unsubscribe)(nil), "messagingService.Unsubscribe")
	proto.RegisterType((*MessagePublish)(nil), "messagingService.MessagePublish")
	proto.RegisterType((*MessagingRequest)(nil), "messagingService.MessagingRequest")
	proto.RegisterType((*MessagingResponse)(nil), "messagingService.MessagingResponse")
}

func init() { proto.RegisterFile("messaging.proto", fileDescriptor_42a1718997f046ec) }

var fileDescriptor_42a1718997f046ec = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xcd, 0x4a, 0xf3, 0x40,
	0x14, 0xcd, 0x7c, 0xe5, 0xab, 0xe4, 0x46, 0x6a, 0x3b, 0x88, 0x04, 0xc5, 0x1a, 0xa6, 0x08, 0xd9,
	0x34, 0x48, 0x75, 0xe7, 0xca, 0xba, 0x29, 0x48, 0x41, 0xa6, 0xb8, 0x71, 0x53, 0x92, 0x74, 0xac,
	0x29, 0xed, 0x4c, 0xcc, 0x24, 0x85, 0xbe, 0xa1, 0x4b, 0x1f, 0x41, 0xf2, 0x08, 0x3e, 0x81, 0x30,
	0x69, 0x7e, 0x6a, 0x89, 0x2e, 0xef, 0xe1, 0xdc, 0x73, 0xcf, 0x39, 0x33, 0x70, 0xb4, 0x62, 0x52,
	0xba, 0xf3, 0x80, 0xcf, 0x9d, 0x30, 0x12, 0xb1, 0xc0, 0xed, 0x02, 0x98, 0xb0, 0x68, 0x1d, 0xf8,
	0x8c, 0xf4, 0x40, 0x9f, 0x24, 0x9e, 0xf4, 0xa3, 0xc0, 0x63, 0xf8, 0x04, 0x9a, 0xb1, 0x08, 0x03,
	0x5f, 0x9a, 0xc8, 0x6a, 0xd8, 0x3a, 0xdd, 0x4e, 0xe4, 0x12, 0x8c, 0x27, 0x2e, 0xff, 0xa4, 0x0d,
	0xa1, 0x35, 0x56, 0xfa, 0xec, 0x31, 0xf1, 0x96, 0x81, 0x7c, 0xad, 0x63, 0x62, 0x13, 0x0e, 0x42,
	0x77, 0xb3, 0x14, 0xee, 0xcc, 0xfc, 0x67, 0x21, 0xfb, 0x90, 0xe6, 0x23, 0xf9, 0x42, 0xd0, 0x1e,
	0xe7, 0x26, 0x29, 0x7b, 0x4b, 0x98, 0x8c, 0xf1, 0x2d, 0xe8, 0xc5, 0x75, 0x13, 0x59, 0xc8, 0x36,
	0x06, 0x67, 0xce, 0xcf, 0x28, 0x4e, 0x91, 0x63, 0xa4, 0xd1, 0x92, 0x8f, 0xef, 0xc0, 0x48, 0x4a,
	0xf3, 0xea, 0x9e, 0x31, 0x38, 0xdf, 0x5f, 0xaf, 0x24, 0x1c, 0x69, 0xb4, 0xba, 0x83, 0x1f, 0xf2,
	0x26, 0xd9, 0x34, 0xcc, 0x92, 0x99, 0x0d, 0x25, 0x63, 0xed, 0xcb, 0xec, 0x36, 0x30, 0xd2, 0x68,
	0x6b, 0xb5, 0x83, 0x0c, 0x3b, 0x95, 0x67, 0x99, 0x0a, 0xce, 0xc4, 0x0b, 0xb9, 0x87, 0x4e, 0x25,
	0xb3, 0x0c, 0x05, 0x97, 0x0c, 0x1f, 0xc3, 0x7f, 0xd5, 0x96, 0x0a, 0xac, 0xd3, 0x6c, 0xa8, 0x6f,
	0x6e, 0xc0, 0x2b, 0xc5, 0x6d, 0xcd, 0xe0, 0x67, 0xd0, 0x0b, 0x0c, 0x93, 0x3a, 0xb3, 0x65, 0xd3,
	0xa7, 0xbd, 0x5f, 0x39, 0x99, 0x33, 0xa2, 0xd9, 0xe8, 0x0a, 0x0d, 0xfb, 0xef, 0x69, 0x17, 0x7d,
	0xa4, 0x5d, 0xf4, 0x99, 0x76, 0x11, 0x5c, 0xf8, 0x62, 0xe5, 0x2c, 0x16, 0xfd, 0x48, 0x78, 0x22,
	0x76, 0x5c, 0x3e, 0xdb, 0xdc, 0xc8, 0x68, 0x5d, 0xaa, 0x79, 0x4d, 0xf5, 0x03, 0xaf, 0xbf, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x03, 0xf6, 0xb4, 0x6f, 0x94, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessagingServiceClient is the client API for MessagingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessagingServiceClient interface {
	// Messaging为消息发布订阅方法
	Messaging(ctx context.Context, opts ...grpc.CallOption) (MessagingService_MessagingClient, error)
}

type messagingServiceClient struct {
	cc *grpc.ClientConn
}

func NewMessagingServiceClient(cc *grpc.ClientConn) MessagingServiceClient {
	return &messagingServiceClient{cc}
}

func (c *messagingServiceClient) Messaging(ctx context.Context, opts ...grpc.CallOption) (MessagingService_MessagingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessagingService_serviceDesc.Streams[0], "/messagingService.MessagingService/Messaging", opts...)
	if err != nil {
		return nil, err
	}
	x := &messagingServiceMessagingClient{stream}
	return x, nil
}

type MessagingService_MessagingClient interface {
	Send(*MessagingRequest) error
	Recv() (*MessagingResponse, error)
	grpc.ClientStream
}

type messagingServiceMessagingClient struct {
	grpc.ClientStream
}

func (x *messagingServiceMessagingClient) Send(m *MessagingRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *messagingServiceMessagingClient) Recv() (*MessagingResponse, error) {
	m := new(MessagingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MessagingServiceServer is the server API for MessagingService service.
type MessagingServiceServer interface {
	// Messaging为消息发布订阅方法
	Messaging(MessagingService_MessagingServer) error
}

// UnimplementedMessagingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMessagingServiceServer struct {
}

func (*UnimplementedMessagingServiceServer) Messaging(srv MessagingService_MessagingServer) error {
	return status.Errorf(codes.Unimplemented, "method Messaging not implemented")
}

func RegisterMessagingServiceServer(s *grpc.Server, srv MessagingServiceServer) {
	s.RegisterService(&_MessagingService_serviceDesc, srv)
}

func _MessagingService_Messaging_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MessagingServiceServer).Messaging(&messagingServiceMessagingServer{stream})
}

type MessagingService_MessagingServer interface {
	Send(*MessagingResponse) error
	Recv() (*MessagingRequest, error)
	grpc.ServerStream
}

type messagingServiceMessagingServer struct {
	grpc.ServerStream
}

func (x *messagingServiceMessagingServer) Send(m *MessagingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *messagingServiceMessagingServer) Recv() (*MessagingRequest, error) {
	m := new(MessagingRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MessagingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "messagingService.MessagingService",
	HandlerType: (*MessagingServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Messaging",
			Handler:       _MessagingService_Messaging_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "messaging.proto",
}

func (m *Subscribe) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Subscribe) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Topics) > 0 {
		for _, s := range m.Topics {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Unsubscribe) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Unsubscribe) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Topics) > 0 {
		for _, s := range m.Topics {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MessagePublish) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MessagePublish) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Topics) > 0 {
		for _, s := range m.Topics {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.Payload) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintMessaging(dAtA, i, uint64(len(m.Payload)))
		i += copy(dAtA[i:], m.Payload)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MessagingRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MessagingRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.MessagingOneof != nil {
		nn1, err1 := m.MessagingOneof.MarshalTo(dAtA[i:])
		if err1 != nil {
			return 0, err1
		}
		i += nn1
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MessagingRequest_Subscribe) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Subscribe != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMessaging(dAtA, i, uint64(m.Subscribe.Size()))
		n2, err2 := m.Subscribe.MarshalTo(dAtA[i:])
		if err2 != nil {
			return 0, err2
		}
		i += n2
	}
	return i, nil
}
func (m *MessagingRequest_Unsubscribe) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Unsubscribe != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintMessaging(dAtA, i, uint64(m.Unsubscribe.Size()))
		n3, err3 := m.Unsubscribe.MarshalTo(dAtA[i:])
		if err3 != nil {
			return 0, err3
		}
		i += n3
	}
	return i, nil
}
func (m *MessagingRequest_MessagePublish) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.MessagePublish != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMessaging(dAtA, i, uint64(m.MessagePublish.Size()))
		n4, err4 := m.MessagePublish.MarshalTo(dAtA[i:])
		if err4 != nil {
			return 0, err4
		}
		i += n4
	}
	return i, nil
}
func (m *MessagingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MessagingResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Topic) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMessaging(dAtA, i, uint64(len(m.Topic)))
		i += copy(dAtA[i:], m.Topic)
	}
	if len(m.Payload) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintMessaging(dAtA, i, uint64(len(m.Payload)))
		i += copy(dAtA[i:], m.Payload)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintMessaging(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Subscribe) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Topics) > 0 {
		for _, s := range m.Topics {
			l = len(s)
			n += 1 + l + sovMessaging(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Unsubscribe) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Topics) > 0 {
		for _, s := range m.Topics {
			l = len(s)
			n += 1 + l + sovMessaging(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MessagePublish) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Topics) > 0 {
		for _, s := range m.Topics {
			l = len(s)
			n += 1 + l + sovMessaging(uint64(l))
		}
	}
	l = len(m.Payload)
	if l > 0 {
		n += 1 + l + sovMessaging(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MessagingRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MessagingOneof != nil {
		n += m.MessagingOneof.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MessagingRequest_Subscribe) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Subscribe != nil {
		l = m.Subscribe.Size()
		n += 1 + l + sovMessaging(uint64(l))
	}
	return n
}
func (m *MessagingRequest_Unsubscribe) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Unsubscribe != nil {
		l = m.Unsubscribe.Size()
		n += 1 + l + sovMessaging(uint64(l))
	}
	return n
}
func (m *MessagingRequest_MessagePublish) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MessagePublish != nil {
		l = m.MessagePublish.Size()
		n += 1 + l + sovMessaging(uint64(l))
	}
	return n
}
func (m *MessagingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Topic)
	if l > 0 {
		n += 1 + l + sovMessaging(uint64(l))
	}
	l = len(m.Payload)
	if l > 0 {
		n += 1 + l + sovMessaging(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMessaging(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMessaging(x uint64) (n int) {
	return sovMessaging(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Subscribe) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessaging
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Subscribe: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Subscribe: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topics", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessaging
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessaging
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessaging
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Topics = append(m.Topics, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessaging(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMessaging
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMessaging
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Unsubscribe) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessaging
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Unsubscribe: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Unsubscribe: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topics", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessaging
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessaging
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessaging
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Topics = append(m.Topics, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessaging(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMessaging
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMessaging
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MessagePublish) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessaging
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MessagePublish: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MessagePublish: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topics", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessaging
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessaging
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessaging
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Topics = append(m.Topics, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Payload", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessaging
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMessaging
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMessaging
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Payload = append(m.Payload[:0], dAtA[iNdEx:postIndex]...)
			if m.Payload == nil {
				m.Payload = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessaging(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMessaging
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMessaging
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MessagingRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessaging
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MessagingRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MessagingRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subscribe", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessaging
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessaging
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessaging
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Subscribe{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.MessagingOneof = &MessagingRequest_Subscribe{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unsubscribe", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessaging
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessaging
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessaging
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Unsubscribe{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.MessagingOneof = &MessagingRequest_Unsubscribe{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessagePublish", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessaging
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessaging
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessaging
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MessagePublish{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.MessagingOneof = &MessagingRequest_MessagePublish{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessaging(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMessaging
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMessaging
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MessagingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessaging
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MessagingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MessagingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessaging
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessaging
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessaging
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Topic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Payload", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessaging
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMessaging
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMessaging
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Payload = append(m.Payload[:0], dAtA[iNdEx:postIndex]...)
			if m.Payload == nil {
				m.Payload = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessaging(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMessaging
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMessaging
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMessaging(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMessaging
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessaging
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessaging
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMessaging
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthMessaging
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowMessaging
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipMessaging(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthMessaging
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthMessaging = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMessaging   = fmt.Errorf("proto: integer overflow")
)
