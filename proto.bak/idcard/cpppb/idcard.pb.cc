// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: idcard.proto

#include "idcard.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_idcard_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IdInfo_idcard_2eproto;
namespace idCardService {
class GetIdInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetIdInfoRequest> _instance;
} _GetIdInfoRequest_default_instance_;
class IdInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IdInfo> _instance;
} _IdInfo_default_instance_;
class GetIdInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetIdInfoResponse> _instance;
} _GetIdInfoResponse_default_instance_;
}  // namespace idCardService
static void InitDefaultsGetIdInfoRequest_idcard_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::idCardService::_GetIdInfoRequest_default_instance_;
    new (ptr) ::idCardService::GetIdInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::idCardService::GetIdInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetIdInfoRequest_idcard_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetIdInfoRequest_idcard_2eproto}, {}};

static void InitDefaultsIdInfo_idcard_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::idCardService::_IdInfo_default_instance_;
    new (ptr) ::idCardService::IdInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::idCardService::IdInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IdInfo_idcard_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIdInfo_idcard_2eproto}, {}};

static void InitDefaultsGetIdInfoResponse_idcard_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::idCardService::_GetIdInfoResponse_default_instance_;
    new (ptr) ::idCardService::GetIdInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::idCardService::GetIdInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetIdInfoResponse_idcard_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetIdInfoResponse_idcard_2eproto}, {
      &scc_info_IdInfo_idcard_2eproto.base,}};

void InitDefaults_idcard_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetIdInfoRequest_idcard_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IdInfo_idcard_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetIdInfoResponse_idcard_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_idcard_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_idcard_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_idcard_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_idcard_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idCardService::GetIdInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idCardService::IdInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::idCardService::IdInfo, id_),
  PROTOBUF_FIELD_OFFSET(::idCardService::IdInfo, name_),
  PROTOBUF_FIELD_OFFSET(::idCardService::IdInfo, gender_),
  PROTOBUF_FIELD_OFFSET(::idCardService::IdInfo, national_),
  PROTOBUF_FIELD_OFFSET(::idCardService::IdInfo, birthday_),
  PROTOBUF_FIELD_OFFSET(::idCardService::IdInfo, address_),
  PROTOBUF_FIELD_OFFSET(::idCardService::IdInfo, sign_organization_),
  PROTOBUF_FIELD_OFFSET(::idCardService::IdInfo, start_date_),
  PROTOBUF_FIELD_OFFSET(::idCardService::IdInfo, end_date_),
  PROTOBUF_FIELD_OFFSET(::idCardService::IdInfo, photo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idCardService::GetIdInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::idCardService::GetIdInfoResponse, id_info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::idCardService::GetIdInfoRequest)},
  { 5, -1, sizeof(::idCardService::IdInfo)},
  { 20, -1, sizeof(::idCardService::GetIdInfoResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::idCardService::_GetIdInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::idCardService::_IdInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::idCardService::_GetIdInfoResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_idcard_2eproto = {
  {}, AddDescriptors_idcard_2eproto, "idcard.proto", schemas,
  file_default_instances, TableStruct_idcard_2eproto::offsets,
  file_level_metadata_idcard_2eproto, 3, file_level_enum_descriptors_idcard_2eproto, file_level_service_descriptors_idcard_2eproto,
};

const char descriptor_table_protodef_idcard_2eproto[] =
  "\n\014idcard.proto\022\ridCardService\"\022\n\020GetIdIn"
  "foRequest\"\307\001\n\006IdInfo\022\n\n\002id\030\001 \001(\t\022\014\n\004name"
  "\030\002 \001(\t\022\016\n\006gender\030\003 \001(\t\022\020\n\010national\030\004 \001(\t"
  "\022\020\n\010birthday\030\005 \001(\t\022\017\n\007address\030\006 \001(\t\022\031\n\021s"
  "ign_organization\030\007 \001(\t\022\022\n\nstart_date\030\010 \001"
  "(\t\022\020\n\010end_date\030\t \001(\t\022\r\n\005photo\030\n \001(\014J\004\010\013\020"
  "\014R\010reserved\";\n\021GetIdInfoResponse\022&\n\007id_i"
  "nfo\030\001 \001(\0132\025.idCardService.IdInfo2c\n\rIDCa"
  "rdService\022R\n\tGetIdInfo\022\037.idCardService.G"
  "etIdInfoRequest\032 .idCardService.GetIdInf"
  "oResponse\"\0000\001b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_idcard_2eproto = {
  false, InitDefaults_idcard_2eproto, 
  descriptor_table_protodef_idcard_2eproto,
  "idcard.proto", &assign_descriptors_table_idcard_2eproto, 421,
};

void AddDescriptors_idcard_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_idcard_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_idcard_2eproto = []() { AddDescriptors_idcard_2eproto(); return true; }();
namespace idCardService {

// ===================================================================

void GetIdInfoRequest::InitAsDefaultInstance() {
}
class GetIdInfoRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetIdInfoRequest::GetIdInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:idCardService.GetIdInfoRequest)
}
GetIdInfoRequest::GetIdInfoRequest(const GetIdInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idCardService.GetIdInfoRequest)
}

void GetIdInfoRequest::SharedCtor() {
}

GetIdInfoRequest::~GetIdInfoRequest() {
  // @@protoc_insertion_point(destructor:idCardService.GetIdInfoRequest)
  SharedDtor();
}

void GetIdInfoRequest::SharedDtor() {
}

void GetIdInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdInfoRequest& GetIdInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetIdInfoRequest_idcard_2eproto.base);
  return *internal_default_instance();
}


void GetIdInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:idCardService.GetIdInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetIdInfoRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetIdInfoRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetIdInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:idCardService.GetIdInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:idCardService.GetIdInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:idCardService.GetIdInfoRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetIdInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:idCardService.GetIdInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:idCardService.GetIdInfoRequest)
}

::google::protobuf::uint8* GetIdInfoRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:idCardService.GetIdInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idCardService.GetIdInfoRequest)
  return target;
}

size_t GetIdInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idCardService.GetIdInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:idCardService.GetIdInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdInfoRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetIdInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:idCardService.GetIdInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:idCardService.GetIdInfoRequest)
    MergeFrom(*source);
  }
}

void GetIdInfoRequest::MergeFrom(const GetIdInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:idCardService.GetIdInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetIdInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:idCardService.GetIdInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdInfoRequest::CopyFrom(const GetIdInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idCardService.GetIdInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdInfoRequest::IsInitialized() const {
  return true;
}

void GetIdInfoRequest::Swap(GetIdInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetIdInfoRequest::InternalSwap(GetIdInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetIdInfoRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_idcard_2eproto);
  return ::file_level_metadata_idcard_2eproto[kIndexInFileMessages];
}


// ===================================================================

void IdInfo::InitAsDefaultInstance() {
}
class IdInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdInfo::kIdFieldNumber;
const int IdInfo::kNameFieldNumber;
const int IdInfo::kGenderFieldNumber;
const int IdInfo::kNationalFieldNumber;
const int IdInfo::kBirthdayFieldNumber;
const int IdInfo::kAddressFieldNumber;
const int IdInfo::kSignOrganizationFieldNumber;
const int IdInfo::kStartDateFieldNumber;
const int IdInfo::kEndDateFieldNumber;
const int IdInfo::kPhotoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdInfo::IdInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:idCardService.IdInfo)
}
IdInfo::IdInfo(const IdInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  gender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gender().size() > 0) {
    gender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gender_);
  }
  national_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.national().size() > 0) {
    national_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.national_);
  }
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.birthday().size() > 0) {
    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  sign_organization_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign_organization().size() > 0) {
    sign_organization_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_organization_);
  }
  start_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_date().size() > 0) {
    start_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_date_);
  }
  end_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end_date().size() > 0) {
    end_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_date_);
  }
  photo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.photo().size() > 0) {
    photo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.photo_);
  }
  // @@protoc_insertion_point(copy_constructor:idCardService.IdInfo)
}

void IdInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IdInfo_idcard_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  national_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_organization_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

IdInfo::~IdInfo() {
  // @@protoc_insertion_point(destructor:idCardService.IdInfo)
  SharedDtor();
}

void IdInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  national_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_organization_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IdInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IdInfo& IdInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IdInfo_idcard_2eproto.base);
  return *internal_default_instance();
}


void IdInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:idCardService.IdInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  national_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_organization_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IdInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IdInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("idCardService.IdInfo.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("idCardService.IdInfo.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string gender = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("idCardService.IdInfo.gender");
        object = msg->mutable_gender();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string national = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("idCardService.IdInfo.national");
        object = msg->mutable_national();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string birthday = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("idCardService.IdInfo.birthday");
        object = msg->mutable_birthday();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string address = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("idCardService.IdInfo.address");
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string sign_organization = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("idCardService.IdInfo.sign_organization");
        object = msg->mutable_sign_organization();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string start_date = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("idCardService.IdInfo.start_date");
        object = msg->mutable_start_date();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string end_date = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("idCardService.IdInfo.end_date");
        object = msg->mutable_end_date();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes photo = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_photo();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IdInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:idCardService.IdInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idCardService.IdInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idCardService.IdInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gender = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gender().data(), static_cast<int>(this->gender().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idCardService.IdInfo.gender"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string national = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_national()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->national().data(), static_cast<int>(this->national().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idCardService.IdInfo.national"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string birthday = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birthday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->birthday().data(), static_cast<int>(this->birthday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idCardService.IdInfo.birthday"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idCardService.IdInfo.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sign_organization = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign_organization()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sign_organization().data(), static_cast<int>(this->sign_organization().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idCardService.IdInfo.sign_organization"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string start_date = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->start_date().data(), static_cast<int>(this->start_date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idCardService.IdInfo.start_date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string end_date = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_end_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->end_date().data(), static_cast<int>(this->end_date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idCardService.IdInfo.end_date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes photo = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_photo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:idCardService.IdInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:idCardService.IdInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IdInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:idCardService.IdInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string gender = 3;
  if (this->gender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gender().data(), static_cast<int>(this->gender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.gender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gender(), output);
  }

  // string national = 4;
  if (this->national().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->national().data(), static_cast<int>(this->national().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.national");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->national(), output);
  }

  // string birthday = 5;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), static_cast<int>(this->birthday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.birthday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->birthday(), output);
  }

  // string address = 6;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->address(), output);
  }

  // string sign_organization = 7;
  if (this->sign_organization().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign_organization().data(), static_cast<int>(this->sign_organization().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.sign_organization");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sign_organization(), output);
  }

  // string start_date = 8;
  if (this->start_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_date().data(), static_cast<int>(this->start_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.start_date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->start_date(), output);
  }

  // string end_date = 9;
  if (this->end_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_date().data(), static_cast<int>(this->end_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.end_date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->end_date(), output);
  }

  // bytes photo = 10;
  if (this->photo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->photo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:idCardService.IdInfo)
}

::google::protobuf::uint8* IdInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:idCardService.IdInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string gender = 3;
  if (this->gender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gender().data(), static_cast<int>(this->gender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.gender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gender(), target);
  }

  // string national = 4;
  if (this->national().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->national().data(), static_cast<int>(this->national().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.national");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->national(), target);
  }

  // string birthday = 5;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), static_cast<int>(this->birthday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.birthday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->birthday(), target);
  }

  // string address = 6;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->address(), target);
  }

  // string sign_organization = 7;
  if (this->sign_organization().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign_organization().data(), static_cast<int>(this->sign_organization().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.sign_organization");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sign_organization(), target);
  }

  // string start_date = 8;
  if (this->start_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_date().data(), static_cast<int>(this->start_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.start_date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->start_date(), target);
  }

  // string end_date = 9;
  if (this->end_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_date().data(), static_cast<int>(this->end_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idCardService.IdInfo.end_date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->end_date(), target);
  }

  // bytes photo = 10;
  if (this->photo().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->photo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idCardService.IdInfo)
  return target;
}

size_t IdInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idCardService.IdInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string gender = 3;
  if (this->gender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gender());
  }

  // string national = 4;
  if (this->national().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->national());
  }

  // string birthday = 5;
  if (this->birthday().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->birthday());
  }

  // string address = 6;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string sign_organization = 7;
  if (this->sign_organization().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sign_organization());
  }

  // string start_date = 8;
  if (this->start_date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start_date());
  }

  // string end_date = 9;
  if (this->end_date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->end_date());
  }

  // bytes photo = 10;
  if (this->photo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->photo());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:idCardService.IdInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const IdInfo* source =
      ::google::protobuf::DynamicCastToGenerated<IdInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:idCardService.IdInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:idCardService.IdInfo)
    MergeFrom(*source);
  }
}

void IdInfo::MergeFrom(const IdInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:idCardService.IdInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.gender().size() > 0) {

    gender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gender_);
  }
  if (from.national().size() > 0) {

    national_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.national_);
  }
  if (from.birthday().size() > 0) {

    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.sign_organization().size() > 0) {

    sign_organization_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_organization_);
  }
  if (from.start_date().size() > 0) {

    start_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_date_);
  }
  if (from.end_date().size() > 0) {

    end_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_date_);
  }
  if (from.photo().size() > 0) {

    photo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.photo_);
  }
}

void IdInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:idCardService.IdInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdInfo::CopyFrom(const IdInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idCardService.IdInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdInfo::IsInitialized() const {
  return true;
}

void IdInfo::Swap(IdInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdInfo::InternalSwap(IdInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gender_.Swap(&other->gender_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  national_.Swap(&other->national_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  birthday_.Swap(&other->birthday_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_organization_.Swap(&other->sign_organization_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  start_date_.Swap(&other->start_date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  end_date_.Swap(&other->end_date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  photo_.Swap(&other->photo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata IdInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_idcard_2eproto);
  return ::file_level_metadata_idcard_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetIdInfoResponse::InitAsDefaultInstance() {
  ::idCardService::_GetIdInfoResponse_default_instance_._instance.get_mutable()->id_info_ = const_cast< ::idCardService::IdInfo*>(
      ::idCardService::IdInfo::internal_default_instance());
}
class GetIdInfoResponse::HasBitSetters {
 public:
  static const ::idCardService::IdInfo& id_info(const GetIdInfoResponse* msg);
};

const ::idCardService::IdInfo&
GetIdInfoResponse::HasBitSetters::id_info(const GetIdInfoResponse* msg) {
  return *msg->id_info_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetIdInfoResponse::kIdInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetIdInfoResponse::GetIdInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:idCardService.GetIdInfoResponse)
}
GetIdInfoResponse::GetIdInfoResponse(const GetIdInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id_info()) {
    id_info_ = new ::idCardService::IdInfo(*from.id_info_);
  } else {
    id_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:idCardService.GetIdInfoResponse)
}

void GetIdInfoResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetIdInfoResponse_idcard_2eproto.base);
  id_info_ = nullptr;
}

GetIdInfoResponse::~GetIdInfoResponse() {
  // @@protoc_insertion_point(destructor:idCardService.GetIdInfoResponse)
  SharedDtor();
}

void GetIdInfoResponse::SharedDtor() {
  if (this != internal_default_instance()) delete id_info_;
}

void GetIdInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdInfoResponse& GetIdInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetIdInfoResponse_idcard_2eproto.base);
  return *internal_default_instance();
}


void GetIdInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:idCardService.GetIdInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && id_info_ != nullptr) {
    delete id_info_;
  }
  id_info_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetIdInfoResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetIdInfoResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .idCardService.IdInfo id_info = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::idCardService::IdInfo::_InternalParse;
        object = msg->mutable_id_info();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetIdInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:idCardService.GetIdInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .idCardService.IdInfo id_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:idCardService.GetIdInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:idCardService.GetIdInfoResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetIdInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:idCardService.GetIdInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .idCardService.IdInfo id_info = 1;
  if (this->has_id_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::id_info(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:idCardService.GetIdInfoResponse)
}

::google::protobuf::uint8* GetIdInfoResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:idCardService.GetIdInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .idCardService.IdInfo id_info = 1;
  if (this->has_id_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::id_info(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idCardService.GetIdInfoResponse)
  return target;
}

size_t GetIdInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idCardService.GetIdInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idCardService.IdInfo id_info = 1;
  if (this->has_id_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:idCardService.GetIdInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdInfoResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetIdInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:idCardService.GetIdInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:idCardService.GetIdInfoResponse)
    MergeFrom(*source);
  }
}

void GetIdInfoResponse::MergeFrom(const GetIdInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:idCardService.GetIdInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id_info()) {
    mutable_id_info()->::idCardService::IdInfo::MergeFrom(from.id_info());
  }
}

void GetIdInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:idCardService.GetIdInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdInfoResponse::CopyFrom(const GetIdInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idCardService.GetIdInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdInfoResponse::IsInitialized() const {
  return true;
}

void GetIdInfoResponse::Swap(GetIdInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetIdInfoResponse::InternalSwap(GetIdInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_info_, other->id_info_);
}

::google::protobuf::Metadata GetIdInfoResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_idcard_2eproto);
  return ::file_level_metadata_idcard_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace idCardService
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::idCardService::GetIdInfoRequest* Arena::CreateMaybeMessage< ::idCardService::GetIdInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::idCardService::GetIdInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::idCardService::IdInfo* Arena::CreateMaybeMessage< ::idCardService::IdInfo >(Arena* arena) {
  return Arena::CreateInternal< ::idCardService::IdInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::idCardService::GetIdInfoResponse* Arena::CreateMaybeMessage< ::idCardService::GetIdInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::idCardService::GetIdInfoResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
