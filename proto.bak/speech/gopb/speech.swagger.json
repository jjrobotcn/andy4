{
  "swagger": "2.0",
  "info": {
    "title": "speech.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v2/speech/get_voice_volume": {
      "post": {
        "summary": "查询语音音量\nv2.1.0",
        "operationId": "GetVoiceVolume",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/speechServiceGetVoiceVolumeResponse"
            }
          }
        },
        "tags": [
          "SpeechService"
        ]
      }
    },
    "/api/v2/speech/hibernate": {
      "post": {
        "summary": "休眠",
        "operationId": "Hibernate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/speechServiceHibernateResponse"
            }
          }
        },
        "tags": [
          "SpeechService"
        ]
      }
    },
    "/api/v2/speech/listen_speech_event": {
      "get": {
        "summary": "ListenSpeechEvent方法为监听语音事件变更状态流, 具体类型参考: SpeechEvent\nListenSpeechEventRequest中可配置相关状态消息过滤,",
        "operationId": "ListenSpeechEvent",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/speechServiceListenSpeechEventResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "with_vad_vol",
            "description": "是否获取vad状态传入语音音量动态变化\n启用与否不影响获取Vad_START, Vad_END\n仅影响Vad_VOLUME_CHANGE.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "SpeechService"
        ]
      }
    },
    "/api/v2/speech/set_params": {
      "post": {
        "summary": "配置参数(当前仅支持AIUI模块)\nv2.1.0\nAIUI模块参数配置参考: https://aiui.xfyun.cn/docs/access_docs (开发-评估板/量产板 =\u003e AIUI SDK =\u003e 参数配置)",
        "operationId": "SetParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/speechServiceSetParamsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/speechServiceSetParamsRequest"
            }
          }
        ],
        "tags": [
          "SpeechService"
        ]
      }
    },
    "/api/v2/speech/set_voice_volume": {
      "post": {
        "summary": "设置语音音量\nv2.1.0",
        "operationId": "SetVoiceVolume",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/speechServiceSetVoiceVolumeResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/speechServiceSetVoiceVolumeRequest"
            }
          }
        ],
        "tags": [
          "SpeechService"
        ]
      }
    },
    "/api/v2/speech/speech_stop": {
      "post": {
        "summary": "SpeechStop方法实现打断语音功能",
        "operationId": "SpeechStop",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/speechServiceSpeechStopResponse"
            }
          }
        },
        "tags": [
          "SpeechService"
        ]
      }
    },
    "/api/v2/speech/text_to_speech": {
      "post": {
        "summary": "TextToSpeech(TTS)方法实现文本输入语音合成自动音频输出",
        "operationId": "TextToSpeech",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/speechServiceTextToSpeechResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/speechServiceTextToSpeechRequest"
            }
          }
        ],
        "tags": [
          "SpeechService"
        ]
      }
    },
    "/api/v2/speech/wake_up": {
      "post": {
        "summary": "唤醒",
        "operationId": "WakeUp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/speechServiceWakeUpResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/speechServiceWakeUpRequest"
            }
          }
        ],
        "tags": [
          "SpeechService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "speechServiceErrorInfo": {
      "type": "object",
      "properties": {
        "error_type": {
          "$ref": "#/definitions/speechServiceErrorType"
        },
        "info": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "speechServiceErrorType": {
      "type": "string",
      "enum": [
        "UNKNOWN_ERROR_TYPE",
        "ERR_TIMEOUT",
        "ERR_PARAMS",
        "ERR_AUTH",
        "ERR_NETWORK",
        "ERR_NOT_READY",
        "ERR_CONFIG"
      ],
      "default": "UNKNOWN_ERROR_TYPE",
      "title": "错误类型"
    },
    "speechServiceGetVoiceVolumeResponse": {
      "type": "object",
      "properties": {
        "voice_volume_info": {
          "$ref": "#/definitions/speechServiceVoiceVolumeInfo"
        }
      }
    },
    "speechServiceHibernateResponse": {
      "type": "object"
    },
    "speechServiceListenSpeechEventResponse": {
      "type": "object",
      "properties": {
        "event_type": {
          "$ref": "#/definitions/speechServiceSpeechEvent"
        },
        "wake_up_info": {
          "$ref": "#/definitions/speechServiceWakeUpInfo"
        },
        "vad_info": {
          "$ref": "#/definitions/speechServiceVadInfo"
        },
        "result_info": {
          "$ref": "#/definitions/speechServiceResultInfo"
        },
        "error_info": {
          "$ref": "#/definitions/speechServiceErrorInfo"
        }
      }
    },
    "speechServiceResultInfo": {
      "type": "object",
      "properties": {
        "words": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sentence_complete": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "识别结果"
    },
    "speechServiceSetParamsRequest": {
      "type": "object",
      "properties": {
        "params": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "speechServiceSetParamsResponse": {
      "type": "object"
    },
    "speechServiceSetVoiceVolumeRequest": {
      "type": "object",
      "properties": {
        "voice_volume_info": {
          "$ref": "#/definitions/speechServiceVoiceVolumeInfo"
        }
      }
    },
    "speechServiceSetVoiceVolumeResponse": {
      "type": "object",
      "properties": {
        "voice_volume_info": {
          "$ref": "#/definitions/speechServiceVoiceVolumeInfo"
        }
      }
    },
    "speechServiceSpeechEvent": {
      "type": "string",
      "enum": [
        "UNKNOWN_EVENT",
        "WAKE_UP",
        "HIBERNATE",
        "ERROR",
        "VAD",
        "RESULT",
        "TTS_START",
        "TTS_END"
      ],
      "default": "UNKNOWN_EVENT"
    },
    "speechServiceSpeechStopResponse": {
      "type": "object"
    },
    "speechServiceTextToSpeechRequest": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        }
      }
    },
    "speechServiceTextToSpeechResponse": {
      "type": "object"
    },
    "speechServiceVadInfo": {
      "type": "object",
      "properties": {
        "vad_type": {
          "$ref": "#/definitions/speechServiceVadType"
        },
        "vol": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "speechServiceVadType": {
      "type": "string",
      "enum": [
        "UNKNOWM_VAD_TYPE",
        "START",
        "END",
        "TIMEOUT",
        "VOLUME_CHANGE"
      ],
      "default": "UNKNOWM_VAD_TYPE",
      "title": "语音检测"
    },
    "speechServiceVoiceVolumeInfo": {
      "type": "object",
      "properties": {
        "vol": {
          "type": "integer",
          "format": "int64",
          "title": "音量值 0-10\naiui模块硬件限制值: 2-10"
        }
      },
      "title": "音量信息"
    },
    "speechServiceWakeUpInfo": {
      "type": "object",
      "properties": {
        "angle": {
          "type": "integer",
          "format": "int32"
        },
        "beam": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "唤醒相关数据"
    },
    "speechServiceWakeUpRequest": {
      "type": "object",
      "properties": {
        "after_wake_up_speech_text": {
          "type": "string"
        }
      }
    },
    "speechServiceWakeUpResponse": {
      "type": "object"
    }
  },
  "x-stream-definitions": {
    "speechServiceListenSpeechEventResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/speechServiceListenSpeechEventResponse"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of speechServiceListenSpeechEventResponse"
    }
  }
}
