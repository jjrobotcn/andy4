// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: speech.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SpeechService {

  /// <summary>Holder for reflection information generated from speech.proto</summary>
  public static partial class SpeechReflection {

    #region Descriptor
    /// <summary>File descriptor for speech.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpeechReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzcGVlY2gucHJvdG8SDXNwZWVjaFNlcnZpY2UaHGdvb2dsZS9hcGkvYW5u",
            "b3RhdGlvbnMucHJvdG8iVQoJRXJyb3JJbmZvEiwKCmVycm9yX3R5cGUYASAB",
            "KA4yGC5zcGVlY2hTZXJ2aWNlLkVycm9yVHlwZRIMCgRpbmZvGAIgASgJEgwK",
            "BGNvZGUYAyABKAkiQAoHVmFkSW5mbxIoCgh2YWRfdHlwZRgBIAEoDjIWLnNw",
            "ZWVjaFNlcnZpY2UuVmFkVHlwZRILCgN2b2wYAiABKA0iKQoKV2FrZVVwSW5m",
            "bxINCgVhbmdsZRgBIAEoBRIMCgRiZWFtGAIgASgFIjYKClJlc3VsdEluZm8S",
            "DQoFd29yZHMYASADKAkSGQoRc2VudGVuY2VfY29tcGxldGUYAiABKAgiMAoY",
            "TGlzdGVuU3BlZWNoRXZlbnRSZXF1ZXN0EhQKDHdpdGhfdmFkX3ZvbBgBIAEo",
            "CCKiAgoZTGlzdGVuU3BlZWNoRXZlbnRSZXNwb25zZRIuCgpldmVudF90eXBl",
            "GAEgASgOMhouc3BlZWNoU2VydmljZS5TcGVlY2hFdmVudBIxCgx3YWtlX3Vw",
            "X2luZm8YAiABKAsyGS5zcGVlY2hTZXJ2aWNlLldha2VVcEluZm9IABIqCgh2",
            "YWRfaW5mbxgDIAEoCzIWLnNwZWVjaFNlcnZpY2UuVmFkSW5mb0gAEjAKC3Jl",
            "c3VsdF9pbmZvGAQgASgLMhkuc3BlZWNoU2VydmljZS5SZXN1bHRJbmZvSAAS",
            "LgoKZXJyb3JfaW5mbxgFIAEoCzIYLnNwZWVjaFNlcnZpY2UuRXJyb3JJbmZv",
            "SABCFAoSc3BlZWNoX2V2ZW50X29uZW9mIiMKE1RleHRUb1NwZWVjaFJlcXVl",
            "c3QSDAoEdGV4dBgBIAEoCSIWChRUZXh0VG9TcGVlY2hSZXNwb25zZSITChFT",
            "cGVlY2hTdG9wUmVxdWVzdCIUChJTcGVlY2hTdG9wUmVzcG9uc2UiMgoNV2Fr",
            "ZVVwUmVxdWVzdBIhChlhZnRlcl93YWtlX3VwX3NwZWVjaF90ZXh0GAEgASgJ",
            "IhAKDldha2VVcFJlc3BvbnNlIhIKEEhpYmVybmF0ZVJlcXVlc3QiEwoRSGli",
            "ZXJuYXRlUmVzcG9uc2UiHgoPVm9pY2VWb2x1bWVJbmZvEgsKA3ZvbBgBIAEo",
            "DSJSChVTZXRWb2ljZVZvbHVtZVJlcXVlc3QSOQoRdm9pY2Vfdm9sdW1lX2lu",
            "Zm8YASABKAsyHi5zcGVlY2hTZXJ2aWNlLlZvaWNlVm9sdW1lSW5mbyJTChZT",
            "ZXRWb2ljZVZvbHVtZVJlc3BvbnNlEjkKEXZvaWNlX3ZvbHVtZV9pbmZvGAEg",
            "ASgLMh4uc3BlZWNoU2VydmljZS5Wb2ljZVZvbHVtZUluZm8iFwoVR2V0Vm9p",
            "Y2VWb2x1bWVSZXF1ZXN0IlMKFkdldFZvaWNlVm9sdW1lUmVzcG9uc2USOQoR",
            "dm9pY2Vfdm9sdW1lX2luZm8YASABKAsyHi5zcGVlY2hTZXJ2aWNlLlZvaWNl",
            "Vm9sdW1lSW5mbyIiChBTZXRQYXJhbXNSZXF1ZXN0Eg4KBnBhcmFtcxgBIAEo",
            "DCITChFTZXRQYXJhbXNSZXNwb25zZSp4CgtTcGVlY2hFdmVudBIRCg1VTktO",
            "T1dOX0VWRU5UEAASCwoHV0FLRV9VUBABEg0KCUhJQkVSTkFURRACEgkKBUVS",
            "Uk9SEAMSBwoDVkFEEAQSCgoGUkVTVUxUEAUSDQoJVFRTX1NUQVJUEAYSCwoH",
            "VFRTX0VORBAHKoYBCglFcnJvclR5cGUSFgoSVU5LTk9XTl9FUlJPUl9UWVBF",
            "EAASDwoLRVJSX1RJTUVPVVQQARIOCgpFUlJfUEFSQU1TEAISDAoIRVJSX0FV",
            "VEgQAxIPCgtFUlJfTkVUV09SSxAEEhEKDUVSUl9OT1RfUkVBRFkQBRIOCgpF",
            "UlJfQ09ORklHEAYqUwoHVmFkVHlwZRIUChBVTktOT1dNX1ZBRF9UWVBFEAAS",
            "CQoFU1RBUlQQARIHCgNFTkQQAhILCgdUSU1FT1VUEAMSEQoNVk9MVU1FX0NI",
            "QU5HRRAEMt0HCg1TcGVlY2hTZXJ2aWNlEmoKEUxpc3RlblNwZWVjaEV2ZW50",
            "Eicuc3BlZWNoU2VydmljZS5MaXN0ZW5TcGVlY2hFdmVudFJlcXVlc3QaKC5z",
            "cGVlY2hTZXJ2aWNlLkxpc3RlblNwZWVjaEV2ZW50UmVzcG9uc2UiADABEoEB",
            "CgxUZXh0VG9TcGVlY2gSIi5zcGVlY2hTZXJ2aWNlLlRleHRUb1NwZWVjaFJl",
            "cXVlc3QaIy5zcGVlY2hTZXJ2aWNlLlRleHRUb1NwZWVjaFJlc3BvbnNlIiiC",
            "0+STAiIiHS9hcGkvdjIvc3BlZWNoL3RleHRfdG9fc3BlZWNoOgEqEnUKClNw",
            "ZWVjaFN0b3ASIC5zcGVlY2hTZXJ2aWNlLlNwZWVjaFN0b3BSZXF1ZXN0GiEu",
            "c3BlZWNoU2VydmljZS5TcGVlY2hTdG9wUmVzcG9uc2UiIoLT5JMCHCIaL2Fw",
            "aS92Mi9zcGVlY2gvc3BlZWNoX3N0b3ASaAoGV2FrZVVwEhwuc3BlZWNoU2Vy",
            "dmljZS5XYWtlVXBSZXF1ZXN0Gh0uc3BlZWNoU2VydmljZS5XYWtlVXBSZXNw",
            "b25zZSIhgtPkkwIbIhYvYXBpL3YyL3NwZWVjaC93YWtlX3VwOgEqEnAKCUhp",
            "YmVybmF0ZRIfLnNwZWVjaFNlcnZpY2UuSGliZXJuYXRlUmVxdWVzdBogLnNw",
            "ZWVjaFNlcnZpY2UuSGliZXJuYXRlUmVzcG9uc2UiIILT5JMCGiIYL2FwaS92",
            "Mi9zcGVlY2gvaGliZXJuYXRlEokBCg5TZXRWb2ljZVZvbHVtZRIkLnNwZWVj",
            "aFNlcnZpY2UuU2V0Vm9pY2VWb2x1bWVSZXF1ZXN0GiUuc3BlZWNoU2Vydmlj",
            "ZS5TZXRWb2ljZVZvbHVtZVJlc3BvbnNlIiqC0+STAiQiHy9hcGkvdjIvc3Bl",
            "ZWNoL3NldF92b2ljZV92b2x1bWU6ASoShgEKDkdldFZvaWNlVm9sdW1lEiQu",
            "c3BlZWNoU2VydmljZS5HZXRWb2ljZVZvbHVtZVJlcXVlc3QaJS5zcGVlY2hT",
            "ZXJ2aWNlLkdldFZvaWNlVm9sdW1lUmVzcG9uc2UiJ4LT5JMCISIfL2FwaS92",
            "Mi9zcGVlY2gvZ2V0X3ZvaWNlX3ZvbHVtZRJ0CglTZXRQYXJhbXMSHy5zcGVl",
            "Y2hTZXJ2aWNlLlNldFBhcmFtc1JlcXVlc3QaIC5zcGVlY2hTZXJ2aWNlLlNl",
            "dFBhcmFtc1Jlc3BvbnNlIiSC0+STAh4iGS9hcGkvdjIvc3BlZWNoL3NldF9w",
            "YXJhbXM6ASpiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SpeechService.SpeechEvent), typeof(global::SpeechService.ErrorType), typeof(global::SpeechService.VadType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.ErrorInfo), global::SpeechService.ErrorInfo.Parser, new[]{ "ErrorType", "Info", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.VadInfo), global::SpeechService.VadInfo.Parser, new[]{ "VadType", "Vol" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.WakeUpInfo), global::SpeechService.WakeUpInfo.Parser, new[]{ "Angle", "Beam" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.ResultInfo), global::SpeechService.ResultInfo.Parser, new[]{ "Words", "SentenceComplete" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.ListenSpeechEventRequest), global::SpeechService.ListenSpeechEventRequest.Parser, new[]{ "WithVadVol" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.ListenSpeechEventResponse), global::SpeechService.ListenSpeechEventResponse.Parser, new[]{ "EventType", "WakeUpInfo", "VadInfo", "ResultInfo", "ErrorInfo" }, new[]{ "SpeechEventOneof" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.TextToSpeechRequest), global::SpeechService.TextToSpeechRequest.Parser, new[]{ "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.TextToSpeechResponse), global::SpeechService.TextToSpeechResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.SpeechStopRequest), global::SpeechService.SpeechStopRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.SpeechStopResponse), global::SpeechService.SpeechStopResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.WakeUpRequest), global::SpeechService.WakeUpRequest.Parser, new[]{ "AfterWakeUpSpeechText" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.WakeUpResponse), global::SpeechService.WakeUpResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.HibernateRequest), global::SpeechService.HibernateRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.HibernateResponse), global::SpeechService.HibernateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.VoiceVolumeInfo), global::SpeechService.VoiceVolumeInfo.Parser, new[]{ "Vol" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.SetVoiceVolumeRequest), global::SpeechService.SetVoiceVolumeRequest.Parser, new[]{ "VoiceVolumeInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.SetVoiceVolumeResponse), global::SpeechService.SetVoiceVolumeResponse.Parser, new[]{ "VoiceVolumeInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.GetVoiceVolumeRequest), global::SpeechService.GetVoiceVolumeRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.GetVoiceVolumeResponse), global::SpeechService.GetVoiceVolumeResponse.Parser, new[]{ "VoiceVolumeInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.SetParamsRequest), global::SpeechService.SetParamsRequest.Parser, new[]{ "Params" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpeechService.SetParamsResponse), global::SpeechService.SetParamsResponse.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum SpeechEvent {
    /// <summary>
    /// 零值
    /// </summary>
    [pbr::OriginalName("UNKNOWN_EVENT")] UnknownEvent = 0,
    /// <summary>
    /// 唤醒
    /// </summary>
    [pbr::OriginalName("WAKE_UP")] WakeUp = 1,
    /// <summary>
    /// 休眠
    /// </summary>
    [pbr::OriginalName("HIBERNATE")] Hibernate = 2,
    /// <summary>
    /// 识别错误
    /// </summary>
    [pbr::OriginalName("ERROR")] Error = 3,
    /// <summary>
    /// Voice activity detection 语音活性检测
    /// </summary>
    [pbr::OriginalName("VAD")] Vad = 4,
    /// <summary>
    /// 识别结果
    /// </summary>
    [pbr::OriginalName("RESULT")] Result = 5,
    /// <summary>
    /// 文本转音频开始
    /// </summary>
    [pbr::OriginalName("TTS_START")] TtsStart = 6,
    /// <summary>
    /// 文本转音频结束
    /// </summary>
    [pbr::OriginalName("TTS_END")] TtsEnd = 7,
  }

  /// <summary>
  /// 错误类型
  /// </summary>
  public enum ErrorType {
    [pbr::OriginalName("UNKNOWN_ERROR_TYPE")] UnknownErrorType = 0,
    /// <summary>
    /// 超时
    /// </summary>
    [pbr::OriginalName("ERR_TIMEOUT")] ErrTimeout = 1,
    /// <summary>
    /// 参数错误
    /// </summary>
    [pbr::OriginalName("ERR_PARAMS")] ErrParams = 2,
    /// <summary>
    /// 授权错误
    /// </summary>
    [pbr::OriginalName("ERR_AUTH")] ErrAuth = 3,
    /// <summary>
    /// 网络错误
    /// </summary>
    [pbr::OriginalName("ERR_NETWORK")] ErrNetwork = 4,
    /// <summary>
    /// 未就绪错误
    /// </summary>
    [pbr::OriginalName("ERR_NOT_READY")] ErrNotReady = 5,
    /// <summary>
    /// 配置错误
    /// </summary>
    [pbr::OriginalName("ERR_CONFIG")] ErrConfig = 6,
  }

  /// <summary>
  /// 语音检测
  /// </summary>
  public enum VadType {
    [pbr::OriginalName("UNKNOWM_VAD_TYPE")] UnknowmVadType = 0,
    /// <summary>
    /// 开始
    /// </summary>
    [pbr::OriginalName("START")] Start = 1,
    /// <summary>
    /// 结束
    /// </summary>
    [pbr::OriginalName("END")] End = 2,
    /// <summary>
    /// 检测超时
    /// </summary>
    [pbr::OriginalName("TIMEOUT")] Timeout = 3,
    /// <summary>
    /// 音量改变
    /// </summary>
    [pbr::OriginalName("VOLUME_CHANGE")] VolumeChange = 4,
  }

  #endregion

  #region Messages
  public sealed partial class ErrorInfo : pb::IMessage<ErrorInfo> {
    private static readonly pb::MessageParser<ErrorInfo> _parser = new pb::MessageParser<ErrorInfo>(() => new ErrorInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorInfo(ErrorInfo other) : this() {
      errorType_ = other.errorType_;
      info_ = other.info_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorInfo Clone() {
      return new ErrorInfo(this);
    }

    /// <summary>Field number for the "error_type" field.</summary>
    public const int ErrorTypeFieldNumber = 1;
    private global::SpeechService.ErrorType errorType_ = 0;
    /// <summary>
    /// 错误类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpeechService.ErrorType ErrorType {
      get { return errorType_; }
      set {
        errorType_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private string info_ = "";
    /// <summary>
    /// 错误描述（设备提供， 可能为空）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Info {
      get { return info_; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private string code_ = "";
    /// <summary>
    /// 错误码（设备提供， 可能为空）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ErrorInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ErrorInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorType != other.ErrorType) return false;
      if (Info != other.Info) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorType != 0) hash ^= ErrorType.GetHashCode();
      if (Info.Length != 0) hash ^= Info.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorType);
      }
      if (Info.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Info);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorType);
      }
      if (Info.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ErrorInfo other) {
      if (other == null) {
        return;
      }
      if (other.ErrorType != 0) {
        ErrorType = other.ErrorType;
      }
      if (other.Info.Length != 0) {
        Info = other.Info;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorType = (global::SpeechService.ErrorType) input.ReadEnum();
            break;
          }
          case 18: {
            Info = input.ReadString();
            break;
          }
          case 26: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VadInfo : pb::IMessage<VadInfo> {
    private static readonly pb::MessageParser<VadInfo> _parser = new pb::MessageParser<VadInfo>(() => new VadInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VadInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VadInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VadInfo(VadInfo other) : this() {
      vadType_ = other.vadType_;
      vol_ = other.vol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VadInfo Clone() {
      return new VadInfo(this);
    }

    /// <summary>Field number for the "vad_type" field.</summary>
    public const int VadTypeFieldNumber = 1;
    private global::SpeechService.VadType vadType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpeechService.VadType VadType {
      get { return vadType_; }
      set {
        vadType_ = value;
      }
    }

    /// <summary>Field number for the "vol" field.</summary>
    public const int VolFieldNumber = 2;
    private uint vol_;
    /// <summary>
    /// 检测音量(VadType == VOLUME_CHANGE时此值有效) 0-100
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Vol {
      get { return vol_; }
      set {
        vol_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VadInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VadInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VadType != other.VadType) return false;
      if (Vol != other.Vol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VadType != 0) hash ^= VadType.GetHashCode();
      if (Vol != 0) hash ^= Vol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VadType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) VadType);
      }
      if (Vol != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Vol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VadType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VadType);
      }
      if (Vol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Vol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VadInfo other) {
      if (other == null) {
        return;
      }
      if (other.VadType != 0) {
        VadType = other.VadType;
      }
      if (other.Vol != 0) {
        Vol = other.Vol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VadType = (global::SpeechService.VadType) input.ReadEnum();
            break;
          }
          case 16: {
            Vol = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 唤醒相关数据
  /// </summary>
  public sealed partial class WakeUpInfo : pb::IMessage<WakeUpInfo> {
    private static readonly pb::MessageParser<WakeUpInfo> _parser = new pb::MessageParser<WakeUpInfo>(() => new WakeUpInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WakeUpInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WakeUpInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WakeUpInfo(WakeUpInfo other) : this() {
      angle_ = other.angle_;
      beam_ = other.beam_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WakeUpInfo Clone() {
      return new WakeUpInfo(this);
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 1;
    private int angle_;
    /// <summary>
    /// 唤醒角度, 麦克风朝向用户自身左(0)至右(180), 非语音唤醒为-1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    /// <summary>Field number for the "beam" field.</summary>
    public const int BeamFieldNumber = 2;
    private int beam_;
    /// <summary>
    /// 拾音波束号, 非语音唤醒为-1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Beam {
      get { return beam_; }
      set {
        beam_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WakeUpInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WakeUpInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Angle != other.Angle) return false;
      if (Beam != other.Beam) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Angle != 0) hash ^= Angle.GetHashCode();
      if (Beam != 0) hash ^= Beam.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Angle != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Angle);
      }
      if (Beam != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Beam);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Angle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Angle);
      }
      if (Beam != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Beam);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WakeUpInfo other) {
      if (other == null) {
        return;
      }
      if (other.Angle != 0) {
        Angle = other.Angle;
      }
      if (other.Beam != 0) {
        Beam = other.Beam;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Angle = input.ReadInt32();
            break;
          }
          case 16: {
            Beam = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 识别结果
  /// </summary>
  public sealed partial class ResultInfo : pb::IMessage<ResultInfo> {
    private static readonly pb::MessageParser<ResultInfo> _parser = new pb::MessageParser<ResultInfo>(() => new ResultInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResultInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultInfo(ResultInfo other) : this() {
      words_ = other.words_.Clone();
      sentenceComplete_ = other.sentenceComplete_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultInfo Clone() {
      return new ResultInfo(this);
    }

    /// <summary>Field number for the "words" field.</summary>
    public const int WordsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_words_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> words_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 分词结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Words {
      get { return words_; }
    }

    /// <summary>Field number for the "sentence_complete" field.</summary>
    public const int SentenceCompleteFieldNumber = 2;
    private bool sentenceComplete_;
    /// <summary>
    /// 是否为完整句
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SentenceComplete {
      get { return sentenceComplete_; }
      set {
        sentenceComplete_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResultInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResultInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!words_.Equals(other.words_)) return false;
      if (SentenceComplete != other.SentenceComplete) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= words_.GetHashCode();
      if (SentenceComplete != false) hash ^= SentenceComplete.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      words_.WriteTo(output, _repeated_words_codec);
      if (SentenceComplete != false) {
        output.WriteRawTag(16);
        output.WriteBool(SentenceComplete);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += words_.CalculateSize(_repeated_words_codec);
      if (SentenceComplete != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResultInfo other) {
      if (other == null) {
        return;
      }
      words_.Add(other.words_);
      if (other.SentenceComplete != false) {
        SentenceComplete = other.SentenceComplete;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            words_.AddEntriesFrom(input, _repeated_words_codec);
            break;
          }
          case 16: {
            SentenceComplete = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListenSpeechEventRequest : pb::IMessage<ListenSpeechEventRequest> {
    private static readonly pb::MessageParser<ListenSpeechEventRequest> _parser = new pb::MessageParser<ListenSpeechEventRequest>(() => new ListenSpeechEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListenSpeechEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListenSpeechEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListenSpeechEventRequest(ListenSpeechEventRequest other) : this() {
      withVadVol_ = other.withVadVol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListenSpeechEventRequest Clone() {
      return new ListenSpeechEventRequest(this);
    }

    /// <summary>Field number for the "with_vad_vol" field.</summary>
    public const int WithVadVolFieldNumber = 1;
    private bool withVadVol_;
    /// <summary>
    /// 是否获取vad状态传入语音音量动态变化
    /// 启用与否不影响获取Vad_START, Vad_END
    /// 仅影响Vad_VOLUME_CHANGE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithVadVol {
      get { return withVadVol_; }
      set {
        withVadVol_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListenSpeechEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListenSpeechEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WithVadVol != other.WithVadVol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WithVadVol != false) hash ^= WithVadVol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WithVadVol != false) {
        output.WriteRawTag(8);
        output.WriteBool(WithVadVol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WithVadVol != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListenSpeechEventRequest other) {
      if (other == null) {
        return;
      }
      if (other.WithVadVol != false) {
        WithVadVol = other.WithVadVol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WithVadVol = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListenSpeechEventResponse : pb::IMessage<ListenSpeechEventResponse> {
    private static readonly pb::MessageParser<ListenSpeechEventResponse> _parser = new pb::MessageParser<ListenSpeechEventResponse>(() => new ListenSpeechEventResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListenSpeechEventResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListenSpeechEventResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListenSpeechEventResponse(ListenSpeechEventResponse other) : this() {
      eventType_ = other.eventType_;
      switch (other.SpeechEventOneofCase) {
        case SpeechEventOneofOneofCase.WakeUpInfo:
          WakeUpInfo = other.WakeUpInfo.Clone();
          break;
        case SpeechEventOneofOneofCase.VadInfo:
          VadInfo = other.VadInfo.Clone();
          break;
        case SpeechEventOneofOneofCase.ResultInfo:
          ResultInfo = other.ResultInfo.Clone();
          break;
        case SpeechEventOneofOneofCase.ErrorInfo:
          ErrorInfo = other.ErrorInfo.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListenSpeechEventResponse Clone() {
      return new ListenSpeechEventResponse(this);
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 1;
    private global::SpeechService.SpeechEvent eventType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpeechService.SpeechEvent EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "wake_up_info" field.</summary>
    public const int WakeUpInfoFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpeechService.WakeUpInfo WakeUpInfo {
      get { return speechEventOneofCase_ == SpeechEventOneofOneofCase.WakeUpInfo ? (global::SpeechService.WakeUpInfo) speechEventOneof_ : null; }
      set {
        speechEventOneof_ = value;
        speechEventOneofCase_ = value == null ? SpeechEventOneofOneofCase.None : SpeechEventOneofOneofCase.WakeUpInfo;
      }
    }

    /// <summary>Field number for the "vad_info" field.</summary>
    public const int VadInfoFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpeechService.VadInfo VadInfo {
      get { return speechEventOneofCase_ == SpeechEventOneofOneofCase.VadInfo ? (global::SpeechService.VadInfo) speechEventOneof_ : null; }
      set {
        speechEventOneof_ = value;
        speechEventOneofCase_ = value == null ? SpeechEventOneofOneofCase.None : SpeechEventOneofOneofCase.VadInfo;
      }
    }

    /// <summary>Field number for the "result_info" field.</summary>
    public const int ResultInfoFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpeechService.ResultInfo ResultInfo {
      get { return speechEventOneofCase_ == SpeechEventOneofOneofCase.ResultInfo ? (global::SpeechService.ResultInfo) speechEventOneof_ : null; }
      set {
        speechEventOneof_ = value;
        speechEventOneofCase_ = value == null ? SpeechEventOneofOneofCase.None : SpeechEventOneofOneofCase.ResultInfo;
      }
    }

    /// <summary>Field number for the "error_info" field.</summary>
    public const int ErrorInfoFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpeechService.ErrorInfo ErrorInfo {
      get { return speechEventOneofCase_ == SpeechEventOneofOneofCase.ErrorInfo ? (global::SpeechService.ErrorInfo) speechEventOneof_ : null; }
      set {
        speechEventOneof_ = value;
        speechEventOneofCase_ = value == null ? SpeechEventOneofOneofCase.None : SpeechEventOneofOneofCase.ErrorInfo;
      }
    }

    private object speechEventOneof_;
    /// <summary>Enum of possible cases for the "speech_event_oneof" oneof.</summary>
    public enum SpeechEventOneofOneofCase {
      None = 0,
      WakeUpInfo = 2,
      VadInfo = 3,
      ResultInfo = 4,
      ErrorInfo = 5,
    }
    private SpeechEventOneofOneofCase speechEventOneofCase_ = SpeechEventOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpeechEventOneofOneofCase SpeechEventOneofCase {
      get { return speechEventOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSpeechEventOneof() {
      speechEventOneofCase_ = SpeechEventOneofOneofCase.None;
      speechEventOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListenSpeechEventResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListenSpeechEventResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventType != other.EventType) return false;
      if (!object.Equals(WakeUpInfo, other.WakeUpInfo)) return false;
      if (!object.Equals(VadInfo, other.VadInfo)) return false;
      if (!object.Equals(ResultInfo, other.ResultInfo)) return false;
      if (!object.Equals(ErrorInfo, other.ErrorInfo)) return false;
      if (SpeechEventOneofCase != other.SpeechEventOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventType != 0) hash ^= EventType.GetHashCode();
      if (speechEventOneofCase_ == SpeechEventOneofOneofCase.WakeUpInfo) hash ^= WakeUpInfo.GetHashCode();
      if (speechEventOneofCase_ == SpeechEventOneofOneofCase.VadInfo) hash ^= VadInfo.GetHashCode();
      if (speechEventOneofCase_ == SpeechEventOneofOneofCase.ResultInfo) hash ^= ResultInfo.GetHashCode();
      if (speechEventOneofCase_ == SpeechEventOneofOneofCase.ErrorInfo) hash ^= ErrorInfo.GetHashCode();
      hash ^= (int) speechEventOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EventType);
      }
      if (speechEventOneofCase_ == SpeechEventOneofOneofCase.WakeUpInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(WakeUpInfo);
      }
      if (speechEventOneofCase_ == SpeechEventOneofOneofCase.VadInfo) {
        output.WriteRawTag(26);
        output.WriteMessage(VadInfo);
      }
      if (speechEventOneofCase_ == SpeechEventOneofOneofCase.ResultInfo) {
        output.WriteRawTag(34);
        output.WriteMessage(ResultInfo);
      }
      if (speechEventOneofCase_ == SpeechEventOneofOneofCase.ErrorInfo) {
        output.WriteRawTag(42);
        output.WriteMessage(ErrorInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (speechEventOneofCase_ == SpeechEventOneofOneofCase.WakeUpInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WakeUpInfo);
      }
      if (speechEventOneofCase_ == SpeechEventOneofOneofCase.VadInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VadInfo);
      }
      if (speechEventOneofCase_ == SpeechEventOneofOneofCase.ResultInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResultInfo);
      }
      if (speechEventOneofCase_ == SpeechEventOneofOneofCase.ErrorInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListenSpeechEventResponse other) {
      if (other == null) {
        return;
      }
      if (other.EventType != 0) {
        EventType = other.EventType;
      }
      switch (other.SpeechEventOneofCase) {
        case SpeechEventOneofOneofCase.WakeUpInfo:
          if (WakeUpInfo == null) {
            WakeUpInfo = new global::SpeechService.WakeUpInfo();
          }
          WakeUpInfo.MergeFrom(other.WakeUpInfo);
          break;
        case SpeechEventOneofOneofCase.VadInfo:
          if (VadInfo == null) {
            VadInfo = new global::SpeechService.VadInfo();
          }
          VadInfo.MergeFrom(other.VadInfo);
          break;
        case SpeechEventOneofOneofCase.ResultInfo:
          if (ResultInfo == null) {
            ResultInfo = new global::SpeechService.ResultInfo();
          }
          ResultInfo.MergeFrom(other.ResultInfo);
          break;
        case SpeechEventOneofOneofCase.ErrorInfo:
          if (ErrorInfo == null) {
            ErrorInfo = new global::SpeechService.ErrorInfo();
          }
          ErrorInfo.MergeFrom(other.ErrorInfo);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventType = (global::SpeechService.SpeechEvent) input.ReadEnum();
            break;
          }
          case 18: {
            global::SpeechService.WakeUpInfo subBuilder = new global::SpeechService.WakeUpInfo();
            if (speechEventOneofCase_ == SpeechEventOneofOneofCase.WakeUpInfo) {
              subBuilder.MergeFrom(WakeUpInfo);
            }
            input.ReadMessage(subBuilder);
            WakeUpInfo = subBuilder;
            break;
          }
          case 26: {
            global::SpeechService.VadInfo subBuilder = new global::SpeechService.VadInfo();
            if (speechEventOneofCase_ == SpeechEventOneofOneofCase.VadInfo) {
              subBuilder.MergeFrom(VadInfo);
            }
            input.ReadMessage(subBuilder);
            VadInfo = subBuilder;
            break;
          }
          case 34: {
            global::SpeechService.ResultInfo subBuilder = new global::SpeechService.ResultInfo();
            if (speechEventOneofCase_ == SpeechEventOneofOneofCase.ResultInfo) {
              subBuilder.MergeFrom(ResultInfo);
            }
            input.ReadMessage(subBuilder);
            ResultInfo = subBuilder;
            break;
          }
          case 42: {
            global::SpeechService.ErrorInfo subBuilder = new global::SpeechService.ErrorInfo();
            if (speechEventOneofCase_ == SpeechEventOneofOneofCase.ErrorInfo) {
              subBuilder.MergeFrom(ErrorInfo);
            }
            input.ReadMessage(subBuilder);
            ErrorInfo = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class TextToSpeechRequest : pb::IMessage<TextToSpeechRequest> {
    private static readonly pb::MessageParser<TextToSpeechRequest> _parser = new pb::MessageParser<TextToSpeechRequest>(() => new TextToSpeechRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TextToSpeechRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextToSpeechRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextToSpeechRequest(TextToSpeechRequest other) : this() {
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextToSpeechRequest Clone() {
      return new TextToSpeechRequest(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TextToSpeechRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TextToSpeechRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TextToSpeechRequest other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TextToSpeechResponse : pb::IMessage<TextToSpeechResponse> {
    private static readonly pb::MessageParser<TextToSpeechResponse> _parser = new pb::MessageParser<TextToSpeechResponse>(() => new TextToSpeechResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TextToSpeechResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextToSpeechResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextToSpeechResponse(TextToSpeechResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextToSpeechResponse Clone() {
      return new TextToSpeechResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TextToSpeechResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TextToSpeechResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TextToSpeechResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SpeechStopRequest : pb::IMessage<SpeechStopRequest> {
    private static readonly pb::MessageParser<SpeechStopRequest> _parser = new pb::MessageParser<SpeechStopRequest>(() => new SpeechStopRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpeechStopRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpeechStopRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpeechStopRequest(SpeechStopRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpeechStopRequest Clone() {
      return new SpeechStopRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpeechStopRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpeechStopRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpeechStopRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SpeechStopResponse : pb::IMessage<SpeechStopResponse> {
    private static readonly pb::MessageParser<SpeechStopResponse> _parser = new pb::MessageParser<SpeechStopResponse>(() => new SpeechStopResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpeechStopResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpeechStopResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpeechStopResponse(SpeechStopResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpeechStopResponse Clone() {
      return new SpeechStopResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpeechStopResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpeechStopResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpeechStopResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class WakeUpRequest : pb::IMessage<WakeUpRequest> {
    private static readonly pb::MessageParser<WakeUpRequest> _parser = new pb::MessageParser<WakeUpRequest>(() => new WakeUpRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WakeUpRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WakeUpRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WakeUpRequest(WakeUpRequest other) : this() {
      afterWakeUpSpeechText_ = other.afterWakeUpSpeechText_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WakeUpRequest Clone() {
      return new WakeUpRequest(this);
    }

    /// <summary>Field number for the "after_wake_up_speech_text" field.</summary>
    public const int AfterWakeUpSpeechTextFieldNumber = 1;
    private string afterWakeUpSpeechText_ = "";
    /// <summary>
    /// 唤醒后语音文本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AfterWakeUpSpeechText {
      get { return afterWakeUpSpeechText_; }
      set {
        afterWakeUpSpeechText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WakeUpRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WakeUpRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AfterWakeUpSpeechText != other.AfterWakeUpSpeechText) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AfterWakeUpSpeechText.Length != 0) hash ^= AfterWakeUpSpeechText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AfterWakeUpSpeechText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AfterWakeUpSpeechText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AfterWakeUpSpeechText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AfterWakeUpSpeechText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WakeUpRequest other) {
      if (other == null) {
        return;
      }
      if (other.AfterWakeUpSpeechText.Length != 0) {
        AfterWakeUpSpeechText = other.AfterWakeUpSpeechText;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AfterWakeUpSpeechText = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WakeUpResponse : pb::IMessage<WakeUpResponse> {
    private static readonly pb::MessageParser<WakeUpResponse> _parser = new pb::MessageParser<WakeUpResponse>(() => new WakeUpResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WakeUpResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WakeUpResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WakeUpResponse(WakeUpResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WakeUpResponse Clone() {
      return new WakeUpResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WakeUpResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WakeUpResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WakeUpResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class HibernateRequest : pb::IMessage<HibernateRequest> {
    private static readonly pb::MessageParser<HibernateRequest> _parser = new pb::MessageParser<HibernateRequest>(() => new HibernateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HibernateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HibernateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HibernateRequest(HibernateRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HibernateRequest Clone() {
      return new HibernateRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HibernateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HibernateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HibernateRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class HibernateResponse : pb::IMessage<HibernateResponse> {
    private static readonly pb::MessageParser<HibernateResponse> _parser = new pb::MessageParser<HibernateResponse>(() => new HibernateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HibernateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HibernateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HibernateResponse(HibernateResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HibernateResponse Clone() {
      return new HibernateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HibernateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HibernateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HibernateResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 音量信息
  /// </summary>
  public sealed partial class VoiceVolumeInfo : pb::IMessage<VoiceVolumeInfo> {
    private static readonly pb::MessageParser<VoiceVolumeInfo> _parser = new pb::MessageParser<VoiceVolumeInfo>(() => new VoiceVolumeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoiceVolumeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoiceVolumeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoiceVolumeInfo(VoiceVolumeInfo other) : this() {
      vol_ = other.vol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoiceVolumeInfo Clone() {
      return new VoiceVolumeInfo(this);
    }

    /// <summary>Field number for the "vol" field.</summary>
    public const int VolFieldNumber = 1;
    private uint vol_;
    /// <summary>
    /// 音量值 0-10
    /// aiui模块硬件限制值: 2-10
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Vol {
      get { return vol_; }
      set {
        vol_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoiceVolumeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoiceVolumeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Vol != other.Vol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Vol != 0) hash ^= Vol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Vol != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Vol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Vol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Vol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoiceVolumeInfo other) {
      if (other == null) {
        return;
      }
      if (other.Vol != 0) {
        Vol = other.Vol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Vol = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetVoiceVolumeRequest : pb::IMessage<SetVoiceVolumeRequest> {
    private static readonly pb::MessageParser<SetVoiceVolumeRequest> _parser = new pb::MessageParser<SetVoiceVolumeRequest>(() => new SetVoiceVolumeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetVoiceVolumeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetVoiceVolumeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetVoiceVolumeRequest(SetVoiceVolumeRequest other) : this() {
      voiceVolumeInfo_ = other.voiceVolumeInfo_ != null ? other.voiceVolumeInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetVoiceVolumeRequest Clone() {
      return new SetVoiceVolumeRequest(this);
    }

    /// <summary>Field number for the "voice_volume_info" field.</summary>
    public const int VoiceVolumeInfoFieldNumber = 1;
    private global::SpeechService.VoiceVolumeInfo voiceVolumeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpeechService.VoiceVolumeInfo VoiceVolumeInfo {
      get { return voiceVolumeInfo_; }
      set {
        voiceVolumeInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetVoiceVolumeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetVoiceVolumeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VoiceVolumeInfo, other.VoiceVolumeInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voiceVolumeInfo_ != null) hash ^= VoiceVolumeInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voiceVolumeInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VoiceVolumeInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voiceVolumeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoiceVolumeInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetVoiceVolumeRequest other) {
      if (other == null) {
        return;
      }
      if (other.voiceVolumeInfo_ != null) {
        if (voiceVolumeInfo_ == null) {
          VoiceVolumeInfo = new global::SpeechService.VoiceVolumeInfo();
        }
        VoiceVolumeInfo.MergeFrom(other.VoiceVolumeInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voiceVolumeInfo_ == null) {
              VoiceVolumeInfo = new global::SpeechService.VoiceVolumeInfo();
            }
            input.ReadMessage(VoiceVolumeInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetVoiceVolumeResponse : pb::IMessage<SetVoiceVolumeResponse> {
    private static readonly pb::MessageParser<SetVoiceVolumeResponse> _parser = new pb::MessageParser<SetVoiceVolumeResponse>(() => new SetVoiceVolumeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetVoiceVolumeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetVoiceVolumeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetVoiceVolumeResponse(SetVoiceVolumeResponse other) : this() {
      voiceVolumeInfo_ = other.voiceVolumeInfo_ != null ? other.voiceVolumeInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetVoiceVolumeResponse Clone() {
      return new SetVoiceVolumeResponse(this);
    }

    /// <summary>Field number for the "voice_volume_info" field.</summary>
    public const int VoiceVolumeInfoFieldNumber = 1;
    private global::SpeechService.VoiceVolumeInfo voiceVolumeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpeechService.VoiceVolumeInfo VoiceVolumeInfo {
      get { return voiceVolumeInfo_; }
      set {
        voiceVolumeInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetVoiceVolumeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetVoiceVolumeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VoiceVolumeInfo, other.VoiceVolumeInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voiceVolumeInfo_ != null) hash ^= VoiceVolumeInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voiceVolumeInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VoiceVolumeInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voiceVolumeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoiceVolumeInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetVoiceVolumeResponse other) {
      if (other == null) {
        return;
      }
      if (other.voiceVolumeInfo_ != null) {
        if (voiceVolumeInfo_ == null) {
          VoiceVolumeInfo = new global::SpeechService.VoiceVolumeInfo();
        }
        VoiceVolumeInfo.MergeFrom(other.VoiceVolumeInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voiceVolumeInfo_ == null) {
              VoiceVolumeInfo = new global::SpeechService.VoiceVolumeInfo();
            }
            input.ReadMessage(VoiceVolumeInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetVoiceVolumeRequest : pb::IMessage<GetVoiceVolumeRequest> {
    private static readonly pb::MessageParser<GetVoiceVolumeRequest> _parser = new pb::MessageParser<GetVoiceVolumeRequest>(() => new GetVoiceVolumeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVoiceVolumeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVoiceVolumeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVoiceVolumeRequest(GetVoiceVolumeRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVoiceVolumeRequest Clone() {
      return new GetVoiceVolumeRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVoiceVolumeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVoiceVolumeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVoiceVolumeRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetVoiceVolumeResponse : pb::IMessage<GetVoiceVolumeResponse> {
    private static readonly pb::MessageParser<GetVoiceVolumeResponse> _parser = new pb::MessageParser<GetVoiceVolumeResponse>(() => new GetVoiceVolumeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVoiceVolumeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVoiceVolumeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVoiceVolumeResponse(GetVoiceVolumeResponse other) : this() {
      voiceVolumeInfo_ = other.voiceVolumeInfo_ != null ? other.voiceVolumeInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVoiceVolumeResponse Clone() {
      return new GetVoiceVolumeResponse(this);
    }

    /// <summary>Field number for the "voice_volume_info" field.</summary>
    public const int VoiceVolumeInfoFieldNumber = 1;
    private global::SpeechService.VoiceVolumeInfo voiceVolumeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpeechService.VoiceVolumeInfo VoiceVolumeInfo {
      get { return voiceVolumeInfo_; }
      set {
        voiceVolumeInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVoiceVolumeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVoiceVolumeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VoiceVolumeInfo, other.VoiceVolumeInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voiceVolumeInfo_ != null) hash ^= VoiceVolumeInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voiceVolumeInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VoiceVolumeInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voiceVolumeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoiceVolumeInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVoiceVolumeResponse other) {
      if (other == null) {
        return;
      }
      if (other.voiceVolumeInfo_ != null) {
        if (voiceVolumeInfo_ == null) {
          VoiceVolumeInfo = new global::SpeechService.VoiceVolumeInfo();
        }
        VoiceVolumeInfo.MergeFrom(other.VoiceVolumeInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voiceVolumeInfo_ == null) {
              VoiceVolumeInfo = new global::SpeechService.VoiceVolumeInfo();
            }
            input.ReadMessage(VoiceVolumeInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetParamsRequest : pb::IMessage<SetParamsRequest> {
    private static readonly pb::MessageParser<SetParamsRequest> _parser = new pb::MessageParser<SetParamsRequest>(() => new SetParamsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetParamsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetParamsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetParamsRequest(SetParamsRequest other) : this() {
      params_ = other.params_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetParamsRequest Clone() {
      return new SetParamsRequest(this);
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 1;
    private pb::ByteString params_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Params {
      get { return params_; }
      set {
        params_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetParamsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetParamsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Params != other.Params) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Params.Length != 0) hash ^= Params.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Params.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Params);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Params.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Params);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetParamsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Params.Length != 0) {
        Params = other.Params;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Params = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetParamsResponse : pb::IMessage<SetParamsResponse> {
    private static readonly pb::MessageParser<SetParamsResponse> _parser = new pb::MessageParser<SetParamsResponse>(() => new SetParamsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetParamsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpeechService.SpeechReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetParamsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetParamsResponse(SetParamsResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetParamsResponse Clone() {
      return new SetParamsResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetParamsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetParamsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetParamsResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
