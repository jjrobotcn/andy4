# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import speech_pb2 as speech__pb2


class SpeechServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListenSpeechEvent = channel.unary_stream(
        '/speechService.SpeechService/ListenSpeechEvent',
        request_serializer=speech__pb2.ListenSpeechEventRequest.SerializeToString,
        response_deserializer=speech__pb2.ListenSpeechEventResponse.FromString,
        )
    self.TextToSpeech = channel.unary_unary(
        '/speechService.SpeechService/TextToSpeech',
        request_serializer=speech__pb2.TextToSpeechRequest.SerializeToString,
        response_deserializer=speech__pb2.TextToSpeechResponse.FromString,
        )
    self.SpeechStop = channel.unary_unary(
        '/speechService.SpeechService/SpeechStop',
        request_serializer=speech__pb2.SpeechStopRequest.SerializeToString,
        response_deserializer=speech__pb2.SpeechStopResponse.FromString,
        )
    self.WakeUp = channel.unary_unary(
        '/speechService.SpeechService/WakeUp',
        request_serializer=speech__pb2.WakeUpRequest.SerializeToString,
        response_deserializer=speech__pb2.WakeUpResponse.FromString,
        )
    self.Hibernate = channel.unary_unary(
        '/speechService.SpeechService/Hibernate',
        request_serializer=speech__pb2.HibernateRequest.SerializeToString,
        response_deserializer=speech__pb2.HibernateResponse.FromString,
        )
    self.SetVoiceVolume = channel.unary_unary(
        '/speechService.SpeechService/SetVoiceVolume',
        request_serializer=speech__pb2.SetVoiceVolumeRequest.SerializeToString,
        response_deserializer=speech__pb2.SetVoiceVolumeResponse.FromString,
        )
    self.GetVoiceVolume = channel.unary_unary(
        '/speechService.SpeechService/GetVoiceVolume',
        request_serializer=speech__pb2.GetVoiceVolumeRequest.SerializeToString,
        response_deserializer=speech__pb2.GetVoiceVolumeResponse.FromString,
        )
    self.SetParams = channel.unary_unary(
        '/speechService.SpeechService/SetParams',
        request_serializer=speech__pb2.SetParamsRequest.SerializeToString,
        response_deserializer=speech__pb2.SetParamsResponse.FromString,
        )


class SpeechServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ListenSpeechEvent(self, request, context):
    """ListenSpeechEvent方法为监听语音事件变更状态流, 具体类型参考: SpeechEvent
    ListenSpeechEventRequest中可配置相关状态消息过滤,
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TextToSpeech(self, request, context):
    """TextToSpeech(TTS)方法实现文本输入语音合成自动音频输出
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SpeechStop(self, request, context):
    """SpeechStop方法实现打断语音功能
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def WakeUp(self, request, context):
    """唤醒
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Hibernate(self, request, context):
    """休眠
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetVoiceVolume(self, request, context):
    """设置语音音量
    v2.1.0
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetVoiceVolume(self, request, context):
    """查询语音音量
    v2.1.0
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetParams(self, request, context):
    """配置参数(当前仅支持AIUI模块)
    v2.1.0
    AIUI模块参数配置参考: https://aiui.xfyun.cn/docs/access_docs (开发-评估板/量产板 => AIUI SDK => 参数配置)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SpeechServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListenSpeechEvent': grpc.unary_stream_rpc_method_handler(
          servicer.ListenSpeechEvent,
          request_deserializer=speech__pb2.ListenSpeechEventRequest.FromString,
          response_serializer=speech__pb2.ListenSpeechEventResponse.SerializeToString,
      ),
      'TextToSpeech': grpc.unary_unary_rpc_method_handler(
          servicer.TextToSpeech,
          request_deserializer=speech__pb2.TextToSpeechRequest.FromString,
          response_serializer=speech__pb2.TextToSpeechResponse.SerializeToString,
      ),
      'SpeechStop': grpc.unary_unary_rpc_method_handler(
          servicer.SpeechStop,
          request_deserializer=speech__pb2.SpeechStopRequest.FromString,
          response_serializer=speech__pb2.SpeechStopResponse.SerializeToString,
      ),
      'WakeUp': grpc.unary_unary_rpc_method_handler(
          servicer.WakeUp,
          request_deserializer=speech__pb2.WakeUpRequest.FromString,
          response_serializer=speech__pb2.WakeUpResponse.SerializeToString,
      ),
      'Hibernate': grpc.unary_unary_rpc_method_handler(
          servicer.Hibernate,
          request_deserializer=speech__pb2.HibernateRequest.FromString,
          response_serializer=speech__pb2.HibernateResponse.SerializeToString,
      ),
      'SetVoiceVolume': grpc.unary_unary_rpc_method_handler(
          servicer.SetVoiceVolume,
          request_deserializer=speech__pb2.SetVoiceVolumeRequest.FromString,
          response_serializer=speech__pb2.SetVoiceVolumeResponse.SerializeToString,
      ),
      'GetVoiceVolume': grpc.unary_unary_rpc_method_handler(
          servicer.GetVoiceVolume,
          request_deserializer=speech__pb2.GetVoiceVolumeRequest.FromString,
          response_serializer=speech__pb2.GetVoiceVolumeResponse.SerializeToString,
      ),
      'SetParams': grpc.unary_unary_rpc_method_handler(
          servicer.SetParams,
          request_deserializer=speech__pb2.SetParamsRequest.FromString,
          response_serializer=speech__pb2.SetParamsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'speechService.SpeechService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
