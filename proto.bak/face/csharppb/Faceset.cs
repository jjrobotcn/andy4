// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: faceset.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace FaceRecognition {

  /// <summary>Holder for reflection information generated from faceset.proto</summary>
  public static partial class FacesetReflection {

    #region Descriptor
    /// <summary>File descriptor for faceset.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FacesetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1mYWNlc2V0LnByb3RvEg9mYWNlUmVjb2duaXRpb24aHGdvb2dsZS9hcGkv",
            "YW5ub3RhdGlvbnMucHJvdG8iIwoHRmFjZVNldBIKCgJpZBgBIAEoCRIMCgRu",
            "YW1lGAIgASgJIpoBCgpGYWNlRGV0YWlsEhIKCmZhY2VfdG9rZW4YASABKAkS",
            "EAoIZmFjZV9pbWcYAiABKAwSNwoGZGV0YWlsGAMgAygLMicuZmFjZVJlY29n",
            "bml0aW9uLkZhY2VEZXRhaWwuRGV0YWlsRW50cnkaLQoLRGV0YWlsRW50cnkS",
            "CwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASIhChFOZXdGYWNlU2V0",
            "UmVxdWVzdBIMCgRuYW1lGAEgASgJIkAKEk5ld0ZhY2VTZXRSZXNwb25zZRIq",
            "CghmYWNlX3NldBgBIAEoCzIYLmZhY2VSZWNvZ25pdGlvbi5GYWNlU2V0IisK",
            "FERlbGV0ZUZhY2VTZXRSZXF1ZXN0EhMKC2ZhY2Vfc2V0X2lkGAEgASgJIhcK",
            "FURlbGV0ZUZhY2VTZXRSZXNwb25zZSJCChRVcGRhdGVGYWNlU2V0UmVxdWVz",
            "dBIqCghmYWNlX3NldBgBIAEoCzIYLmZhY2VSZWNvZ25pdGlvbi5GYWNlU2V0",
            "IkMKFVVwZGF0ZUZhY2VTZXRSZXNwb25zZRIqCghmYWNlX3NldBgBIAEoCzIY",
            "LmZhY2VSZWNvZ25pdGlvbi5GYWNlU2V0IhUKE0xpc3RGYWNlU2V0c1JlcXVl",
            "c3QiQwoUTGlzdEZhY2VTZXRzUmVzcG9uc2USKwoJZmFjZV9zZXRzGAEgAygL",
            "MhguZmFjZVJlY29nbml0aW9uLkZhY2VTZXQiowEKDkFkZEZhY2VSZXF1ZXN0",
            "EhMKC2ZhY2Vfc2V0X2lkGAEgASgJEhAKCGZhY2VfaW1nGAIgASgMEjsKBmRl",
            "dGFpbBgDIAMoCzIrLmZhY2VSZWNvZ25pdGlvbi5BZGRGYWNlUmVxdWVzdC5E",
            "ZXRhaWxFbnRyeRotCgtEZXRhaWxFbnRyeRILCgNrZXkYASABKAkSDQoFdmFs",
            "dWUYAiABKAk6AjgBIiUKD0FkZEZhY2VSZXNwb25zZRISCgpmYWNlX3Rva2Vu",
            "GAEgASgJIjwKEVJlbW92ZUZhY2VSZXF1ZXN0EhMKC2ZhY2Vfc2V0X2lkGAEg",
            "ASgJEhIKCmZhY2VfdG9rZW4YAiABKAkiFAoSUmVtb3ZlRmFjZVJlc3BvbnNl",
            "IlMKEUZhY2VEZXRhaWxSZXF1ZXN0EhMKC2ZhY2Vfc2V0X2lkGAEgASgJEhIK",
            "CmZhY2VfdG9rZW4YAiABKAkSFQoNd2l0aF9mYWNlX2ltZxgDIAEoCCJGChJG",
            "YWNlRGV0YWlsUmVzcG9uc2USMAoLZmFjZV9kZXRhaWwYASABKAsyGy5mYWNl",
            "UmVjb2duaXRpb24uRmFjZURldGFpbCJMChZMaXN0RmFjZURldGFpbHNSZXF1",
            "ZXN0EhMKC2ZhY2Vfc2V0X2lkGAEgASgJEg0KBWxpbWl0GAIgASgNEg4KBm9m",
            "ZnNldBgDIAEoDSKHAQoXTGlzdEZhY2VEZXRhaWxzUmVzcG9uc2USKgoIZmFj",
            "ZV9zZXQYASABKAsyGC5mYWNlUmVjb2duaXRpb24uRmFjZVNldBIxCgxmYWNl",
            "X2RldGFpbHMYAiADKAsyGy5mYWNlUmVjb2duaXRpb24uRmFjZURldGFpbBIN",
            "CgV0b3RhbBgDIAEoDTLsCAoORmFjZVNldFNlcnZpY2UShAEKCk5ld0ZhY2VT",
            "ZXQSIi5mYWNlUmVjb2duaXRpb24uTmV3RmFjZVNldFJlcXVlc3QaIy5mYWNl",
            "UmVjb2duaXRpb24uTmV3RmFjZVNldFJlc3BvbnNlIi2C0+STAiciIi9hcGkv",
            "djIvZmFjZS9mYWNlLXNldC9uZXdfZmFjZV9zZXQ6ASoSkAEKDURlbGV0ZUZh",
            "Y2VTZXQSJS5mYWNlUmVjb2duaXRpb24uRGVsZXRlRmFjZVNldFJlcXVlc3Qa",
            "Ji5mYWNlUmVjb2duaXRpb24uRGVsZXRlRmFjZVNldFJlc3BvbnNlIjCC0+ST",
            "AioiJS9hcGkvdjIvZmFjZS9mYWNlLXNldC9kZWxldGVfZmFjZV9zZXQ6ASoS",
            "kAEKDVVwZGF0ZUZhY2VTZXQSJS5mYWNlUmVjb2duaXRpb24uVXBkYXRlRmFj",
            "ZVNldFJlcXVlc3QaJi5mYWNlUmVjb2duaXRpb24uVXBkYXRlRmFjZVNldFJl",
            "c3BvbnNlIjCC0+STAioiJS9hcGkvdjIvZmFjZS9mYWNlLXNldC91cGRhdGVf",
            "ZmFjZV9zZXQ6ASoSjAEKDExpc3RGYWNlU2V0cxIkLmZhY2VSZWNvZ25pdGlv",
            "bi5MaXN0RmFjZVNldHNSZXF1ZXN0GiUuZmFjZVJlY29nbml0aW9uLkxpc3RG",
            "YWNlU2V0c1Jlc3BvbnNlIi+C0+STAikiJC9hcGkvdjIvZmFjZS9mYWNlLXNl",
            "dC9saXN0X2ZhY2Vfc2V0czoBKhJ3CgdBZGRGYWNlEh8uZmFjZVJlY29nbml0",
            "aW9uLkFkZEZhY2VSZXF1ZXN0GiAuZmFjZVJlY29nbml0aW9uLkFkZEZhY2VS",
            "ZXNwb25zZSIpgtPkkwIjIh4vYXBpL3YyL2ZhY2UvZmFjZS1zZXQvYWRkX2Zh",
            "Y2U6ASoSgwEKClJlbW92ZUZhY2USIi5mYWNlUmVjb2duaXRpb24uUmVtb3Zl",
            "RmFjZVJlcXVlc3QaIy5mYWNlUmVjb2duaXRpb24uUmVtb3ZlRmFjZVJlc3Bv",
            "bnNlIiyC0+STAiYiIS9hcGkvdjIvZmFjZS9mYWNlLXNldC9yZW1vdmVfZmFj",
            "ZToBKhKDAQoKRmFjZURldGFpbBIiLmZhY2VSZWNvZ25pdGlvbi5GYWNlRGV0",
            "YWlsUmVxdWVzdBojLmZhY2VSZWNvZ25pdGlvbi5GYWNlRGV0YWlsUmVzcG9u",
            "c2UiLILT5JMCJiIhL2FwaS92Mi9mYWNlL2ZhY2Utc2V0L2ZhY2VfZGV0YWls",
            "OgEqEpgBCg9MaXN0RmFjZURldGFpbHMSJy5mYWNlUmVjb2duaXRpb24uTGlz",
            "dEZhY2VEZXRhaWxzUmVxdWVzdBooLmZhY2VSZWNvZ25pdGlvbi5MaXN0RmFj",
            "ZURldGFpbHNSZXNwb25zZSIygtPkkwIsIicvYXBpL3YyL2ZhY2UvZmFjZS1z",
            "ZXQvbGlzdF9mYWNlX2RldGFpbHM6ASpCC0IJRmFjZVNldFBiYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.FaceSet), global::FaceRecognition.FaceSet.Parser, new[]{ "Id", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.FaceDetail), global::FaceRecognition.FaceDetail.Parser, new[]{ "FaceToken", "FaceImg", "Detail" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.NewFaceSetRequest), global::FaceRecognition.NewFaceSetRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.NewFaceSetResponse), global::FaceRecognition.NewFaceSetResponse.Parser, new[]{ "FaceSet" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.DeleteFaceSetRequest), global::FaceRecognition.DeleteFaceSetRequest.Parser, new[]{ "FaceSetId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.DeleteFaceSetResponse), global::FaceRecognition.DeleteFaceSetResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.UpdateFaceSetRequest), global::FaceRecognition.UpdateFaceSetRequest.Parser, new[]{ "FaceSet" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.UpdateFaceSetResponse), global::FaceRecognition.UpdateFaceSetResponse.Parser, new[]{ "FaceSet" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.ListFaceSetsRequest), global::FaceRecognition.ListFaceSetsRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.ListFaceSetsResponse), global::FaceRecognition.ListFaceSetsResponse.Parser, new[]{ "FaceSets" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.AddFaceRequest), global::FaceRecognition.AddFaceRequest.Parser, new[]{ "FaceSetId", "FaceImg", "Detail" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.AddFaceResponse), global::FaceRecognition.AddFaceResponse.Parser, new[]{ "FaceToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.RemoveFaceRequest), global::FaceRecognition.RemoveFaceRequest.Parser, new[]{ "FaceSetId", "FaceToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.RemoveFaceResponse), global::FaceRecognition.RemoveFaceResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.FaceDetailRequest), global::FaceRecognition.FaceDetailRequest.Parser, new[]{ "FaceSetId", "FaceToken", "WithFaceImg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.FaceDetailResponse), global::FaceRecognition.FaceDetailResponse.Parser, new[]{ "FaceDetail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.ListFaceDetailsRequest), global::FaceRecognition.ListFaceDetailsRequest.Parser, new[]{ "FaceSetId", "Limit", "Offset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.ListFaceDetailsResponse), global::FaceRecognition.ListFaceDetailsResponse.Parser, new[]{ "FaceSet", "FaceDetails", "Total" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FaceSet : pb::IMessage<FaceSet> {
    private static readonly pb::MessageParser<FaceSet> _parser = new pb::MessageParser<FaceSet>(() => new FaceSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaceSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceSet(FaceSet other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceSet Clone() {
      return new FaceSet(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaceSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaceSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaceSet other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FaceDetail : pb::IMessage<FaceDetail> {
    private static readonly pb::MessageParser<FaceDetail> _parser = new pb::MessageParser<FaceDetail>(() => new FaceDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaceDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceDetail(FaceDetail other) : this() {
      faceToken_ = other.faceToken_;
      faceImg_ = other.faceImg_;
      detail_ = other.detail_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceDetail Clone() {
      return new FaceDetail(this);
    }

    /// <summary>Field number for the "face_token" field.</summary>
    public const int FaceTokenFieldNumber = 1;
    private string faceToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaceToken {
      get { return faceToken_; }
      set {
        faceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "face_img" field.</summary>
    public const int FaceImgFieldNumber = 2;
    private pb::ByteString faceImg_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FaceImg {
      get { return faceImg_; }
      set {
        faceImg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_detail_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> detail_ = new pbc::MapField<string, string>();
    /// <summary>
    /// 自定义detail
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Detail {
      get { return detail_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaceDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaceDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FaceToken != other.FaceToken) return false;
      if (FaceImg != other.FaceImg) return false;
      if (!Detail.Equals(other.Detail)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FaceToken.Length != 0) hash ^= FaceToken.GetHashCode();
      if (FaceImg.Length != 0) hash ^= FaceImg.GetHashCode();
      hash ^= Detail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FaceToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FaceToken);
      }
      if (FaceImg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(FaceImg);
      }
      detail_.WriteTo(output, _map_detail_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FaceToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceToken);
      }
      if (FaceImg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FaceImg);
      }
      size += detail_.CalculateSize(_map_detail_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaceDetail other) {
      if (other == null) {
        return;
      }
      if (other.FaceToken.Length != 0) {
        FaceToken = other.FaceToken;
      }
      if (other.FaceImg.Length != 0) {
        FaceImg = other.FaceImg;
      }
      detail_.Add(other.detail_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FaceToken = input.ReadString();
            break;
          }
          case 18: {
            FaceImg = input.ReadBytes();
            break;
          }
          case 26: {
            detail_.AddEntriesFrom(input, _map_detail_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewFaceSetRequest : pb::IMessage<NewFaceSetRequest> {
    private static readonly pb::MessageParser<NewFaceSetRequest> _parser = new pb::MessageParser<NewFaceSetRequest>(() => new NewFaceSetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewFaceSetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewFaceSetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewFaceSetRequest(NewFaceSetRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewFaceSetRequest Clone() {
      return new NewFaceSetRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewFaceSetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewFaceSetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewFaceSetRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewFaceSetResponse : pb::IMessage<NewFaceSetResponse> {
    private static readonly pb::MessageParser<NewFaceSetResponse> _parser = new pb::MessageParser<NewFaceSetResponse>(() => new NewFaceSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewFaceSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewFaceSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewFaceSetResponse(NewFaceSetResponse other) : this() {
      faceSet_ = other.faceSet_ != null ? other.faceSet_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewFaceSetResponse Clone() {
      return new NewFaceSetResponse(this);
    }

    /// <summary>Field number for the "face_set" field.</summary>
    public const int FaceSetFieldNumber = 1;
    private global::FaceRecognition.FaceSet faceSet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FaceRecognition.FaceSet FaceSet {
      get { return faceSet_; }
      set {
        faceSet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewFaceSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewFaceSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FaceSet, other.FaceSet)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (faceSet_ != null) hash ^= FaceSet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (faceSet_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FaceSet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (faceSet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FaceSet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewFaceSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.faceSet_ != null) {
        if (faceSet_ == null) {
          FaceSet = new global::FaceRecognition.FaceSet();
        }
        FaceSet.MergeFrom(other.FaceSet);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (faceSet_ == null) {
              FaceSet = new global::FaceRecognition.FaceSet();
            }
            input.ReadMessage(FaceSet);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteFaceSetRequest : pb::IMessage<DeleteFaceSetRequest> {
    private static readonly pb::MessageParser<DeleteFaceSetRequest> _parser = new pb::MessageParser<DeleteFaceSetRequest>(() => new DeleteFaceSetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteFaceSetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFaceSetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFaceSetRequest(DeleteFaceSetRequest other) : this() {
      faceSetId_ = other.faceSetId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFaceSetRequest Clone() {
      return new DeleteFaceSetRequest(this);
    }

    /// <summary>Field number for the "face_set_id" field.</summary>
    public const int FaceSetIdFieldNumber = 1;
    private string faceSetId_ = "";
    /// <summary>
    /// FaceSet.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaceSetId {
      get { return faceSetId_; }
      set {
        faceSetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteFaceSetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteFaceSetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FaceSetId != other.FaceSetId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FaceSetId.Length != 0) hash ^= FaceSetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FaceSetId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FaceSetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FaceSetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceSetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteFaceSetRequest other) {
      if (other == null) {
        return;
      }
      if (other.FaceSetId.Length != 0) {
        FaceSetId = other.FaceSetId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FaceSetId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteFaceSetResponse : pb::IMessage<DeleteFaceSetResponse> {
    private static readonly pb::MessageParser<DeleteFaceSetResponse> _parser = new pb::MessageParser<DeleteFaceSetResponse>(() => new DeleteFaceSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteFaceSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFaceSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFaceSetResponse(DeleteFaceSetResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFaceSetResponse Clone() {
      return new DeleteFaceSetResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteFaceSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteFaceSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteFaceSetResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class UpdateFaceSetRequest : pb::IMessage<UpdateFaceSetRequest> {
    private static readonly pb::MessageParser<UpdateFaceSetRequest> _parser = new pb::MessageParser<UpdateFaceSetRequest>(() => new UpdateFaceSetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateFaceSetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFaceSetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFaceSetRequest(UpdateFaceSetRequest other) : this() {
      faceSet_ = other.faceSet_ != null ? other.faceSet_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFaceSetRequest Clone() {
      return new UpdateFaceSetRequest(this);
    }

    /// <summary>Field number for the "face_set" field.</summary>
    public const int FaceSetFieldNumber = 1;
    private global::FaceRecognition.FaceSet faceSet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FaceRecognition.FaceSet FaceSet {
      get { return faceSet_; }
      set {
        faceSet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateFaceSetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateFaceSetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FaceSet, other.FaceSet)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (faceSet_ != null) hash ^= FaceSet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (faceSet_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FaceSet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (faceSet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FaceSet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateFaceSetRequest other) {
      if (other == null) {
        return;
      }
      if (other.faceSet_ != null) {
        if (faceSet_ == null) {
          FaceSet = new global::FaceRecognition.FaceSet();
        }
        FaceSet.MergeFrom(other.FaceSet);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (faceSet_ == null) {
              FaceSet = new global::FaceRecognition.FaceSet();
            }
            input.ReadMessage(FaceSet);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateFaceSetResponse : pb::IMessage<UpdateFaceSetResponse> {
    private static readonly pb::MessageParser<UpdateFaceSetResponse> _parser = new pb::MessageParser<UpdateFaceSetResponse>(() => new UpdateFaceSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateFaceSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFaceSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFaceSetResponse(UpdateFaceSetResponse other) : this() {
      faceSet_ = other.faceSet_ != null ? other.faceSet_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFaceSetResponse Clone() {
      return new UpdateFaceSetResponse(this);
    }

    /// <summary>Field number for the "face_set" field.</summary>
    public const int FaceSetFieldNumber = 1;
    private global::FaceRecognition.FaceSet faceSet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FaceRecognition.FaceSet FaceSet {
      get { return faceSet_; }
      set {
        faceSet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateFaceSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateFaceSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FaceSet, other.FaceSet)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (faceSet_ != null) hash ^= FaceSet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (faceSet_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FaceSet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (faceSet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FaceSet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateFaceSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.faceSet_ != null) {
        if (faceSet_ == null) {
          FaceSet = new global::FaceRecognition.FaceSet();
        }
        FaceSet.MergeFrom(other.FaceSet);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (faceSet_ == null) {
              FaceSet = new global::FaceRecognition.FaceSet();
            }
            input.ReadMessage(FaceSet);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListFaceSetsRequest : pb::IMessage<ListFaceSetsRequest> {
    private static readonly pb::MessageParser<ListFaceSetsRequest> _parser = new pb::MessageParser<ListFaceSetsRequest>(() => new ListFaceSetsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFaceSetsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFaceSetsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFaceSetsRequest(ListFaceSetsRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFaceSetsRequest Clone() {
      return new ListFaceSetsRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFaceSetsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFaceSetsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFaceSetsRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ListFaceSetsResponse : pb::IMessage<ListFaceSetsResponse> {
    private static readonly pb::MessageParser<ListFaceSetsResponse> _parser = new pb::MessageParser<ListFaceSetsResponse>(() => new ListFaceSetsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFaceSetsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFaceSetsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFaceSetsResponse(ListFaceSetsResponse other) : this() {
      faceSets_ = other.faceSets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFaceSetsResponse Clone() {
      return new ListFaceSetsResponse(this);
    }

    /// <summary>Field number for the "face_sets" field.</summary>
    public const int FaceSetsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FaceRecognition.FaceSet> _repeated_faceSets_codec
        = pb::FieldCodec.ForMessage(10, global::FaceRecognition.FaceSet.Parser);
    private readonly pbc::RepeatedField<global::FaceRecognition.FaceSet> faceSets_ = new pbc::RepeatedField<global::FaceRecognition.FaceSet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FaceRecognition.FaceSet> FaceSets {
      get { return faceSets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFaceSetsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFaceSetsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!faceSets_.Equals(other.faceSets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= faceSets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      faceSets_.WriteTo(output, _repeated_faceSets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += faceSets_.CalculateSize(_repeated_faceSets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFaceSetsResponse other) {
      if (other == null) {
        return;
      }
      faceSets_.Add(other.faceSets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            faceSets_.AddEntriesFrom(input, _repeated_faceSets_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddFaceRequest : pb::IMessage<AddFaceRequest> {
    private static readonly pb::MessageParser<AddFaceRequest> _parser = new pb::MessageParser<AddFaceRequest>(() => new AddFaceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddFaceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddFaceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddFaceRequest(AddFaceRequest other) : this() {
      faceSetId_ = other.faceSetId_;
      faceImg_ = other.faceImg_;
      detail_ = other.detail_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddFaceRequest Clone() {
      return new AddFaceRequest(this);
    }

    /// <summary>Field number for the "face_set_id" field.</summary>
    public const int FaceSetIdFieldNumber = 1;
    private string faceSetId_ = "";
    /// <summary>
    /// FaceSet.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaceSetId {
      get { return faceSetId_; }
      set {
        faceSetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "face_img" field.</summary>
    public const int FaceImgFieldNumber = 2;
    private pb::ByteString faceImg_ = pb::ByteString.Empty;
    /// <summary>
    /// 待识别添加的人脸图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FaceImg {
      get { return faceImg_; }
      set {
        faceImg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_detail_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> detail_ = new pbc::MapField<string, string>();
    /// <summary>
    /// 自定义信息数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Detail {
      get { return detail_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddFaceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddFaceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FaceSetId != other.FaceSetId) return false;
      if (FaceImg != other.FaceImg) return false;
      if (!Detail.Equals(other.Detail)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FaceSetId.Length != 0) hash ^= FaceSetId.GetHashCode();
      if (FaceImg.Length != 0) hash ^= FaceImg.GetHashCode();
      hash ^= Detail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FaceSetId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FaceSetId);
      }
      if (FaceImg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(FaceImg);
      }
      detail_.WriteTo(output, _map_detail_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FaceSetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceSetId);
      }
      if (FaceImg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FaceImg);
      }
      size += detail_.CalculateSize(_map_detail_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddFaceRequest other) {
      if (other == null) {
        return;
      }
      if (other.FaceSetId.Length != 0) {
        FaceSetId = other.FaceSetId;
      }
      if (other.FaceImg.Length != 0) {
        FaceImg = other.FaceImg;
      }
      detail_.Add(other.detail_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FaceSetId = input.ReadString();
            break;
          }
          case 18: {
            FaceImg = input.ReadBytes();
            break;
          }
          case 26: {
            detail_.AddEntriesFrom(input, _map_detail_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddFaceResponse : pb::IMessage<AddFaceResponse> {
    private static readonly pb::MessageParser<AddFaceResponse> _parser = new pb::MessageParser<AddFaceResponse>(() => new AddFaceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddFaceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddFaceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddFaceResponse(AddFaceResponse other) : this() {
      faceToken_ = other.faceToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddFaceResponse Clone() {
      return new AddFaceResponse(this);
    }

    /// <summary>Field number for the "face_token" field.</summary>
    public const int FaceTokenFieldNumber = 1;
    private string faceToken_ = "";
    /// <summary>
    /// 识别结果唯一值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaceToken {
      get { return faceToken_; }
      set {
        faceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddFaceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddFaceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FaceToken != other.FaceToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FaceToken.Length != 0) hash ^= FaceToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FaceToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FaceToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FaceToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddFaceResponse other) {
      if (other == null) {
        return;
      }
      if (other.FaceToken.Length != 0) {
        FaceToken = other.FaceToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FaceToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveFaceRequest : pb::IMessage<RemoveFaceRequest> {
    private static readonly pb::MessageParser<RemoveFaceRequest> _parser = new pb::MessageParser<RemoveFaceRequest>(() => new RemoveFaceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveFaceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFaceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFaceRequest(RemoveFaceRequest other) : this() {
      faceSetId_ = other.faceSetId_;
      faceToken_ = other.faceToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFaceRequest Clone() {
      return new RemoveFaceRequest(this);
    }

    /// <summary>Field number for the "face_set_id" field.</summary>
    public const int FaceSetIdFieldNumber = 1;
    private string faceSetId_ = "";
    /// <summary>
    /// FaceSet.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaceSetId {
      get { return faceSetId_; }
      set {
        faceSetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "face_token" field.</summary>
    public const int FaceTokenFieldNumber = 2;
    private string faceToken_ = "";
    /// <summary>
    /// FaceDetail.token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaceToken {
      get { return faceToken_; }
      set {
        faceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveFaceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveFaceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FaceSetId != other.FaceSetId) return false;
      if (FaceToken != other.FaceToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FaceSetId.Length != 0) hash ^= FaceSetId.GetHashCode();
      if (FaceToken.Length != 0) hash ^= FaceToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FaceSetId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FaceSetId);
      }
      if (FaceToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FaceToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FaceSetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceSetId);
      }
      if (FaceToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveFaceRequest other) {
      if (other == null) {
        return;
      }
      if (other.FaceSetId.Length != 0) {
        FaceSetId = other.FaceSetId;
      }
      if (other.FaceToken.Length != 0) {
        FaceToken = other.FaceToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FaceSetId = input.ReadString();
            break;
          }
          case 18: {
            FaceToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveFaceResponse : pb::IMessage<RemoveFaceResponse> {
    private static readonly pb::MessageParser<RemoveFaceResponse> _parser = new pb::MessageParser<RemoveFaceResponse>(() => new RemoveFaceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveFaceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFaceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFaceResponse(RemoveFaceResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFaceResponse Clone() {
      return new RemoveFaceResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveFaceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveFaceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveFaceResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class FaceDetailRequest : pb::IMessage<FaceDetailRequest> {
    private static readonly pb::MessageParser<FaceDetailRequest> _parser = new pb::MessageParser<FaceDetailRequest>(() => new FaceDetailRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaceDetailRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceDetailRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceDetailRequest(FaceDetailRequest other) : this() {
      faceSetId_ = other.faceSetId_;
      faceToken_ = other.faceToken_;
      withFaceImg_ = other.withFaceImg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceDetailRequest Clone() {
      return new FaceDetailRequest(this);
    }

    /// <summary>Field number for the "face_set_id" field.</summary>
    public const int FaceSetIdFieldNumber = 1;
    private string faceSetId_ = "";
    /// <summary>
    /// FaceSet.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaceSetId {
      get { return faceSetId_; }
      set {
        faceSetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "face_token" field.</summary>
    public const int FaceTokenFieldNumber = 2;
    private string faceToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaceToken {
      get { return faceToken_; }
      set {
        faceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "with_face_img" field.</summary>
    public const int WithFaceImgFieldNumber = 3;
    private bool withFaceImg_;
    /// <summary>
    /// 是否返回face_img
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithFaceImg {
      get { return withFaceImg_; }
      set {
        withFaceImg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaceDetailRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaceDetailRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FaceSetId != other.FaceSetId) return false;
      if (FaceToken != other.FaceToken) return false;
      if (WithFaceImg != other.WithFaceImg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FaceSetId.Length != 0) hash ^= FaceSetId.GetHashCode();
      if (FaceToken.Length != 0) hash ^= FaceToken.GetHashCode();
      if (WithFaceImg != false) hash ^= WithFaceImg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FaceSetId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FaceSetId);
      }
      if (FaceToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FaceToken);
      }
      if (WithFaceImg != false) {
        output.WriteRawTag(24);
        output.WriteBool(WithFaceImg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FaceSetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceSetId);
      }
      if (FaceToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceToken);
      }
      if (WithFaceImg != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaceDetailRequest other) {
      if (other == null) {
        return;
      }
      if (other.FaceSetId.Length != 0) {
        FaceSetId = other.FaceSetId;
      }
      if (other.FaceToken.Length != 0) {
        FaceToken = other.FaceToken;
      }
      if (other.WithFaceImg != false) {
        WithFaceImg = other.WithFaceImg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FaceSetId = input.ReadString();
            break;
          }
          case 18: {
            FaceToken = input.ReadString();
            break;
          }
          case 24: {
            WithFaceImg = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FaceDetailResponse : pb::IMessage<FaceDetailResponse> {
    private static readonly pb::MessageParser<FaceDetailResponse> _parser = new pb::MessageParser<FaceDetailResponse>(() => new FaceDetailResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaceDetailResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceDetailResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceDetailResponse(FaceDetailResponse other) : this() {
      faceDetail_ = other.faceDetail_ != null ? other.faceDetail_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceDetailResponse Clone() {
      return new FaceDetailResponse(this);
    }

    /// <summary>Field number for the "face_detail" field.</summary>
    public const int FaceDetailFieldNumber = 1;
    private global::FaceRecognition.FaceDetail faceDetail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FaceRecognition.FaceDetail FaceDetail {
      get { return faceDetail_; }
      set {
        faceDetail_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaceDetailResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaceDetailResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FaceDetail, other.FaceDetail)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (faceDetail_ != null) hash ^= FaceDetail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (faceDetail_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FaceDetail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (faceDetail_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FaceDetail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaceDetailResponse other) {
      if (other == null) {
        return;
      }
      if (other.faceDetail_ != null) {
        if (faceDetail_ == null) {
          FaceDetail = new global::FaceRecognition.FaceDetail();
        }
        FaceDetail.MergeFrom(other.FaceDetail);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (faceDetail_ == null) {
              FaceDetail = new global::FaceRecognition.FaceDetail();
            }
            input.ReadMessage(FaceDetail);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListFaceDetailsRequest : pb::IMessage<ListFaceDetailsRequest> {
    private static readonly pb::MessageParser<ListFaceDetailsRequest> _parser = new pb::MessageParser<ListFaceDetailsRequest>(() => new ListFaceDetailsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFaceDetailsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFaceDetailsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFaceDetailsRequest(ListFaceDetailsRequest other) : this() {
      faceSetId_ = other.faceSetId_;
      limit_ = other.limit_;
      offset_ = other.offset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFaceDetailsRequest Clone() {
      return new ListFaceDetailsRequest(this);
    }

    /// <summary>Field number for the "face_set_id" field.</summary>
    public const int FaceSetIdFieldNumber = 1;
    private string faceSetId_ = "";
    /// <summary>
    /// FaceSet.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaceSetId {
      get { return faceSetId_; }
      set {
        faceSetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private uint limit_;
    /// <summary>
    /// 结果总数限制
    /// 默认:10
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 3;
    private uint offset_;
    /// <summary>
    /// 结果匹配offset
    /// 默认:0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFaceDetailsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFaceDetailsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FaceSetId != other.FaceSetId) return false;
      if (Limit != other.Limit) return false;
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FaceSetId.Length != 0) hash ^= FaceSetId.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FaceSetId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FaceSetId);
      }
      if (Limit != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Limit);
      }
      if (Offset != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FaceSetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceSetId);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Limit);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFaceDetailsRequest other) {
      if (other == null) {
        return;
      }
      if (other.FaceSetId.Length != 0) {
        FaceSetId = other.FaceSetId;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FaceSetId = input.ReadString();
            break;
          }
          case 16: {
            Limit = input.ReadUInt32();
            break;
          }
          case 24: {
            Offset = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListFaceDetailsResponse : pb::IMessage<ListFaceDetailsResponse> {
    private static readonly pb::MessageParser<ListFaceDetailsResponse> _parser = new pb::MessageParser<ListFaceDetailsResponse>(() => new ListFaceDetailsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFaceDetailsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacesetReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFaceDetailsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFaceDetailsResponse(ListFaceDetailsResponse other) : this() {
      faceSet_ = other.faceSet_ != null ? other.faceSet_.Clone() : null;
      faceDetails_ = other.faceDetails_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFaceDetailsResponse Clone() {
      return new ListFaceDetailsResponse(this);
    }

    /// <summary>Field number for the "face_set" field.</summary>
    public const int FaceSetFieldNumber = 1;
    private global::FaceRecognition.FaceSet faceSet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FaceRecognition.FaceSet FaceSet {
      get { return faceSet_; }
      set {
        faceSet_ = value;
      }
    }

    /// <summary>Field number for the "face_details" field.</summary>
    public const int FaceDetailsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::FaceRecognition.FaceDetail> _repeated_faceDetails_codec
        = pb::FieldCodec.ForMessage(18, global::FaceRecognition.FaceDetail.Parser);
    private readonly pbc::RepeatedField<global::FaceRecognition.FaceDetail> faceDetails_ = new pbc::RepeatedField<global::FaceRecognition.FaceDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FaceRecognition.FaceDetail> FaceDetails {
      get { return faceDetails_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 3;
    private uint total_;
    /// <summary>
    /// FaceSet中Face总数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFaceDetailsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFaceDetailsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FaceSet, other.FaceSet)) return false;
      if(!faceDetails_.Equals(other.faceDetails_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (faceSet_ != null) hash ^= FaceSet.GetHashCode();
      hash ^= faceDetails_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (faceSet_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FaceSet);
      }
      faceDetails_.WriteTo(output, _repeated_faceDetails_codec);
      if (Total != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (faceSet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FaceSet);
      }
      size += faceDetails_.CalculateSize(_repeated_faceDetails_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFaceDetailsResponse other) {
      if (other == null) {
        return;
      }
      if (other.faceSet_ != null) {
        if (faceSet_ == null) {
          FaceSet = new global::FaceRecognition.FaceSet();
        }
        FaceSet.MergeFrom(other.FaceSet);
      }
      faceDetails_.Add(other.faceDetails_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (faceSet_ == null) {
              FaceSet = new global::FaceRecognition.FaceSet();
            }
            input.ReadMessage(FaceSet);
            break;
          }
          case 18: {
            faceDetails_.AddEntriesFrom(input, _repeated_faceDetails_codec);
            break;
          }
          case 24: {
            Total = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
