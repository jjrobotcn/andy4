// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: facedetect.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace FaceRecognition {

  /// <summary>Holder for reflection information generated from facedetect.proto</summary>
  public static partial class FacedetectReflection {

    #region Descriptor
    /// <summary>File descriptor for facedetect.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FacedetectReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBmYWNlZGV0ZWN0LnByb3RvEg9mYWNlUmVjb2duaXRpb24aHGdvb2dsZS9h",
            "cGkvYW5ub3RhdGlvbnMucHJvdG8iJAoMRmFjZVBvc2l0aW9uEgkKAXgYASAB",
            "KA0SCQoBeRgCIAEoDSJ9ChBGcm9tSW1hZ2VSZXF1ZXN0Eg0KBWltYWdlGAEg",
            "ASgMEhMKC3dpdGhfZ2VuZGVyGAIgASgIEhAKCHdpdGhfYWdlGAMgASgIEhUK",
            "DXdpdGhfcG9zaXRpb24YBCABKAgSHAoUd2l0aF9mYWNlX2Nyb3Bfd2lkdGgY",
            "BSABKAgiqwEKEUZyb21JbWFnZVJlc3BvbnNlEhIKCmZhY2VfY3JvcHMYASAD",
            "KAwSKAoHZ2VuZGVycxgCIAMoDjIXLmZhY2VSZWNvZ25pdGlvbi5HZW5kZXIS",
            "DAoEYWdlcxgDIAMoBRIwCglwb3NpdGlvbnMYBCADKAsyHS5mYWNlUmVjb2du",
            "aXRpb24uRmFjZVBvc2l0aW9uEhgKEGZhY2VfY3JvcF93aWR0aHMYBSADKA0i",
            "jwEKE09uRmFjZURldGVjdFJlcXVlc3QSHAoUaW50ZXJ2YWxfbWlsbGlzZWNv",
            "bmQYASABKA0SEwoLd2l0aF9nZW5kZXIYAiABKAgSEAoId2l0aF9hZ2UYAyAB",
            "KAgSFQoNd2l0aF9wb3NpdGlvbhgEIAEoCBIcChR3aXRoX2ZhY2VfY3JvcF93",
            "aWR0aBgFIAEoCCKuAQoUT25GYWNlRGV0ZWN0UmVzcG9uc2USEgoKZmFjZV9j",
            "cm9wcxgBIAMoDBIoCgdnZW5kZXJzGAIgAygOMhcuZmFjZVJlY29nbml0aW9u",
            "LkdlbmRlchIMCgRhZ2VzGAMgAygFEjAKCXBvc2l0aW9ucxgEIAMoCzIdLmZh",
            "Y2VSZWNvZ25pdGlvbi5GYWNlUG9zaXRpb24SGAoQZmFjZV9jcm9wX3dpZHRo",
            "cxgFIAMoDSLbAQoaT25GYWNlU2V0RmFjZURldGVjdFJlcXVlc3QSEwoLZmFj",
            "ZV9zZXRfaWQYASABKAkSFgoOd2l0aF9mYWNlX2Nyb3AYAiABKAgSEwoLd2l0",
            "aF9nZW5kZXIYAyABKAgSEAoId2l0aF9hZ2UYBCABKAgSFQoNd2l0aF9wb3Np",
            "dGlvbhgFIAEoCBIcChRpbnRlcnZhbF9taWxsaXNlY29uZBgGIAEoDRIWCg5j",
            "b25maWRlbmNlX21pbhgHIAEoAhIcChR3aXRoX2ZhY2VfY3JvcF93aWR0aBgI",
            "IAEoCCLfAQobT25GYWNlU2V0RmFjZURldGVjdFJlc3BvbnNlEhMKC2NvbmZp",
            "ZGVuY2VzGAEgAygCEhMKC2ZhY2VfdG9rZW5zGAIgAygJEhIKCmZhY2VfY3Jv",
            "cHMYAyADKAwSKAoHZ2VuZGVycxgEIAMoDjIXLmZhY2VSZWNvZ25pdGlvbi5H",
            "ZW5kZXISDAoEYWdlcxgFIAMoBRIwCglwb3NpdGlvbnMYBiADKAsyHS5mYWNl",
            "UmVjb2duaXRpb24uRmFjZVBvc2l0aW9uEhgKEGZhY2VfY3JvcF93aWR0aHMY",
            "ByADKA0qQAoGR2VuZGVyEhIKDkdFTkRFUl9VTktOT1dOEAASDwoLR0VOREVS",
            "X01BTEUQARIRCg1HRU5ERVJfRkVNQUxFEAIywQMKCkZhY2VEZXRlY3QSfQoJ",
            "RnJvbUltYWdlEiEuZmFjZVJlY29nbml0aW9uLkZyb21JbWFnZVJlcXVlc3Qa",
            "Ii5mYWNlUmVjb2duaXRpb24uRnJvbUltYWdlUmVzcG9uc2UiKYLT5JMCIyIe",
            "L2FwaS92Mi9mYWNlL2RldGVjdC9mcm9tX2ltYWdlOgEqEokBCgxPbkZhY2VE",
            "ZXRlY3QSJC5mYWNlUmVjb2duaXRpb24uT25GYWNlRGV0ZWN0UmVxdWVzdBol",
            "LmZhY2VSZWNvZ25pdGlvbi5PbkZhY2VEZXRlY3RSZXNwb25zZSIqgtPkkwIk",
            "EiIvYXBpL3YyL2ZhY2UvZGV0ZWN0L29uX2ZhY2VfZGV0ZWN0MAESpwEKE09u",
            "RmFjZVNldEZhY2VEZXRlY3QSKy5mYWNlUmVjb2duaXRpb24uT25GYWNlU2V0",
            "RmFjZURldGVjdFJlcXVlc3QaLC5mYWNlUmVjb2duaXRpb24uT25GYWNlU2V0",
            "RmFjZURldGVjdFJlc3BvbnNlIjOC0+STAi0SKy9hcGkvdjIvZmFjZS9kZXRl",
            "Y3Qvb25fZmFjZV9zZXRfZmFjZV9kZXRlY3QwAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::FaceRecognition.Gender), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.FacePosition), global::FaceRecognition.FacePosition.Parser, new[]{ "X", "Y" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.FromImageRequest), global::FaceRecognition.FromImageRequest.Parser, new[]{ "Image", "WithGender", "WithAge", "WithPosition", "WithFaceCropWidth" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.FromImageResponse), global::FaceRecognition.FromImageResponse.Parser, new[]{ "FaceCrops", "Genders", "Ages", "Positions", "FaceCropWidths" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.OnFaceDetectRequest), global::FaceRecognition.OnFaceDetectRequest.Parser, new[]{ "IntervalMillisecond", "WithGender", "WithAge", "WithPosition", "WithFaceCropWidth" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.OnFaceDetectResponse), global::FaceRecognition.OnFaceDetectResponse.Parser, new[]{ "FaceCrops", "Genders", "Ages", "Positions", "FaceCropWidths" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.OnFaceSetFaceDetectRequest), global::FaceRecognition.OnFaceSetFaceDetectRequest.Parser, new[]{ "FaceSetId", "WithFaceCrop", "WithGender", "WithAge", "WithPosition", "IntervalMillisecond", "ConfidenceMin", "WithFaceCropWidth" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.OnFaceSetFaceDetectResponse), global::FaceRecognition.OnFaceSetFaceDetectResponse.Parser, new[]{ "Confidences", "FaceTokens", "FaceCrops", "Genders", "Ages", "Positions", "FaceCropWidths" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Gender {
    [pbr::OriginalName("GENDER_UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("GENDER_MALE")] Male = 1,
    [pbr::OriginalName("GENDER_FEMALE")] Female = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  ///
  ///人脸中心位置坐标
  ///坐标由左上角至右下角
  ///(0,0)   --- (100,0) x
  ///|
  ///|
  ///(0,100) --- (100,100)
  ///y
  /// </summary>
  public sealed partial class FacePosition : pb::IMessage<FacePosition> {
    private static readonly pb::MessageParser<FacePosition> _parser = new pb::MessageParser<FacePosition>(() => new FacePosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FacePosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacedetectReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FacePosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FacePosition(FacePosition other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FacePosition Clone() {
      return new FacePosition(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private uint x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private uint y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FacePosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FacePosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Y);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FacePosition other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadUInt32();
            break;
          }
          case 16: {
            Y = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FromImageRequest : pb::IMessage<FromImageRequest> {
    private static readonly pb::MessageParser<FromImageRequest> _parser = new pb::MessageParser<FromImageRequest>(() => new FromImageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FromImageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacedetectReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FromImageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FromImageRequest(FromImageRequest other) : this() {
      image_ = other.image_;
      withGender_ = other.withGender_;
      withAge_ = other.withAge_;
      withPosition_ = other.withPosition_;
      withFaceCropWidth_ = other.withFaceCropWidth_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FromImageRequest Clone() {
      return new FromImageRequest(this);
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 1;
    private pb::ByteString image_ = pb::ByteString.Empty;
    /// <summary>
    /// 检测图片内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "with_gender" field.</summary>
    public const int WithGenderFieldNumber = 2;
    private bool withGender_;
    /// <summary>
    /// 检测性别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithGender {
      get { return withGender_; }
      set {
        withGender_ = value;
      }
    }

    /// <summary>Field number for the "with_age" field.</summary>
    public const int WithAgeFieldNumber = 3;
    private bool withAge_;
    /// <summary>
    /// 检测年龄
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithAge {
      get { return withAge_; }
      set {
        withAge_ = value;
      }
    }

    /// <summary>Field number for the "with_position" field.</summary>
    public const int WithPositionFieldNumber = 4;
    private bool withPosition_;
    /// <summary>
    /// 检测人脸位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithPosition {
      get { return withPosition_; }
      set {
        withPosition_ = value;
      }
    }

    /// <summary>Field number for the "with_face_crop_width" field.</summary>
    public const int WithFaceCropWidthFieldNumber = 5;
    private bool withFaceCropWidth_;
    /// <summary>
    /// 返回人脸图片戳宽度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithFaceCropWidth {
      get { return withFaceCropWidth_; }
      set {
        withFaceCropWidth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FromImageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FromImageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Image != other.Image) return false;
      if (WithGender != other.WithGender) return false;
      if (WithAge != other.WithAge) return false;
      if (WithPosition != other.WithPosition) return false;
      if (WithFaceCropWidth != other.WithFaceCropWidth) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      if (WithGender != false) hash ^= WithGender.GetHashCode();
      if (WithAge != false) hash ^= WithAge.GetHashCode();
      if (WithPosition != false) hash ^= WithPosition.GetHashCode();
      if (WithFaceCropWidth != false) hash ^= WithFaceCropWidth.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Image.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Image);
      }
      if (WithGender != false) {
        output.WriteRawTag(16);
        output.WriteBool(WithGender);
      }
      if (WithAge != false) {
        output.WriteRawTag(24);
        output.WriteBool(WithAge);
      }
      if (WithPosition != false) {
        output.WriteRawTag(32);
        output.WriteBool(WithPosition);
      }
      if (WithFaceCropWidth != false) {
        output.WriteRawTag(40);
        output.WriteBool(WithFaceCropWidth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Image);
      }
      if (WithGender != false) {
        size += 1 + 1;
      }
      if (WithAge != false) {
        size += 1 + 1;
      }
      if (WithPosition != false) {
        size += 1 + 1;
      }
      if (WithFaceCropWidth != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FromImageRequest other) {
      if (other == null) {
        return;
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      if (other.WithGender != false) {
        WithGender = other.WithGender;
      }
      if (other.WithAge != false) {
        WithAge = other.WithAge;
      }
      if (other.WithPosition != false) {
        WithPosition = other.WithPosition;
      }
      if (other.WithFaceCropWidth != false) {
        WithFaceCropWidth = other.WithFaceCropWidth;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Image = input.ReadBytes();
            break;
          }
          case 16: {
            WithGender = input.ReadBool();
            break;
          }
          case 24: {
            WithAge = input.ReadBool();
            break;
          }
          case 32: {
            WithPosition = input.ReadBool();
            break;
          }
          case 40: {
            WithFaceCropWidth = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FromImageResponse : pb::IMessage<FromImageResponse> {
    private static readonly pb::MessageParser<FromImageResponse> _parser = new pb::MessageParser<FromImageResponse>(() => new FromImageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FromImageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacedetectReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FromImageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FromImageResponse(FromImageResponse other) : this() {
      faceCrops_ = other.faceCrops_.Clone();
      genders_ = other.genders_.Clone();
      ages_ = other.ages_.Clone();
      positions_ = other.positions_.Clone();
      faceCropWidths_ = other.faceCropWidths_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FromImageResponse Clone() {
      return new FromImageResponse(this);
    }

    /// <summary>Field number for the "face_crops" field.</summary>
    public const int FaceCropsFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_faceCrops_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> faceCrops_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// 检测人脸图片戳列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> FaceCrops {
      get { return faceCrops_; }
    }

    /// <summary>Field number for the "genders" field.</summary>
    public const int GendersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::FaceRecognition.Gender> _repeated_genders_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::FaceRecognition.Gender) x);
    private readonly pbc::RepeatedField<global::FaceRecognition.Gender> genders_ = new pbc::RepeatedField<global::FaceRecognition.Gender>();
    /// <summary>
    /// 检测人脸性别列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FaceRecognition.Gender> Genders {
      get { return genders_; }
    }

    /// <summary>Field number for the "ages" field.</summary>
    public const int AgesFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_ages_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> ages_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 检测人脸年龄列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Ages {
      get { return ages_; }
    }

    /// <summary>Field number for the "positions" field.</summary>
    public const int PositionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FaceRecognition.FacePosition> _repeated_positions_codec
        = pb::FieldCodec.ForMessage(34, global::FaceRecognition.FacePosition.Parser);
    private readonly pbc::RepeatedField<global::FaceRecognition.FacePosition> positions_ = new pbc::RepeatedField<global::FaceRecognition.FacePosition>();
    /// <summary>
    /// 检测人脸坐标列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FaceRecognition.FacePosition> Positions {
      get { return positions_; }
    }

    /// <summary>Field number for the "face_crop_widths" field.</summary>
    public const int FaceCropWidthsFieldNumber = 5;
    private static readonly pb::FieldCodec<uint> _repeated_faceCropWidths_codec
        = pb::FieldCodec.ForUInt32(42);
    private readonly pbc::RepeatedField<uint> faceCropWidths_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 人脸图片戳宽度列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> FaceCropWidths {
      get { return faceCropWidths_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FromImageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FromImageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!faceCrops_.Equals(other.faceCrops_)) return false;
      if(!genders_.Equals(other.genders_)) return false;
      if(!ages_.Equals(other.ages_)) return false;
      if(!positions_.Equals(other.positions_)) return false;
      if(!faceCropWidths_.Equals(other.faceCropWidths_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= faceCrops_.GetHashCode();
      hash ^= genders_.GetHashCode();
      hash ^= ages_.GetHashCode();
      hash ^= positions_.GetHashCode();
      hash ^= faceCropWidths_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      faceCrops_.WriteTo(output, _repeated_faceCrops_codec);
      genders_.WriteTo(output, _repeated_genders_codec);
      ages_.WriteTo(output, _repeated_ages_codec);
      positions_.WriteTo(output, _repeated_positions_codec);
      faceCropWidths_.WriteTo(output, _repeated_faceCropWidths_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += faceCrops_.CalculateSize(_repeated_faceCrops_codec);
      size += genders_.CalculateSize(_repeated_genders_codec);
      size += ages_.CalculateSize(_repeated_ages_codec);
      size += positions_.CalculateSize(_repeated_positions_codec);
      size += faceCropWidths_.CalculateSize(_repeated_faceCropWidths_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FromImageResponse other) {
      if (other == null) {
        return;
      }
      faceCrops_.Add(other.faceCrops_);
      genders_.Add(other.genders_);
      ages_.Add(other.ages_);
      positions_.Add(other.positions_);
      faceCropWidths_.Add(other.faceCropWidths_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            faceCrops_.AddEntriesFrom(input, _repeated_faceCrops_codec);
            break;
          }
          case 18:
          case 16: {
            genders_.AddEntriesFrom(input, _repeated_genders_codec);
            break;
          }
          case 26:
          case 24: {
            ages_.AddEntriesFrom(input, _repeated_ages_codec);
            break;
          }
          case 34: {
            positions_.AddEntriesFrom(input, _repeated_positions_codec);
            break;
          }
          case 42:
          case 40: {
            faceCropWidths_.AddEntriesFrom(input, _repeated_faceCropWidths_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OnFaceDetectRequest : pb::IMessage<OnFaceDetectRequest> {
    private static readonly pb::MessageParser<OnFaceDetectRequest> _parser = new pb::MessageParser<OnFaceDetectRequest>(() => new OnFaceDetectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnFaceDetectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacedetectReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnFaceDetectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnFaceDetectRequest(OnFaceDetectRequest other) : this() {
      intervalMillisecond_ = other.intervalMillisecond_;
      withGender_ = other.withGender_;
      withAge_ = other.withAge_;
      withPosition_ = other.withPosition_;
      withFaceCropWidth_ = other.withFaceCropWidth_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnFaceDetectRequest Clone() {
      return new OnFaceDetectRequest(this);
    }

    /// <summary>Field number for the "interval_millisecond" field.</summary>
    public const int IntervalMillisecondFieldNumber = 1;
    private uint intervalMillisecond_;
    /// <summary>
    /// 检测间隔时间(毫秒)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint IntervalMillisecond {
      get { return intervalMillisecond_; }
      set {
        intervalMillisecond_ = value;
      }
    }

    /// <summary>Field number for the "with_gender" field.</summary>
    public const int WithGenderFieldNumber = 2;
    private bool withGender_;
    /// <summary>
    /// 检测性别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithGender {
      get { return withGender_; }
      set {
        withGender_ = value;
      }
    }

    /// <summary>Field number for the "with_age" field.</summary>
    public const int WithAgeFieldNumber = 3;
    private bool withAge_;
    /// <summary>
    /// 检测年龄
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithAge {
      get { return withAge_; }
      set {
        withAge_ = value;
      }
    }

    /// <summary>Field number for the "with_position" field.</summary>
    public const int WithPositionFieldNumber = 4;
    private bool withPosition_;
    /// <summary>
    /// 检测人脸位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithPosition {
      get { return withPosition_; }
      set {
        withPosition_ = value;
      }
    }

    /// <summary>Field number for the "with_face_crop_width" field.</summary>
    public const int WithFaceCropWidthFieldNumber = 5;
    private bool withFaceCropWidth_;
    /// <summary>
    /// 返回人脸图片戳宽度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithFaceCropWidth {
      get { return withFaceCropWidth_; }
      set {
        withFaceCropWidth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnFaceDetectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnFaceDetectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IntervalMillisecond != other.IntervalMillisecond) return false;
      if (WithGender != other.WithGender) return false;
      if (WithAge != other.WithAge) return false;
      if (WithPosition != other.WithPosition) return false;
      if (WithFaceCropWidth != other.WithFaceCropWidth) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IntervalMillisecond != 0) hash ^= IntervalMillisecond.GetHashCode();
      if (WithGender != false) hash ^= WithGender.GetHashCode();
      if (WithAge != false) hash ^= WithAge.GetHashCode();
      if (WithPosition != false) hash ^= WithPosition.GetHashCode();
      if (WithFaceCropWidth != false) hash ^= WithFaceCropWidth.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IntervalMillisecond != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(IntervalMillisecond);
      }
      if (WithGender != false) {
        output.WriteRawTag(16);
        output.WriteBool(WithGender);
      }
      if (WithAge != false) {
        output.WriteRawTag(24);
        output.WriteBool(WithAge);
      }
      if (WithPosition != false) {
        output.WriteRawTag(32);
        output.WriteBool(WithPosition);
      }
      if (WithFaceCropWidth != false) {
        output.WriteRawTag(40);
        output.WriteBool(WithFaceCropWidth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IntervalMillisecond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IntervalMillisecond);
      }
      if (WithGender != false) {
        size += 1 + 1;
      }
      if (WithAge != false) {
        size += 1 + 1;
      }
      if (WithPosition != false) {
        size += 1 + 1;
      }
      if (WithFaceCropWidth != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnFaceDetectRequest other) {
      if (other == null) {
        return;
      }
      if (other.IntervalMillisecond != 0) {
        IntervalMillisecond = other.IntervalMillisecond;
      }
      if (other.WithGender != false) {
        WithGender = other.WithGender;
      }
      if (other.WithAge != false) {
        WithAge = other.WithAge;
      }
      if (other.WithPosition != false) {
        WithPosition = other.WithPosition;
      }
      if (other.WithFaceCropWidth != false) {
        WithFaceCropWidth = other.WithFaceCropWidth;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IntervalMillisecond = input.ReadUInt32();
            break;
          }
          case 16: {
            WithGender = input.ReadBool();
            break;
          }
          case 24: {
            WithAge = input.ReadBool();
            break;
          }
          case 32: {
            WithPosition = input.ReadBool();
            break;
          }
          case 40: {
            WithFaceCropWidth = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OnFaceDetectResponse : pb::IMessage<OnFaceDetectResponse> {
    private static readonly pb::MessageParser<OnFaceDetectResponse> _parser = new pb::MessageParser<OnFaceDetectResponse>(() => new OnFaceDetectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnFaceDetectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacedetectReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnFaceDetectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnFaceDetectResponse(OnFaceDetectResponse other) : this() {
      faceCrops_ = other.faceCrops_.Clone();
      genders_ = other.genders_.Clone();
      ages_ = other.ages_.Clone();
      positions_ = other.positions_.Clone();
      faceCropWidths_ = other.faceCropWidths_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnFaceDetectResponse Clone() {
      return new OnFaceDetectResponse(this);
    }

    /// <summary>Field number for the "face_crops" field.</summary>
    public const int FaceCropsFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_faceCrops_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> faceCrops_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// 检测人脸图片戳列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> FaceCrops {
      get { return faceCrops_; }
    }

    /// <summary>Field number for the "genders" field.</summary>
    public const int GendersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::FaceRecognition.Gender> _repeated_genders_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::FaceRecognition.Gender) x);
    private readonly pbc::RepeatedField<global::FaceRecognition.Gender> genders_ = new pbc::RepeatedField<global::FaceRecognition.Gender>();
    /// <summary>
    /// 检测人脸性别列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FaceRecognition.Gender> Genders {
      get { return genders_; }
    }

    /// <summary>Field number for the "ages" field.</summary>
    public const int AgesFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_ages_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> ages_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 检测人脸年龄列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Ages {
      get { return ages_; }
    }

    /// <summary>Field number for the "positions" field.</summary>
    public const int PositionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FaceRecognition.FacePosition> _repeated_positions_codec
        = pb::FieldCodec.ForMessage(34, global::FaceRecognition.FacePosition.Parser);
    private readonly pbc::RepeatedField<global::FaceRecognition.FacePosition> positions_ = new pbc::RepeatedField<global::FaceRecognition.FacePosition>();
    /// <summary>
    /// 检测人脸坐标列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FaceRecognition.FacePosition> Positions {
      get { return positions_; }
    }

    /// <summary>Field number for the "face_crop_widths" field.</summary>
    public const int FaceCropWidthsFieldNumber = 5;
    private static readonly pb::FieldCodec<uint> _repeated_faceCropWidths_codec
        = pb::FieldCodec.ForUInt32(42);
    private readonly pbc::RepeatedField<uint> faceCropWidths_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 人脸图片戳宽度列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> FaceCropWidths {
      get { return faceCropWidths_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnFaceDetectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnFaceDetectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!faceCrops_.Equals(other.faceCrops_)) return false;
      if(!genders_.Equals(other.genders_)) return false;
      if(!ages_.Equals(other.ages_)) return false;
      if(!positions_.Equals(other.positions_)) return false;
      if(!faceCropWidths_.Equals(other.faceCropWidths_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= faceCrops_.GetHashCode();
      hash ^= genders_.GetHashCode();
      hash ^= ages_.GetHashCode();
      hash ^= positions_.GetHashCode();
      hash ^= faceCropWidths_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      faceCrops_.WriteTo(output, _repeated_faceCrops_codec);
      genders_.WriteTo(output, _repeated_genders_codec);
      ages_.WriteTo(output, _repeated_ages_codec);
      positions_.WriteTo(output, _repeated_positions_codec);
      faceCropWidths_.WriteTo(output, _repeated_faceCropWidths_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += faceCrops_.CalculateSize(_repeated_faceCrops_codec);
      size += genders_.CalculateSize(_repeated_genders_codec);
      size += ages_.CalculateSize(_repeated_ages_codec);
      size += positions_.CalculateSize(_repeated_positions_codec);
      size += faceCropWidths_.CalculateSize(_repeated_faceCropWidths_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnFaceDetectResponse other) {
      if (other == null) {
        return;
      }
      faceCrops_.Add(other.faceCrops_);
      genders_.Add(other.genders_);
      ages_.Add(other.ages_);
      positions_.Add(other.positions_);
      faceCropWidths_.Add(other.faceCropWidths_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            faceCrops_.AddEntriesFrom(input, _repeated_faceCrops_codec);
            break;
          }
          case 18:
          case 16: {
            genders_.AddEntriesFrom(input, _repeated_genders_codec);
            break;
          }
          case 26:
          case 24: {
            ages_.AddEntriesFrom(input, _repeated_ages_codec);
            break;
          }
          case 34: {
            positions_.AddEntriesFrom(input, _repeated_positions_codec);
            break;
          }
          case 42:
          case 40: {
            faceCropWidths_.AddEntriesFrom(input, _repeated_faceCropWidths_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OnFaceSetFaceDetectRequest : pb::IMessage<OnFaceSetFaceDetectRequest> {
    private static readonly pb::MessageParser<OnFaceSetFaceDetectRequest> _parser = new pb::MessageParser<OnFaceSetFaceDetectRequest>(() => new OnFaceSetFaceDetectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnFaceSetFaceDetectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacedetectReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnFaceSetFaceDetectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnFaceSetFaceDetectRequest(OnFaceSetFaceDetectRequest other) : this() {
      faceSetId_ = other.faceSetId_;
      withFaceCrop_ = other.withFaceCrop_;
      withGender_ = other.withGender_;
      withAge_ = other.withAge_;
      withPosition_ = other.withPosition_;
      intervalMillisecond_ = other.intervalMillisecond_;
      confidenceMin_ = other.confidenceMin_;
      withFaceCropWidth_ = other.withFaceCropWidth_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnFaceSetFaceDetectRequest Clone() {
      return new OnFaceSetFaceDetectRequest(this);
    }

    /// <summary>Field number for the "face_set_id" field.</summary>
    public const int FaceSetIdFieldNumber = 1;
    private string faceSetId_ = "";
    /// <summary>
    /// FaceSet.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaceSetId {
      get { return faceSetId_; }
      set {
        faceSetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "with_face_crop" field.</summary>
    public const int WithFaceCropFieldNumber = 2;
    private bool withFaceCrop_;
    /// <summary>
    /// 返回结果是否包含人脸图片戳
    /// false时Response中face数据将为空
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithFaceCrop {
      get { return withFaceCrop_; }
      set {
        withFaceCrop_ = value;
      }
    }

    /// <summary>Field number for the "with_gender" field.</summary>
    public const int WithGenderFieldNumber = 3;
    private bool withGender_;
    /// <summary>
    /// 检测性别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithGender {
      get { return withGender_; }
      set {
        withGender_ = value;
      }
    }

    /// <summary>Field number for the "with_age" field.</summary>
    public const int WithAgeFieldNumber = 4;
    private bool withAge_;
    /// <summary>
    /// 检测年龄
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithAge {
      get { return withAge_; }
      set {
        withAge_ = value;
      }
    }

    /// <summary>Field number for the "with_position" field.</summary>
    public const int WithPositionFieldNumber = 5;
    private bool withPosition_;
    /// <summary>
    /// 检测人脸位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithPosition {
      get { return withPosition_; }
      set {
        withPosition_ = value;
      }
    }

    /// <summary>Field number for the "interval_millisecond" field.</summary>
    public const int IntervalMillisecondFieldNumber = 6;
    private uint intervalMillisecond_;
    /// <summary>
    /// 检测间隔时间(毫秒)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint IntervalMillisecond {
      get { return intervalMillisecond_; }
      set {
        intervalMillisecond_ = value;
      }
    }

    /// <summary>Field number for the "confidence_min" field.</summary>
    public const int ConfidenceMinFieldNumber = 7;
    private float confidenceMin_;
    /// <summary>
    /// 最低信任值，小于该值的数据将无效并过滤 [0, 1]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ConfidenceMin {
      get { return confidenceMin_; }
      set {
        confidenceMin_ = value;
      }
    }

    /// <summary>Field number for the "with_face_crop_width" field.</summary>
    public const int WithFaceCropWidthFieldNumber = 8;
    private bool withFaceCropWidth_;
    /// <summary>
    /// 返回人脸图片戳宽度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithFaceCropWidth {
      get { return withFaceCropWidth_; }
      set {
        withFaceCropWidth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnFaceSetFaceDetectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnFaceSetFaceDetectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FaceSetId != other.FaceSetId) return false;
      if (WithFaceCrop != other.WithFaceCrop) return false;
      if (WithGender != other.WithGender) return false;
      if (WithAge != other.WithAge) return false;
      if (WithPosition != other.WithPosition) return false;
      if (IntervalMillisecond != other.IntervalMillisecond) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ConfidenceMin, other.ConfidenceMin)) return false;
      if (WithFaceCropWidth != other.WithFaceCropWidth) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FaceSetId.Length != 0) hash ^= FaceSetId.GetHashCode();
      if (WithFaceCrop != false) hash ^= WithFaceCrop.GetHashCode();
      if (WithGender != false) hash ^= WithGender.GetHashCode();
      if (WithAge != false) hash ^= WithAge.GetHashCode();
      if (WithPosition != false) hash ^= WithPosition.GetHashCode();
      if (IntervalMillisecond != 0) hash ^= IntervalMillisecond.GetHashCode();
      if (ConfidenceMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ConfidenceMin);
      if (WithFaceCropWidth != false) hash ^= WithFaceCropWidth.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FaceSetId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FaceSetId);
      }
      if (WithFaceCrop != false) {
        output.WriteRawTag(16);
        output.WriteBool(WithFaceCrop);
      }
      if (WithGender != false) {
        output.WriteRawTag(24);
        output.WriteBool(WithGender);
      }
      if (WithAge != false) {
        output.WriteRawTag(32);
        output.WriteBool(WithAge);
      }
      if (WithPosition != false) {
        output.WriteRawTag(40);
        output.WriteBool(WithPosition);
      }
      if (IntervalMillisecond != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(IntervalMillisecond);
      }
      if (ConfidenceMin != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(ConfidenceMin);
      }
      if (WithFaceCropWidth != false) {
        output.WriteRawTag(64);
        output.WriteBool(WithFaceCropWidth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FaceSetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceSetId);
      }
      if (WithFaceCrop != false) {
        size += 1 + 1;
      }
      if (WithGender != false) {
        size += 1 + 1;
      }
      if (WithAge != false) {
        size += 1 + 1;
      }
      if (WithPosition != false) {
        size += 1 + 1;
      }
      if (IntervalMillisecond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IntervalMillisecond);
      }
      if (ConfidenceMin != 0F) {
        size += 1 + 4;
      }
      if (WithFaceCropWidth != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnFaceSetFaceDetectRequest other) {
      if (other == null) {
        return;
      }
      if (other.FaceSetId.Length != 0) {
        FaceSetId = other.FaceSetId;
      }
      if (other.WithFaceCrop != false) {
        WithFaceCrop = other.WithFaceCrop;
      }
      if (other.WithGender != false) {
        WithGender = other.WithGender;
      }
      if (other.WithAge != false) {
        WithAge = other.WithAge;
      }
      if (other.WithPosition != false) {
        WithPosition = other.WithPosition;
      }
      if (other.IntervalMillisecond != 0) {
        IntervalMillisecond = other.IntervalMillisecond;
      }
      if (other.ConfidenceMin != 0F) {
        ConfidenceMin = other.ConfidenceMin;
      }
      if (other.WithFaceCropWidth != false) {
        WithFaceCropWidth = other.WithFaceCropWidth;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FaceSetId = input.ReadString();
            break;
          }
          case 16: {
            WithFaceCrop = input.ReadBool();
            break;
          }
          case 24: {
            WithGender = input.ReadBool();
            break;
          }
          case 32: {
            WithAge = input.ReadBool();
            break;
          }
          case 40: {
            WithPosition = input.ReadBool();
            break;
          }
          case 48: {
            IntervalMillisecond = input.ReadUInt32();
            break;
          }
          case 61: {
            ConfidenceMin = input.ReadFloat();
            break;
          }
          case 64: {
            WithFaceCropWidth = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OnFaceSetFaceDetectResponse : pb::IMessage<OnFaceSetFaceDetectResponse> {
    private static readonly pb::MessageParser<OnFaceSetFaceDetectResponse> _parser = new pb::MessageParser<OnFaceSetFaceDetectResponse>(() => new OnFaceSetFaceDetectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnFaceSetFaceDetectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FacedetectReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnFaceSetFaceDetectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnFaceSetFaceDetectResponse(OnFaceSetFaceDetectResponse other) : this() {
      confidences_ = other.confidences_.Clone();
      faceTokens_ = other.faceTokens_.Clone();
      faceCrops_ = other.faceCrops_.Clone();
      genders_ = other.genders_.Clone();
      ages_ = other.ages_.Clone();
      positions_ = other.positions_.Clone();
      faceCropWidths_ = other.faceCropWidths_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnFaceSetFaceDetectResponse Clone() {
      return new OnFaceSetFaceDetectResponse(this);
    }

    /// <summary>Field number for the "confidences" field.</summary>
    public const int ConfidencesFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_confidences_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> confidences_ = new pbc::RepeatedField<float>();
    /// <summary>
    /// 匹配结果信任值列表 [0, 1.0]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Confidences {
      get { return confidences_; }
    }

    /// <summary>Field number for the "face_tokens" field.</summary>
    public const int FaceTokensFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_faceTokens_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> faceTokens_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 检测人脸token列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FaceTokens {
      get { return faceTokens_; }
    }

    /// <summary>Field number for the "face_crops" field.</summary>
    public const int FaceCropsFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_faceCrops_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> faceCrops_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// 检测人脸图片戳列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> FaceCrops {
      get { return faceCrops_; }
    }

    /// <summary>Field number for the "genders" field.</summary>
    public const int GendersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FaceRecognition.Gender> _repeated_genders_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::FaceRecognition.Gender) x);
    private readonly pbc::RepeatedField<global::FaceRecognition.Gender> genders_ = new pbc::RepeatedField<global::FaceRecognition.Gender>();
    /// <summary>
    /// 检测人脸性别列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FaceRecognition.Gender> Genders {
      get { return genders_; }
    }

    /// <summary>Field number for the "ages" field.</summary>
    public const int AgesFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_ages_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> ages_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 检测人脸年龄列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Ages {
      get { return ages_; }
    }

    /// <summary>Field number for the "positions" field.</summary>
    public const int PositionsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::FaceRecognition.FacePosition> _repeated_positions_codec
        = pb::FieldCodec.ForMessage(50, global::FaceRecognition.FacePosition.Parser);
    private readonly pbc::RepeatedField<global::FaceRecognition.FacePosition> positions_ = new pbc::RepeatedField<global::FaceRecognition.FacePosition>();
    /// <summary>
    /// 检测人脸坐标列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FaceRecognition.FacePosition> Positions {
      get { return positions_; }
    }

    /// <summary>Field number for the "face_crop_widths" field.</summary>
    public const int FaceCropWidthsFieldNumber = 7;
    private static readonly pb::FieldCodec<uint> _repeated_faceCropWidths_codec
        = pb::FieldCodec.ForUInt32(58);
    private readonly pbc::RepeatedField<uint> faceCropWidths_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 人脸图片戳宽度列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> FaceCropWidths {
      get { return faceCropWidths_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnFaceSetFaceDetectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnFaceSetFaceDetectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!confidences_.Equals(other.confidences_)) return false;
      if(!faceTokens_.Equals(other.faceTokens_)) return false;
      if(!faceCrops_.Equals(other.faceCrops_)) return false;
      if(!genders_.Equals(other.genders_)) return false;
      if(!ages_.Equals(other.ages_)) return false;
      if(!positions_.Equals(other.positions_)) return false;
      if(!faceCropWidths_.Equals(other.faceCropWidths_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= confidences_.GetHashCode();
      hash ^= faceTokens_.GetHashCode();
      hash ^= faceCrops_.GetHashCode();
      hash ^= genders_.GetHashCode();
      hash ^= ages_.GetHashCode();
      hash ^= positions_.GetHashCode();
      hash ^= faceCropWidths_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      confidences_.WriteTo(output, _repeated_confidences_codec);
      faceTokens_.WriteTo(output, _repeated_faceTokens_codec);
      faceCrops_.WriteTo(output, _repeated_faceCrops_codec);
      genders_.WriteTo(output, _repeated_genders_codec);
      ages_.WriteTo(output, _repeated_ages_codec);
      positions_.WriteTo(output, _repeated_positions_codec);
      faceCropWidths_.WriteTo(output, _repeated_faceCropWidths_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += confidences_.CalculateSize(_repeated_confidences_codec);
      size += faceTokens_.CalculateSize(_repeated_faceTokens_codec);
      size += faceCrops_.CalculateSize(_repeated_faceCrops_codec);
      size += genders_.CalculateSize(_repeated_genders_codec);
      size += ages_.CalculateSize(_repeated_ages_codec);
      size += positions_.CalculateSize(_repeated_positions_codec);
      size += faceCropWidths_.CalculateSize(_repeated_faceCropWidths_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnFaceSetFaceDetectResponse other) {
      if (other == null) {
        return;
      }
      confidences_.Add(other.confidences_);
      faceTokens_.Add(other.faceTokens_);
      faceCrops_.Add(other.faceCrops_);
      genders_.Add(other.genders_);
      ages_.Add(other.ages_);
      positions_.Add(other.positions_);
      faceCropWidths_.Add(other.faceCropWidths_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            confidences_.AddEntriesFrom(input, _repeated_confidences_codec);
            break;
          }
          case 18: {
            faceTokens_.AddEntriesFrom(input, _repeated_faceTokens_codec);
            break;
          }
          case 26: {
            faceCrops_.AddEntriesFrom(input, _repeated_faceCrops_codec);
            break;
          }
          case 34:
          case 32: {
            genders_.AddEntriesFrom(input, _repeated_genders_codec);
            break;
          }
          case 42:
          case 40: {
            ages_.AddEntriesFrom(input, _repeated_ages_codec);
            break;
          }
          case 50: {
            positions_.AddEntriesFrom(input, _repeated_positions_codec);
            break;
          }
          case 58:
          case 56: {
            faceCropWidths_.AddEntriesFrom(input, _repeated_faceCropWidths_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
