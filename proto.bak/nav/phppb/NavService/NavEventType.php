<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nav.proto

namespace NavService;

use UnexpectedValueException;

/**
 * 导航事件
 *
 * Protobuf type <code>navService.NavEventType</code>
 */
class NavEventType
{
    /**
     * 事件零值(不使用)
     *
     * Generated from protobuf enum <code>NAV_EVENT_REVERSED = 0;</code>
     */
    const NAV_EVENT_REVERSED = 0;
    /**
     * 移动事件
     *
     * Generated from protobuf enum <code>MOVE_EVENT = 1;</code>
     */
    const MOVE_EVENT = 1;
    /**
     * 导航事件
     *
     * Generated from protobuf enum <code>NAV_EVENT = 2;</code>
     */
    const NAV_EVENT = 2;
    /**
     * 自动充电事件
     *
     * Generated from protobuf enum <code>AUTO_CHARGE_EVENT = 3;</code>
     */
    const AUTO_CHARGE_EVENT = 3;
    /**
     * 旋转状态事件
     *
     * Generated from protobuf enum <code>ROTATE_EVENT = 4;</code>
     */
    const ROTATE_EVENT = 4;

    private static $valueToName = [
        self::NAV_EVENT_REVERSED => 'NAV_EVENT_REVERSED',
        self::MOVE_EVENT => 'MOVE_EVENT',
        self::NAV_EVENT => 'NAV_EVENT',
        self::AUTO_CHARGE_EVENT => 'AUTO_CHARGE_EVENT',
        self::ROTATE_EVENT => 'ROTATE_EVENT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

