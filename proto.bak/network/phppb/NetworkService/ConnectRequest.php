<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: network.proto

namespace NetworkService;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * 连接至指定网络请求
 *
 * Generated from protobuf message <code>networkService.ConnectRequest</code>
 */
class ConnectRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * !!! >=v1.2.0可不再使用此NetworkInfo请求，此参数声明作废，请使用更为精简的ssid作为连接目标参数
     * 目标网络信息
     * 此对象应由ListNetworks.ListNetworksResponse.NetworkInfo中获取
     *
     * Generated from protobuf field <code>.networkService.NetworkInfo network_info = 1 [deprecated = true];</code>
     */
    private $network_info = null;
    /**
     * >=v1.2.0
     * 目标网络ssid
     * 自动获取当前的NetworkInfo信息中首个匹配ssid，
     * 若匹配失败将直接返回连接错误
     * 不支持隐藏ssid的链接
     *
     * Generated from protobuf field <code>string ssid = 3;</code>
     */
    private $ssid = '';
    /**
     * wifi密码
     *
     * Generated from protobuf field <code>string pwd = 2;</code>
     */
    private $pwd = '';
    /**
     * >=v1.2.0
     * 保持当前外部连接
     * 配置此参数后将立即启动状态监听。
     * 若出现DISCONNECTED状态且keep_alive_interval间隔时间内，
     * 状态持续为DISCONNECTED状态将自动发起ConnectRequest。
     * 在等待期间出现非DISCONNECTED的任意状态切换，
     * keep_alive_interval都将重新计算。
     *
     * Generated from protobuf field <code>bool keep_alive = 4;</code>
     */
    private $keep_alive = false;
    /**
     * >=v1.2.0
     * 保持当前连接判断间隔, 默认及最小为30s
     *
     * Generated from protobuf field <code>uint32 keep_alive_interval = 5;</code>
     */
    private $keep_alive_interval = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \NetworkService\NetworkInfo $network_info
     *           !!! >=v1.2.0可不再使用此NetworkInfo请求，此参数声明作废，请使用更为精简的ssid作为连接目标参数
     *           目标网络信息
     *           此对象应由ListNetworks.ListNetworksResponse.NetworkInfo中获取
     *     @type string $ssid
     *           >=v1.2.0
     *           目标网络ssid
     *           自动获取当前的NetworkInfo信息中首个匹配ssid，
     *           若匹配失败将直接返回连接错误
     *           不支持隐藏ssid的链接
     *     @type string $pwd
     *           wifi密码
     *     @type bool $keep_alive
     *           >=v1.2.0
     *           保持当前外部连接
     *           配置此参数后将立即启动状态监听。
     *           若出现DISCONNECTED状态且keep_alive_interval间隔时间内，
     *           状态持续为DISCONNECTED状态将自动发起ConnectRequest。
     *           在等待期间出现非DISCONNECTED的任意状态切换，
     *           keep_alive_interval都将重新计算。
     *     @type int $keep_alive_interval
     *           >=v1.2.0
     *           保持当前连接判断间隔, 默认及最小为30s
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Network::initOnce();
        parent::__construct($data);
    }

    /**
     * !!! >=v1.2.0可不再使用此NetworkInfo请求，此参数声明作废，请使用更为精简的ssid作为连接目标参数
     * 目标网络信息
     * 此对象应由ListNetworks.ListNetworksResponse.NetworkInfo中获取
     *
     * Generated from protobuf field <code>.networkService.NetworkInfo network_info = 1 [deprecated = true];</code>
     * @return \NetworkService\NetworkInfo
     */
    public function getNetworkInfo()
    {
        return $this->network_info;
    }

    /**
     * !!! >=v1.2.0可不再使用此NetworkInfo请求，此参数声明作废，请使用更为精简的ssid作为连接目标参数
     * 目标网络信息
     * 此对象应由ListNetworks.ListNetworksResponse.NetworkInfo中获取
     *
     * Generated from protobuf field <code>.networkService.NetworkInfo network_info = 1 [deprecated = true];</code>
     * @param \NetworkService\NetworkInfo $var
     * @return $this
     */
    public function setNetworkInfo($var)
    {
        GPBUtil::checkMessage($var, \NetworkService\NetworkInfo::class);
        $this->network_info = $var;

        return $this;
    }

    /**
     * >=v1.2.0
     * 目标网络ssid
     * 自动获取当前的NetworkInfo信息中首个匹配ssid，
     * 若匹配失败将直接返回连接错误
     * 不支持隐藏ssid的链接
     *
     * Generated from protobuf field <code>string ssid = 3;</code>
     * @return string
     */
    public function getSsid()
    {
        return $this->ssid;
    }

    /**
     * >=v1.2.0
     * 目标网络ssid
     * 自动获取当前的NetworkInfo信息中首个匹配ssid，
     * 若匹配失败将直接返回连接错误
     * 不支持隐藏ssid的链接
     *
     * Generated from protobuf field <code>string ssid = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setSsid($var)
    {
        GPBUtil::checkString($var, True);
        $this->ssid = $var;

        return $this;
    }

    /**
     * wifi密码
     *
     * Generated from protobuf field <code>string pwd = 2;</code>
     * @return string
     */
    public function getPwd()
    {
        return $this->pwd;
    }

    /**
     * wifi密码
     *
     * Generated from protobuf field <code>string pwd = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setPwd($var)
    {
        GPBUtil::checkString($var, True);
        $this->pwd = $var;

        return $this;
    }

    /**
     * >=v1.2.0
     * 保持当前外部连接
     * 配置此参数后将立即启动状态监听。
     * 若出现DISCONNECTED状态且keep_alive_interval间隔时间内，
     * 状态持续为DISCONNECTED状态将自动发起ConnectRequest。
     * 在等待期间出现非DISCONNECTED的任意状态切换，
     * keep_alive_interval都将重新计算。
     *
     * Generated from protobuf field <code>bool keep_alive = 4;</code>
     * @return bool
     */
    public function getKeepAlive()
    {
        return $this->keep_alive;
    }

    /**
     * >=v1.2.0
     * 保持当前外部连接
     * 配置此参数后将立即启动状态监听。
     * 若出现DISCONNECTED状态且keep_alive_interval间隔时间内，
     * 状态持续为DISCONNECTED状态将自动发起ConnectRequest。
     * 在等待期间出现非DISCONNECTED的任意状态切换，
     * keep_alive_interval都将重新计算。
     *
     * Generated from protobuf field <code>bool keep_alive = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setKeepAlive($var)
    {
        GPBUtil::checkBool($var);
        $this->keep_alive = $var;

        return $this;
    }

    /**
     * >=v1.2.0
     * 保持当前连接判断间隔, 默认及最小为30s
     *
     * Generated from protobuf field <code>uint32 keep_alive_interval = 5;</code>
     * @return int
     */
    public function getKeepAliveInterval()
    {
        return $this->keep_alive_interval;
    }

    /**
     * >=v1.2.0
     * 保持当前连接判断间隔, 默认及最小为30s
     *
     * Generated from protobuf field <code>uint32 keep_alive_interval = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setKeepAliveInterval($var)
    {
        GPBUtil::checkUint32($var);
        $this->keep_alive_interval = $var;

        return $this;
    }

}

