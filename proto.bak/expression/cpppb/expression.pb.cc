// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: expression.proto

#include "expression.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_expression_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExpressionInfo_expression_2eproto;
namespace expressionService {
class ExpressionInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExpressionInfo> _instance;
} _ExpressionInfo_default_instance_;
class PlayExpressionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlayExpressionsRequest> _instance;
} _PlayExpressionsRequest_default_instance_;
class PlayExpressionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlayExpressionsResponse> _instance;
} _PlayExpressionsResponse_default_instance_;
class StopExpressionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopExpressionRequest> _instance;
} _StopExpressionRequest_default_instance_;
class StopExpressionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopExpressionResponse> _instance;
} _StopExpressionResponse_default_instance_;
class UploadExpressionFileRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UploadExpressionFileRequest> _instance;
} _UploadExpressionFileRequest_default_instance_;
class UploadExpressionFileResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UploadExpressionFileResponse> _instance;
} _UploadExpressionFileResponse_default_instance_;
class ListExpressionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListExpressionsRequest> _instance;
} _ListExpressionsRequest_default_instance_;
class ListExpressionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListExpressionsResponse> _instance;
} _ListExpressionsResponse_default_instance_;
class DeleteExpressionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteExpressionsRequest> _instance;
} _DeleteExpressionsRequest_default_instance_;
class DeleteExpressionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteExpressionsResponse> _instance;
} _DeleteExpressionsResponse_default_instance_;
class RenameRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RenameRequest> _instance;
} _RenameRequest_default_instance_;
class RenameResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RenameResponse> _instance;
} _RenameResponse_default_instance_;
class StateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateRequest> _instance;
} _StateRequest_default_instance_;
class StateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateResponse> _instance;
} _StateResponse_default_instance_;
class SwitchRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SwitchRequest> _instance;
} _SwitchRequest_default_instance_;
class SwitchResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SwitchResponse> _instance;
} _SwitchResponse_default_instance_;
}  // namespace expressionService
static void InitDefaultsscc_info_DeleteExpressionsRequest_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_DeleteExpressionsRequest_default_instance_;
    new (ptr) ::expressionService::DeleteExpressionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::DeleteExpressionsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteExpressionsRequest_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_DeleteExpressionsRequest_expression_2eproto}, {}};

static void InitDefaultsscc_info_DeleteExpressionsResponse_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_DeleteExpressionsResponse_default_instance_;
    new (ptr) ::expressionService::DeleteExpressionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::DeleteExpressionsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteExpressionsResponse_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_DeleteExpressionsResponse_expression_2eproto}, {}};

static void InitDefaultsscc_info_ExpressionInfo_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_ExpressionInfo_default_instance_;
    new (ptr) ::expressionService::ExpressionInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::ExpressionInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExpressionInfo_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ExpressionInfo_expression_2eproto}, {}};

static void InitDefaultsscc_info_ListExpressionsRequest_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_ListExpressionsRequest_default_instance_;
    new (ptr) ::expressionService::ListExpressionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::ListExpressionsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListExpressionsRequest_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ListExpressionsRequest_expression_2eproto}, {}};

static void InitDefaultsscc_info_ListExpressionsResponse_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_ListExpressionsResponse_default_instance_;
    new (ptr) ::expressionService::ListExpressionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::ListExpressionsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListExpressionsResponse_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ListExpressionsResponse_expression_2eproto}, {
      &scc_info_ExpressionInfo_expression_2eproto.base,}};

static void InitDefaultsscc_info_PlayExpressionsRequest_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_PlayExpressionsRequest_default_instance_;
    new (ptr) ::expressionService::PlayExpressionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::PlayExpressionsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlayExpressionsRequest_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_PlayExpressionsRequest_expression_2eproto}, {
      &scc_info_ExpressionInfo_expression_2eproto.base,}};

static void InitDefaultsscc_info_PlayExpressionsResponse_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_PlayExpressionsResponse_default_instance_;
    new (ptr) ::expressionService::PlayExpressionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::PlayExpressionsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlayExpressionsResponse_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PlayExpressionsResponse_expression_2eproto}, {}};

static void InitDefaultsscc_info_RenameRequest_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_RenameRequest_default_instance_;
    new (ptr) ::expressionService::RenameRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::RenameRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RenameRequest_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_RenameRequest_expression_2eproto}, {}};

static void InitDefaultsscc_info_RenameResponse_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_RenameResponse_default_instance_;
    new (ptr) ::expressionService::RenameResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::RenameResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RenameResponse_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_RenameResponse_expression_2eproto}, {}};

static void InitDefaultsscc_info_StateRequest_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_StateRequest_default_instance_;
    new (ptr) ::expressionService::StateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::StateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateRequest_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_StateRequest_expression_2eproto}, {}};

static void InitDefaultsscc_info_StateResponse_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_StateResponse_default_instance_;
    new (ptr) ::expressionService::StateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::StateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateResponse_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_StateResponse_expression_2eproto}, {}};

static void InitDefaultsscc_info_StopExpressionRequest_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_StopExpressionRequest_default_instance_;
    new (ptr) ::expressionService::StopExpressionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::StopExpressionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopExpressionRequest_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_StopExpressionRequest_expression_2eproto}, {}};

static void InitDefaultsscc_info_StopExpressionResponse_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_StopExpressionResponse_default_instance_;
    new (ptr) ::expressionService::StopExpressionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::StopExpressionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopExpressionResponse_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_StopExpressionResponse_expression_2eproto}, {}};

static void InitDefaultsscc_info_SwitchRequest_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_SwitchRequest_default_instance_;
    new (ptr) ::expressionService::SwitchRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::SwitchRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SwitchRequest_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SwitchRequest_expression_2eproto}, {}};

static void InitDefaultsscc_info_SwitchResponse_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_SwitchResponse_default_instance_;
    new (ptr) ::expressionService::SwitchResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::SwitchResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SwitchResponse_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SwitchResponse_expression_2eproto}, {}};

static void InitDefaultsscc_info_UploadExpressionFileRequest_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_UploadExpressionFileRequest_default_instance_;
    new (ptr) ::expressionService::UploadExpressionFileRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::UploadExpressionFileRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UploadExpressionFileRequest_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_UploadExpressionFileRequest_expression_2eproto}, {}};

static void InitDefaultsscc_info_UploadExpressionFileResponse_expression_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::expressionService::_UploadExpressionFileResponse_default_instance_;
    new (ptr) ::expressionService::UploadExpressionFileResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::expressionService::UploadExpressionFileResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UploadExpressionFileResponse_expression_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_UploadExpressionFileResponse_expression_2eproto}, {
      &scc_info_ExpressionInfo_expression_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_expression_2eproto[17];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_expression_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_expression_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_expression_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::ExpressionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::expressionService::ExpressionInfo, id_),
  PROTOBUF_FIELD_OFFSET(::expressionService::ExpressionInfo, name_),
  PROTOBUF_FIELD_OFFSET(::expressionService::ExpressionInfo, preview_b64_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::PlayExpressionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::expressionService::PlayExpressionsRequest, expressions_info_),
  PROTOBUF_FIELD_OFFSET(::expressionService::PlayExpressionsRequest, loop_times_),
  PROTOBUF_FIELD_OFFSET(::expressionService::PlayExpressionsRequest, duration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::PlayExpressionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::StopExpressionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::StopExpressionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::UploadExpressionFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::expressionService::UploadExpressionFileRequest, name_),
  PROTOBUF_FIELD_OFFSET(::expressionService::UploadExpressionFileRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::UploadExpressionFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::expressionService::UploadExpressionFileResponse, expression_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::ListExpressionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::ListExpressionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::expressionService::ListExpressionsResponse, expressions_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::DeleteExpressionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::expressionService::DeleteExpressionsRequest, expressions_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::DeleteExpressionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::RenameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::expressionService::RenameRequest, id_),
  PROTOBUF_FIELD_OFFSET(::expressionService::RenameRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::RenameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::expressionService::RenameResponse, id_),
  PROTOBUF_FIELD_OFFSET(::expressionService::RenameResponse, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::StateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::StateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::expressionService::StateResponse, is_active_),
  PROTOBUF_FIELD_OFFSET(::expressionService::StateResponse, is_playing_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::SwitchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::expressionService::SwitchRequest, active_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::expressionService::SwitchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::expressionService::SwitchResponse, is_active_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::expressionService::ExpressionInfo)},
  { 8, -1, sizeof(::expressionService::PlayExpressionsRequest)},
  { 16, -1, sizeof(::expressionService::PlayExpressionsResponse)},
  { 21, -1, sizeof(::expressionService::StopExpressionRequest)},
  { 26, -1, sizeof(::expressionService::StopExpressionResponse)},
  { 31, -1, sizeof(::expressionService::UploadExpressionFileRequest)},
  { 38, -1, sizeof(::expressionService::UploadExpressionFileResponse)},
  { 44, -1, sizeof(::expressionService::ListExpressionsRequest)},
  { 49, -1, sizeof(::expressionService::ListExpressionsResponse)},
  { 55, -1, sizeof(::expressionService::DeleteExpressionsRequest)},
  { 61, -1, sizeof(::expressionService::DeleteExpressionsResponse)},
  { 66, -1, sizeof(::expressionService::RenameRequest)},
  { 73, -1, sizeof(::expressionService::RenameResponse)},
  { 80, -1, sizeof(::expressionService::StateRequest)},
  { 85, -1, sizeof(::expressionService::StateResponse)},
  { 92, -1, sizeof(::expressionService::SwitchRequest)},
  { 98, -1, sizeof(::expressionService::SwitchResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_ExpressionInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_PlayExpressionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_PlayExpressionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_StopExpressionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_StopExpressionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_UploadExpressionFileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_UploadExpressionFileResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_ListExpressionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_ListExpressionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_DeleteExpressionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_DeleteExpressionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_RenameRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_RenameResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_StateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_StateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_SwitchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::expressionService::_SwitchResponse_default_instance_),
};

const char descriptor_table_protodef_expression_2eproto[] =
  "\n\020expression.proto\022\021expressionService\032\034g"
  "oogle/api/annotations.proto\"\?\n\016Expressio"
  "nInfo\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\023\n\013previ"
  "ew_b64\030\003 \001(\t\"{\n\026PlayExpressionsRequest\022;"
  "\n\020expressions_info\030\001 \003(\0132!.expressionSer"
  "vice.ExpressionInfo\022\022\n\nloop_times\030\002 \001(\r\022"
  "\020\n\010duration\030\003 \001(\r\"\031\n\027PlayExpressionsResp"
  "onse\"\027\n\025StopExpressionRequest\"\030\n\026StopExp"
  "ressionResponse\"9\n\033UploadExpressionFileR"
  "equest\022\014\n\004name\030\001 \001(\t\022\014\n\004data\030\002 \001(\014\"Z\n\034Up"
  "loadExpressionFileResponse\022:\n\017expression"
  "_info\030\001 \001(\0132!.expressionService.Expressi"
  "onInfo\"\030\n\026ListExpressionsRequest\"V\n\027List"
  "ExpressionsResponse\022;\n\020expressions_info\030"
  "\001 \003(\0132!.expressionService.ExpressionInfo"
  "\"2\n\030DeleteExpressionsRequest\022\026\n\016expressi"
  "ons_id\030\001 \003(\t\"\033\n\031DeleteExpressionsRespons"
  "e\")\n\rRenameRequest\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002"
  " \001(\t\"*\n\016RenameResponse\022\n\n\002id\030\001 \001(\t\022\014\n\004na"
  "me\030\002 \001(\t\"\016\n\014StateRequest\"6\n\rStateRespons"
  "e\022\021\n\tis_active\030\001 \001(\010\022\022\n\nis_playing\030\002 \001(\010"
  "\"\037\n\rSwitchRequest\022\016\n\006active\030\001 \001(\010\"#\n\016Swi"
  "tchResponse\022\021\n\tis_active\030\001 \001(\0102\326\010\n\021Expre"
  "ssionService\022\230\001\n\017PlayExpressions\022).expre"
  "ssionService.PlayExpressionsRequest\032*.ex"
  "pressionService.PlayExpressionsResponse\""
  ".\202\323\344\223\002(\"#/api/v2/expression/play_express"
  "ions:\001*\022\224\001\n\016StopExpression\022(.expressionS"
  "ervice.StopExpressionRequest\032).expressio"
  "nService.StopExpressionResponse\"-\202\323\344\223\002\'\""
  "\"/api/v2/expression/stop_expression:\001*\022y"
  "\n\024UploadExpressionFile\022..expressionServi"
  "ce.UploadExpressionFileRequest\032/.express"
  "ionService.UploadExpressionFileResponse\""
  "\000\022s\n\006Rename\022 .expressionService.RenameRe"
  "quest\032!.expressionService.RenameResponse"
  "\"$\202\323\344\223\002\036\"\031/api/v2/expression/rename:\001*\022\230"
  "\001\n\017ListExpressions\022).expressionService.L"
  "istExpressionsRequest\032*.expressionServic"
  "e.ListExpressionsResponse\".\202\323\344\223\002(\"#/api/"
  "v2/expression/list_expressions:\001*\022\240\001\n\021De"
  "leteExpressions\022+.expressionService.Dele"
  "teExpressionsRequest\032,.expressionService"
  ".DeleteExpressionsResponse\"0\202\323\344\223\002*\"%/api"
  "/v2/expression/delete_expressions:\001*\022l\n\005"
  "State\022\037.expressionService.StateRequest\032 "
  ".expressionService.StateResponse\" \202\323\344\223\002\032"
  "\022\030/api/v2/expression/state\022s\n\006Switch\022 .e"
  "xpressionService.SwitchRequest\032!.express"
  "ionService.SwitchResponse\"$\202\323\344\223\002\036\"\031/api/"
  "v2/expression/switch:\001*b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_expression_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_expression_2eproto_sccs[17] = {
  &scc_info_DeleteExpressionsRequest_expression_2eproto.base,
  &scc_info_DeleteExpressionsResponse_expression_2eproto.base,
  &scc_info_ExpressionInfo_expression_2eproto.base,
  &scc_info_ListExpressionsRequest_expression_2eproto.base,
  &scc_info_ListExpressionsResponse_expression_2eproto.base,
  &scc_info_PlayExpressionsRequest_expression_2eproto.base,
  &scc_info_PlayExpressionsResponse_expression_2eproto.base,
  &scc_info_RenameRequest_expression_2eproto.base,
  &scc_info_RenameResponse_expression_2eproto.base,
  &scc_info_StateRequest_expression_2eproto.base,
  &scc_info_StateResponse_expression_2eproto.base,
  &scc_info_StopExpressionRequest_expression_2eproto.base,
  &scc_info_StopExpressionResponse_expression_2eproto.base,
  &scc_info_SwitchRequest_expression_2eproto.base,
  &scc_info_SwitchResponse_expression_2eproto.base,
  &scc_info_UploadExpressionFileRequest_expression_2eproto.base,
  &scc_info_UploadExpressionFileResponse_expression_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_expression_2eproto_once;
static bool descriptor_table_expression_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_expression_2eproto = {
  &descriptor_table_expression_2eproto_initialized, descriptor_table_protodef_expression_2eproto, "expression.proto", 2031,
  &descriptor_table_expression_2eproto_once, descriptor_table_expression_2eproto_sccs, descriptor_table_expression_2eproto_deps, 17, 1,
  schemas, file_default_instances, TableStruct_expression_2eproto::offsets,
  file_level_metadata_expression_2eproto, 17, file_level_enum_descriptors_expression_2eproto, file_level_service_descriptors_expression_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_expression_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_expression_2eproto), true);
namespace expressionService {

// ===================================================================

void ExpressionInfo::InitAsDefaultInstance() {
}
class ExpressionInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExpressionInfo::kIdFieldNumber;
const int ExpressionInfo::kNameFieldNumber;
const int ExpressionInfo::kPreviewB64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExpressionInfo::ExpressionInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.ExpressionInfo)
}
ExpressionInfo::ExpressionInfo(const ExpressionInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  preview_b64_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.preview_b64().size() > 0) {
    preview_b64_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.preview_b64_);
  }
  // @@protoc_insertion_point(copy_constructor:expressionService.ExpressionInfo)
}

void ExpressionInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExpressionInfo_expression_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  preview_b64_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ExpressionInfo::~ExpressionInfo() {
  // @@protoc_insertion_point(destructor:expressionService.ExpressionInfo)
  SharedDtor();
}

void ExpressionInfo::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  preview_b64_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ExpressionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExpressionInfo& ExpressionInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExpressionInfo_expression_2eproto.base);
  return *internal_default_instance();
}


void ExpressionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.ExpressionInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  preview_b64_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ExpressionInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_id(), ptr, ctx, "expressionService.ExpressionInfo.id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "expressionService.ExpressionInfo.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string preview_b64 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_preview_b64(), ptr, ctx, "expressionService.ExpressionInfo.preview_b64");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ExpressionInfo::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.ExpressionInfo)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "expressionService.ExpressionInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "expressionService.ExpressionInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string preview_b64 = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_preview_b64()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->preview_b64().data(), static_cast<int>(this->preview_b64().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "expressionService.ExpressionInfo.preview_b64"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.ExpressionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.ExpressionInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ExpressionInfo::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.ExpressionInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.ExpressionInfo.id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.ExpressionInfo.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string preview_b64 = 3;
  if (this->preview_b64().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->preview_b64().data(), static_cast<int>(this->preview_b64().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.ExpressionInfo.preview_b64");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->preview_b64(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.ExpressionInfo)
}

::PROTOBUF_NAMESPACE_ID::uint8* ExpressionInfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.ExpressionInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.ExpressionInfo.id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.ExpressionInfo.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string preview_b64 = 3;
  if (this->preview_b64().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->preview_b64().data(), static_cast<int>(this->preview_b64().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.ExpressionInfo.preview_b64");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->preview_b64(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.ExpressionInfo)
  return target;
}

size_t ExpressionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.ExpressionInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string preview_b64 = 3;
  if (this->preview_b64().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->preview_b64());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExpressionInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.ExpressionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ExpressionInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExpressionInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.ExpressionInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.ExpressionInfo)
    MergeFrom(*source);
  }
}

void ExpressionInfo::MergeFrom(const ExpressionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.ExpressionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.preview_b64().size() > 0) {

    preview_b64_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.preview_b64_);
  }
}

void ExpressionInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.ExpressionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExpressionInfo::CopyFrom(const ExpressionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.ExpressionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpressionInfo::IsInitialized() const {
  return true;
}

void ExpressionInfo::Swap(ExpressionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExpressionInfo::InternalSwap(ExpressionInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  preview_b64_.Swap(&other->preview_b64_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ExpressionInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PlayExpressionsRequest::InitAsDefaultInstance() {
}
class PlayExpressionsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayExpressionsRequest::kExpressionsInfoFieldNumber;
const int PlayExpressionsRequest::kLoopTimesFieldNumber;
const int PlayExpressionsRequest::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayExpressionsRequest::PlayExpressionsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.PlayExpressionsRequest)
}
PlayExpressionsRequest::PlayExpressionsRequest(const PlayExpressionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      expressions_info_(from.expressions_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&loop_times_, &from.loop_times_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&loop_times_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:expressionService.PlayExpressionsRequest)
}

void PlayExpressionsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlayExpressionsRequest_expression_2eproto.base);
  ::memset(&loop_times_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&loop_times_)) + sizeof(duration_));
}

PlayExpressionsRequest::~PlayExpressionsRequest() {
  // @@protoc_insertion_point(destructor:expressionService.PlayExpressionsRequest)
  SharedDtor();
}

void PlayExpressionsRequest::SharedDtor() {
}

void PlayExpressionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayExpressionsRequest& PlayExpressionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlayExpressionsRequest_expression_2eproto.base);
  return *internal_default_instance();
}


void PlayExpressionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.PlayExpressionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expressions_info_.Clear();
  ::memset(&loop_times_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&loop_times_)) + sizeof(duration_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PlayExpressionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .expressionService.ExpressionInfo expressions_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_expressions_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // uint32 loop_times = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          loop_times_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 duration = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PlayExpressionsRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.PlayExpressionsRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .expressionService.ExpressionInfo expressions_info = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_expressions_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 loop_times = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loop_times_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 duration = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.PlayExpressionsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.PlayExpressionsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PlayExpressionsRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.PlayExpressionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .expressionService.ExpressionInfo expressions_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->expressions_info_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->expressions_info(static_cast<int>(i)),
      output);
  }

  // uint32 loop_times = 2;
  if (this->loop_times() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->loop_times(), output);
  }

  // uint32 duration = 3;
  if (this->duration() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(3, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.PlayExpressionsRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* PlayExpressionsRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.PlayExpressionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .expressionService.ExpressionInfo expressions_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->expressions_info_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->expressions_info(static_cast<int>(i)), target);
  }

  // uint32 loop_times = 2;
  if (this->loop_times() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->loop_times(), target);
  }

  // uint32 duration = 3;
  if (this->duration() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.PlayExpressionsRequest)
  return target;
}

size_t PlayExpressionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.PlayExpressionsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .expressionService.ExpressionInfo expressions_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->expressions_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->expressions_info(static_cast<int>(i)));
    }
  }

  // uint32 loop_times = 2;
  if (this->loop_times() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->loop_times());
  }

  // uint32 duration = 3;
  if (this->duration() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->duration());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayExpressionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.PlayExpressionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayExpressionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlayExpressionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.PlayExpressionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.PlayExpressionsRequest)
    MergeFrom(*source);
  }
}

void PlayExpressionsRequest::MergeFrom(const PlayExpressionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.PlayExpressionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  expressions_info_.MergeFrom(from.expressions_info_);
  if (from.loop_times() != 0) {
    set_loop_times(from.loop_times());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
}

void PlayExpressionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.PlayExpressionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayExpressionsRequest::CopyFrom(const PlayExpressionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.PlayExpressionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayExpressionsRequest::IsInitialized() const {
  return true;
}

void PlayExpressionsRequest::Swap(PlayExpressionsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayExpressionsRequest::InternalSwap(PlayExpressionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&expressions_info_)->InternalSwap(CastToBase(&other->expressions_info_));
  swap(loop_times_, other->loop_times_);
  swap(duration_, other->duration_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayExpressionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PlayExpressionsResponse::InitAsDefaultInstance() {
}
class PlayExpressionsResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayExpressionsResponse::PlayExpressionsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.PlayExpressionsResponse)
}
PlayExpressionsResponse::PlayExpressionsResponse(const PlayExpressionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:expressionService.PlayExpressionsResponse)
}

void PlayExpressionsResponse::SharedCtor() {
}

PlayExpressionsResponse::~PlayExpressionsResponse() {
  // @@protoc_insertion_point(destructor:expressionService.PlayExpressionsResponse)
  SharedDtor();
}

void PlayExpressionsResponse::SharedDtor() {
}

void PlayExpressionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayExpressionsResponse& PlayExpressionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlayExpressionsResponse_expression_2eproto.base);
  return *internal_default_instance();
}


void PlayExpressionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.PlayExpressionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PlayExpressionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PlayExpressionsResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.PlayExpressionsResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.PlayExpressionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.PlayExpressionsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PlayExpressionsResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.PlayExpressionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.PlayExpressionsResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* PlayExpressionsResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.PlayExpressionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.PlayExpressionsResponse)
  return target;
}

size_t PlayExpressionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.PlayExpressionsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayExpressionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.PlayExpressionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayExpressionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlayExpressionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.PlayExpressionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.PlayExpressionsResponse)
    MergeFrom(*source);
  }
}

void PlayExpressionsResponse::MergeFrom(const PlayExpressionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.PlayExpressionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PlayExpressionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.PlayExpressionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayExpressionsResponse::CopyFrom(const PlayExpressionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.PlayExpressionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayExpressionsResponse::IsInitialized() const {
  return true;
}

void PlayExpressionsResponse::Swap(PlayExpressionsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayExpressionsResponse::InternalSwap(PlayExpressionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayExpressionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopExpressionRequest::InitAsDefaultInstance() {
}
class StopExpressionRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopExpressionRequest::StopExpressionRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.StopExpressionRequest)
}
StopExpressionRequest::StopExpressionRequest(const StopExpressionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:expressionService.StopExpressionRequest)
}

void StopExpressionRequest::SharedCtor() {
}

StopExpressionRequest::~StopExpressionRequest() {
  // @@protoc_insertion_point(destructor:expressionService.StopExpressionRequest)
  SharedDtor();
}

void StopExpressionRequest::SharedDtor() {
}

void StopExpressionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopExpressionRequest& StopExpressionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopExpressionRequest_expression_2eproto.base);
  return *internal_default_instance();
}


void StopExpressionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.StopExpressionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StopExpressionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StopExpressionRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.StopExpressionRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.StopExpressionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.StopExpressionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StopExpressionRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.StopExpressionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.StopExpressionRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* StopExpressionRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.StopExpressionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.StopExpressionRequest)
  return target;
}

size_t StopExpressionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.StopExpressionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopExpressionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.StopExpressionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopExpressionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopExpressionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.StopExpressionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.StopExpressionRequest)
    MergeFrom(*source);
  }
}

void StopExpressionRequest::MergeFrom(const StopExpressionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.StopExpressionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StopExpressionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.StopExpressionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopExpressionRequest::CopyFrom(const StopExpressionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.StopExpressionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopExpressionRequest::IsInitialized() const {
  return true;
}

void StopExpressionRequest::Swap(StopExpressionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopExpressionRequest::InternalSwap(StopExpressionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopExpressionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopExpressionResponse::InitAsDefaultInstance() {
}
class StopExpressionResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopExpressionResponse::StopExpressionResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.StopExpressionResponse)
}
StopExpressionResponse::StopExpressionResponse(const StopExpressionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:expressionService.StopExpressionResponse)
}

void StopExpressionResponse::SharedCtor() {
}

StopExpressionResponse::~StopExpressionResponse() {
  // @@protoc_insertion_point(destructor:expressionService.StopExpressionResponse)
  SharedDtor();
}

void StopExpressionResponse::SharedDtor() {
}

void StopExpressionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopExpressionResponse& StopExpressionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopExpressionResponse_expression_2eproto.base);
  return *internal_default_instance();
}


void StopExpressionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.StopExpressionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StopExpressionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StopExpressionResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.StopExpressionResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.StopExpressionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.StopExpressionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StopExpressionResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.StopExpressionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.StopExpressionResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* StopExpressionResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.StopExpressionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.StopExpressionResponse)
  return target;
}

size_t StopExpressionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.StopExpressionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopExpressionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.StopExpressionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StopExpressionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopExpressionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.StopExpressionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.StopExpressionResponse)
    MergeFrom(*source);
  }
}

void StopExpressionResponse::MergeFrom(const StopExpressionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.StopExpressionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StopExpressionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.StopExpressionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopExpressionResponse::CopyFrom(const StopExpressionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.StopExpressionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopExpressionResponse::IsInitialized() const {
  return true;
}

void StopExpressionResponse::Swap(StopExpressionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopExpressionResponse::InternalSwap(StopExpressionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopExpressionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UploadExpressionFileRequest::InitAsDefaultInstance() {
}
class UploadExpressionFileRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadExpressionFileRequest::kNameFieldNumber;
const int UploadExpressionFileRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadExpressionFileRequest::UploadExpressionFileRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.UploadExpressionFileRequest)
}
UploadExpressionFileRequest::UploadExpressionFileRequest(const UploadExpressionFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:expressionService.UploadExpressionFileRequest)
}

void UploadExpressionFileRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UploadExpressionFileRequest_expression_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UploadExpressionFileRequest::~UploadExpressionFileRequest() {
  // @@protoc_insertion_point(destructor:expressionService.UploadExpressionFileRequest)
  SharedDtor();
}

void UploadExpressionFileRequest::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UploadExpressionFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UploadExpressionFileRequest& UploadExpressionFileRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UploadExpressionFileRequest_expression_2eproto.base);
  return *internal_default_instance();
}


void UploadExpressionFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.UploadExpressionFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UploadExpressionFileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "expressionService.UploadExpressionFileRequest.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_data(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UploadExpressionFileRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.UploadExpressionFileRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "expressionService.UploadExpressionFileRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.UploadExpressionFileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.UploadExpressionFileRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UploadExpressionFileRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.UploadExpressionFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.UploadExpressionFileRequest.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.UploadExpressionFileRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* UploadExpressionFileRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.UploadExpressionFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.UploadExpressionFileRequest.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.UploadExpressionFileRequest)
  return target;
}

size_t UploadExpressionFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.UploadExpressionFileRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadExpressionFileRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.UploadExpressionFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadExpressionFileRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UploadExpressionFileRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.UploadExpressionFileRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.UploadExpressionFileRequest)
    MergeFrom(*source);
  }
}

void UploadExpressionFileRequest::MergeFrom(const UploadExpressionFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.UploadExpressionFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void UploadExpressionFileRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.UploadExpressionFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadExpressionFileRequest::CopyFrom(const UploadExpressionFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.UploadExpressionFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadExpressionFileRequest::IsInitialized() const {
  return true;
}

void UploadExpressionFileRequest::Swap(UploadExpressionFileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadExpressionFileRequest::InternalSwap(UploadExpressionFileRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadExpressionFileRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UploadExpressionFileResponse::InitAsDefaultInstance() {
  ::expressionService::_UploadExpressionFileResponse_default_instance_._instance.get_mutable()->expression_info_ = const_cast< ::expressionService::ExpressionInfo*>(
      ::expressionService::ExpressionInfo::internal_default_instance());
}
class UploadExpressionFileResponse::HasBitSetters {
 public:
  static const ::expressionService::ExpressionInfo& expression_info(const UploadExpressionFileResponse* msg);
};

const ::expressionService::ExpressionInfo&
UploadExpressionFileResponse::HasBitSetters::expression_info(const UploadExpressionFileResponse* msg) {
  return *msg->expression_info_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadExpressionFileResponse::kExpressionInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadExpressionFileResponse::UploadExpressionFileResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.UploadExpressionFileResponse)
}
UploadExpressionFileResponse::UploadExpressionFileResponse(const UploadExpressionFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_expression_info()) {
    expression_info_ = new ::expressionService::ExpressionInfo(*from.expression_info_);
  } else {
    expression_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:expressionService.UploadExpressionFileResponse)
}

void UploadExpressionFileResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UploadExpressionFileResponse_expression_2eproto.base);
  expression_info_ = nullptr;
}

UploadExpressionFileResponse::~UploadExpressionFileResponse() {
  // @@protoc_insertion_point(destructor:expressionService.UploadExpressionFileResponse)
  SharedDtor();
}

void UploadExpressionFileResponse::SharedDtor() {
  if (this != internal_default_instance()) delete expression_info_;
}

void UploadExpressionFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UploadExpressionFileResponse& UploadExpressionFileResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UploadExpressionFileResponse_expression_2eproto.base);
  return *internal_default_instance();
}


void UploadExpressionFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.UploadExpressionFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && expression_info_ != nullptr) {
    delete expression_info_;
  }
  expression_info_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UploadExpressionFileResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .expressionService.ExpressionInfo expression_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_expression_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UploadExpressionFileResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.UploadExpressionFileResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .expressionService.ExpressionInfo expression_info = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_expression_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.UploadExpressionFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.UploadExpressionFileResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UploadExpressionFileResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.UploadExpressionFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .expressionService.ExpressionInfo expression_info = 1;
  if (this->has_expression_info()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::expression_info(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.UploadExpressionFileResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* UploadExpressionFileResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.UploadExpressionFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .expressionService.ExpressionInfo expression_info = 1;
  if (this->has_expression_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::expression_info(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.UploadExpressionFileResponse)
  return target;
}

size_t UploadExpressionFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.UploadExpressionFileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .expressionService.ExpressionInfo expression_info = 1;
  if (this->has_expression_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *expression_info_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadExpressionFileResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.UploadExpressionFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadExpressionFileResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UploadExpressionFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.UploadExpressionFileResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.UploadExpressionFileResponse)
    MergeFrom(*source);
  }
}

void UploadExpressionFileResponse::MergeFrom(const UploadExpressionFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.UploadExpressionFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_expression_info()) {
    mutable_expression_info()->::expressionService::ExpressionInfo::MergeFrom(from.expression_info());
  }
}

void UploadExpressionFileResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.UploadExpressionFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadExpressionFileResponse::CopyFrom(const UploadExpressionFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.UploadExpressionFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadExpressionFileResponse::IsInitialized() const {
  return true;
}

void UploadExpressionFileResponse::Swap(UploadExpressionFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadExpressionFileResponse::InternalSwap(UploadExpressionFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(expression_info_, other->expression_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadExpressionFileResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListExpressionsRequest::InitAsDefaultInstance() {
}
class ListExpressionsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListExpressionsRequest::ListExpressionsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.ListExpressionsRequest)
}
ListExpressionsRequest::ListExpressionsRequest(const ListExpressionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:expressionService.ListExpressionsRequest)
}

void ListExpressionsRequest::SharedCtor() {
}

ListExpressionsRequest::~ListExpressionsRequest() {
  // @@protoc_insertion_point(destructor:expressionService.ListExpressionsRequest)
  SharedDtor();
}

void ListExpressionsRequest::SharedDtor() {
}

void ListExpressionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListExpressionsRequest& ListExpressionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListExpressionsRequest_expression_2eproto.base);
  return *internal_default_instance();
}


void ListExpressionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.ListExpressionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListExpressionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListExpressionsRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.ListExpressionsRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.ListExpressionsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.ListExpressionsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListExpressionsRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.ListExpressionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.ListExpressionsRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* ListExpressionsRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.ListExpressionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.ListExpressionsRequest)
  return target;
}

size_t ListExpressionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.ListExpressionsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListExpressionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.ListExpressionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListExpressionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListExpressionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.ListExpressionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.ListExpressionsRequest)
    MergeFrom(*source);
  }
}

void ListExpressionsRequest::MergeFrom(const ListExpressionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.ListExpressionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListExpressionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.ListExpressionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListExpressionsRequest::CopyFrom(const ListExpressionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.ListExpressionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListExpressionsRequest::IsInitialized() const {
  return true;
}

void ListExpressionsRequest::Swap(ListExpressionsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListExpressionsRequest::InternalSwap(ListExpressionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListExpressionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListExpressionsResponse::InitAsDefaultInstance() {
}
class ListExpressionsResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListExpressionsResponse::kExpressionsInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListExpressionsResponse::ListExpressionsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.ListExpressionsResponse)
}
ListExpressionsResponse::ListExpressionsResponse(const ListExpressionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      expressions_info_(from.expressions_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:expressionService.ListExpressionsResponse)
}

void ListExpressionsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListExpressionsResponse_expression_2eproto.base);
}

ListExpressionsResponse::~ListExpressionsResponse() {
  // @@protoc_insertion_point(destructor:expressionService.ListExpressionsResponse)
  SharedDtor();
}

void ListExpressionsResponse::SharedDtor() {
}

void ListExpressionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListExpressionsResponse& ListExpressionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListExpressionsResponse_expression_2eproto.base);
  return *internal_default_instance();
}


void ListExpressionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.ListExpressionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expressions_info_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListExpressionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .expressionService.ExpressionInfo expressions_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_expressions_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListExpressionsResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.ListExpressionsResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .expressionService.ExpressionInfo expressions_info = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_expressions_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.ListExpressionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.ListExpressionsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListExpressionsResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.ListExpressionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .expressionService.ExpressionInfo expressions_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->expressions_info_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->expressions_info(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.ListExpressionsResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* ListExpressionsResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.ListExpressionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .expressionService.ExpressionInfo expressions_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->expressions_info_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->expressions_info(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.ListExpressionsResponse)
  return target;
}

size_t ListExpressionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.ListExpressionsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .expressionService.ExpressionInfo expressions_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->expressions_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->expressions_info(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListExpressionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.ListExpressionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListExpressionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListExpressionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.ListExpressionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.ListExpressionsResponse)
    MergeFrom(*source);
  }
}

void ListExpressionsResponse::MergeFrom(const ListExpressionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.ListExpressionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  expressions_info_.MergeFrom(from.expressions_info_);
}

void ListExpressionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.ListExpressionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListExpressionsResponse::CopyFrom(const ListExpressionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.ListExpressionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListExpressionsResponse::IsInitialized() const {
  return true;
}

void ListExpressionsResponse::Swap(ListExpressionsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListExpressionsResponse::InternalSwap(ListExpressionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&expressions_info_)->InternalSwap(CastToBase(&other->expressions_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListExpressionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteExpressionsRequest::InitAsDefaultInstance() {
}
class DeleteExpressionsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteExpressionsRequest::kExpressionsIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteExpressionsRequest::DeleteExpressionsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.DeleteExpressionsRequest)
}
DeleteExpressionsRequest::DeleteExpressionsRequest(const DeleteExpressionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      expressions_id_(from.expressions_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:expressionService.DeleteExpressionsRequest)
}

void DeleteExpressionsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteExpressionsRequest_expression_2eproto.base);
}

DeleteExpressionsRequest::~DeleteExpressionsRequest() {
  // @@protoc_insertion_point(destructor:expressionService.DeleteExpressionsRequest)
  SharedDtor();
}

void DeleteExpressionsRequest::SharedDtor() {
}

void DeleteExpressionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteExpressionsRequest& DeleteExpressionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteExpressionsRequest_expression_2eproto.base);
  return *internal_default_instance();
}


void DeleteExpressionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.DeleteExpressionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expressions_id_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteExpressionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string expressions_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_expressions_id(), ptr, ctx, "expressionService.DeleteExpressionsRequest.expressions_id");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteExpressionsRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.DeleteExpressionsRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string expressions_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_expressions_id()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->expressions_id(this->expressions_id_size() - 1).data(),
            static_cast<int>(this->expressions_id(this->expressions_id_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "expressionService.DeleteExpressionsRequest.expressions_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.DeleteExpressionsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.DeleteExpressionsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteExpressionsRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.DeleteExpressionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string expressions_id = 1;
  for (int i = 0, n = this->expressions_id_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->expressions_id(i).data(), static_cast<int>(this->expressions_id(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.DeleteExpressionsRequest.expressions_id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      1, this->expressions_id(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.DeleteExpressionsRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteExpressionsRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.DeleteExpressionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string expressions_id = 1;
  for (int i = 0, n = this->expressions_id_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->expressions_id(i).data(), static_cast<int>(this->expressions_id(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.DeleteExpressionsRequest.expressions_id");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(1, this->expressions_id(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.DeleteExpressionsRequest)
  return target;
}

size_t DeleteExpressionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.DeleteExpressionsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string expressions_id = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->expressions_id_size());
  for (int i = 0, n = this->expressions_id_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->expressions_id(i));
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteExpressionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.DeleteExpressionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteExpressionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteExpressionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.DeleteExpressionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.DeleteExpressionsRequest)
    MergeFrom(*source);
  }
}

void DeleteExpressionsRequest::MergeFrom(const DeleteExpressionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.DeleteExpressionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  expressions_id_.MergeFrom(from.expressions_id_);
}

void DeleteExpressionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.DeleteExpressionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteExpressionsRequest::CopyFrom(const DeleteExpressionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.DeleteExpressionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteExpressionsRequest::IsInitialized() const {
  return true;
}

void DeleteExpressionsRequest::Swap(DeleteExpressionsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteExpressionsRequest::InternalSwap(DeleteExpressionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  expressions_id_.InternalSwap(CastToBase(&other->expressions_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteExpressionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteExpressionsResponse::InitAsDefaultInstance() {
}
class DeleteExpressionsResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteExpressionsResponse::DeleteExpressionsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.DeleteExpressionsResponse)
}
DeleteExpressionsResponse::DeleteExpressionsResponse(const DeleteExpressionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:expressionService.DeleteExpressionsResponse)
}

void DeleteExpressionsResponse::SharedCtor() {
}

DeleteExpressionsResponse::~DeleteExpressionsResponse() {
  // @@protoc_insertion_point(destructor:expressionService.DeleteExpressionsResponse)
  SharedDtor();
}

void DeleteExpressionsResponse::SharedDtor() {
}

void DeleteExpressionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteExpressionsResponse& DeleteExpressionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteExpressionsResponse_expression_2eproto.base);
  return *internal_default_instance();
}


void DeleteExpressionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.DeleteExpressionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteExpressionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteExpressionsResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.DeleteExpressionsResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.DeleteExpressionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.DeleteExpressionsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteExpressionsResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.DeleteExpressionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.DeleteExpressionsResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteExpressionsResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.DeleteExpressionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.DeleteExpressionsResponse)
  return target;
}

size_t DeleteExpressionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.DeleteExpressionsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteExpressionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.DeleteExpressionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteExpressionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteExpressionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.DeleteExpressionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.DeleteExpressionsResponse)
    MergeFrom(*source);
  }
}

void DeleteExpressionsResponse::MergeFrom(const DeleteExpressionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.DeleteExpressionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteExpressionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.DeleteExpressionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteExpressionsResponse::CopyFrom(const DeleteExpressionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.DeleteExpressionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteExpressionsResponse::IsInitialized() const {
  return true;
}

void DeleteExpressionsResponse::Swap(DeleteExpressionsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteExpressionsResponse::InternalSwap(DeleteExpressionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteExpressionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RenameRequest::InitAsDefaultInstance() {
}
class RenameRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RenameRequest::kIdFieldNumber;
const int RenameRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RenameRequest::RenameRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.RenameRequest)
}
RenameRequest::RenameRequest(const RenameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:expressionService.RenameRequest)
}

void RenameRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RenameRequest_expression_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RenameRequest::~RenameRequest() {
  // @@protoc_insertion_point(destructor:expressionService.RenameRequest)
  SharedDtor();
}

void RenameRequest::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RenameRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RenameRequest& RenameRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RenameRequest_expression_2eproto.base);
  return *internal_default_instance();
}


void RenameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.RenameRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RenameRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_id(), ptr, ctx, "expressionService.RenameRequest.id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "expressionService.RenameRequest.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RenameRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.RenameRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "expressionService.RenameRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "expressionService.RenameRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.RenameRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.RenameRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RenameRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.RenameRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.RenameRequest.id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.RenameRequest.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.RenameRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* RenameRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.RenameRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.RenameRequest.id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.RenameRequest.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.RenameRequest)
  return target;
}

size_t RenameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.RenameRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RenameRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.RenameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RenameRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RenameRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.RenameRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.RenameRequest)
    MergeFrom(*source);
  }
}

void RenameRequest::MergeFrom(const RenameRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.RenameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void RenameRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.RenameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameRequest::CopyFrom(const RenameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.RenameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameRequest::IsInitialized() const {
  return true;
}

void RenameRequest::Swap(RenameRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RenameRequest::InternalSwap(RenameRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata RenameRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RenameResponse::InitAsDefaultInstance() {
}
class RenameResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RenameResponse::kIdFieldNumber;
const int RenameResponse::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RenameResponse::RenameResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.RenameResponse)
}
RenameResponse::RenameResponse(const RenameResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:expressionService.RenameResponse)
}

void RenameResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RenameResponse_expression_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RenameResponse::~RenameResponse() {
  // @@protoc_insertion_point(destructor:expressionService.RenameResponse)
  SharedDtor();
}

void RenameResponse::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RenameResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RenameResponse& RenameResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RenameResponse_expression_2eproto.base);
  return *internal_default_instance();
}


void RenameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.RenameResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RenameResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_id(), ptr, ctx, "expressionService.RenameResponse.id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "expressionService.RenameResponse.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RenameResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.RenameResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "expressionService.RenameResponse.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "expressionService.RenameResponse.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.RenameResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.RenameResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RenameResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.RenameResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.RenameResponse.id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.RenameResponse.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.RenameResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* RenameResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.RenameResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.RenameResponse.id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "expressionService.RenameResponse.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.RenameResponse)
  return target;
}

size_t RenameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.RenameResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RenameResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.RenameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RenameResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RenameResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.RenameResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.RenameResponse)
    MergeFrom(*source);
  }
}

void RenameResponse::MergeFrom(const RenameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.RenameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void RenameResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.RenameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameResponse::CopyFrom(const RenameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.RenameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameResponse::IsInitialized() const {
  return true;
}

void RenameResponse::Swap(RenameResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RenameResponse::InternalSwap(RenameResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata RenameResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StateRequest::InitAsDefaultInstance() {
}
class StateRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateRequest::StateRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.StateRequest)
}
StateRequest::StateRequest(const StateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:expressionService.StateRequest)
}

void StateRequest::SharedCtor() {
}

StateRequest::~StateRequest() {
  // @@protoc_insertion_point(destructor:expressionService.StateRequest)
  SharedDtor();
}

void StateRequest::SharedDtor() {
}

void StateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StateRequest& StateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StateRequest_expression_2eproto.base);
  return *internal_default_instance();
}


void StateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.StateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StateRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.StateRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.StateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.StateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StateRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.StateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.StateRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* StateRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.StateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.StateRequest)
  return target;
}

size_t StateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.StateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.StateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.StateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.StateRequest)
    MergeFrom(*source);
  }
}

void StateRequest::MergeFrom(const StateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.StateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.StateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateRequest::CopyFrom(const StateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.StateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateRequest::IsInitialized() const {
  return true;
}

void StateRequest::Swap(StateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateRequest::InternalSwap(StateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StateResponse::InitAsDefaultInstance() {
}
class StateResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateResponse::kIsActiveFieldNumber;
const int StateResponse::kIsPlayingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateResponse::StateResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.StateResponse)
}
StateResponse::StateResponse(const StateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_active_, &from.is_active_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_playing_) -
    reinterpret_cast<char*>(&is_active_)) + sizeof(is_playing_));
  // @@protoc_insertion_point(copy_constructor:expressionService.StateResponse)
}

void StateResponse::SharedCtor() {
  ::memset(&is_active_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_playing_) -
      reinterpret_cast<char*>(&is_active_)) + sizeof(is_playing_));
}

StateResponse::~StateResponse() {
  // @@protoc_insertion_point(destructor:expressionService.StateResponse)
  SharedDtor();
}

void StateResponse::SharedDtor() {
}

void StateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StateResponse& StateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StateResponse_expression_2eproto.base);
  return *internal_default_instance();
}


void StateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.StateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_active_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_playing_) -
      reinterpret_cast<char*>(&is_active_)) + sizeof(is_playing_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_active = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_active_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_playing = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          is_playing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StateResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.StateResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_active = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_playing = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_playing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.StateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.StateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StateResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.StateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_active = 1;
  if (this->is_active() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->is_active(), output);
  }

  // bool is_playing = 2;
  if (this->is_playing() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->is_playing(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.StateResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* StateResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.StateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_active = 1;
  if (this->is_active() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->is_active(), target);
  }

  // bool is_playing = 2;
  if (this->is_playing() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->is_playing(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.StateResponse)
  return target;
}

size_t StateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.StateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_active = 1;
  if (this->is_active() != 0) {
    total_size += 1 + 1;
  }

  // bool is_playing = 2;
  if (this->is_playing() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.StateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.StateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.StateResponse)
    MergeFrom(*source);
  }
}

void StateResponse::MergeFrom(const StateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.StateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_active() != 0) {
    set_is_active(from.is_active());
  }
  if (from.is_playing() != 0) {
    set_is_playing(from.is_playing());
  }
}

void StateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.StateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateResponse::CopyFrom(const StateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.StateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateResponse::IsInitialized() const {
  return true;
}

void StateResponse::Swap(StateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateResponse::InternalSwap(StateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(is_active_, other->is_active_);
  swap(is_playing_, other->is_playing_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SwitchRequest::InitAsDefaultInstance() {
}
class SwitchRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchRequest::kActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchRequest::SwitchRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.SwitchRequest)
}
SwitchRequest::SwitchRequest(const SwitchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  active_ = from.active_;
  // @@protoc_insertion_point(copy_constructor:expressionService.SwitchRequest)
}

void SwitchRequest::SharedCtor() {
  active_ = false;
}

SwitchRequest::~SwitchRequest() {
  // @@protoc_insertion_point(destructor:expressionService.SwitchRequest)
  SharedDtor();
}

void SwitchRequest::SharedDtor() {
}

void SwitchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SwitchRequest& SwitchRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SwitchRequest_expression_2eproto.base);
  return *internal_default_instance();
}


void SwitchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.SwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  active_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SwitchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool active = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          active_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SwitchRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.SwitchRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool active = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.SwitchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.SwitchRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SwitchRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.SwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool active = 1;
  if (this->active() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.SwitchRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* SwitchRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.SwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool active = 1;
  if (this->active() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.SwitchRequest)
  return target;
}

size_t SwitchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.SwitchRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool active = 1;
  if (this->active() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SwitchRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.SwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SwitchRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SwitchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.SwitchRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.SwitchRequest)
    MergeFrom(*source);
  }
}

void SwitchRequest::MergeFrom(const SwitchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.SwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.active() != 0) {
    set_active(from.active());
  }
}

void SwitchRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.SwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchRequest::CopyFrom(const SwitchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.SwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchRequest::IsInitialized() const {
  return true;
}

void SwitchRequest::Swap(SwitchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchRequest::InternalSwap(SwitchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(active_, other->active_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SwitchRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SwitchResponse::InitAsDefaultInstance() {
}
class SwitchResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchResponse::kIsActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchResponse::SwitchResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:expressionService.SwitchResponse)
}
SwitchResponse::SwitchResponse(const SwitchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_active_ = from.is_active_;
  // @@protoc_insertion_point(copy_constructor:expressionService.SwitchResponse)
}

void SwitchResponse::SharedCtor() {
  is_active_ = false;
}

SwitchResponse::~SwitchResponse() {
  // @@protoc_insertion_point(destructor:expressionService.SwitchResponse)
  SharedDtor();
}

void SwitchResponse::SharedDtor() {
}

void SwitchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SwitchResponse& SwitchResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SwitchResponse_expression_2eproto.base);
  return *internal_default_instance();
}


void SwitchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:expressionService.SwitchResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_active_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SwitchResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_active = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_active_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SwitchResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:expressionService.SwitchResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_active = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:expressionService.SwitchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:expressionService.SwitchResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SwitchResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:expressionService.SwitchResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_active = 1;
  if (this->is_active() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->is_active(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:expressionService.SwitchResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* SwitchResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:expressionService.SwitchResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_active = 1;
  if (this->is_active() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->is_active(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:expressionService.SwitchResponse)
  return target;
}

size_t SwitchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:expressionService.SwitchResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_active = 1;
  if (this->is_active() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SwitchResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:expressionService.SwitchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SwitchResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SwitchResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:expressionService.SwitchResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:expressionService.SwitchResponse)
    MergeFrom(*source);
  }
}

void SwitchResponse::MergeFrom(const SwitchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:expressionService.SwitchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_active() != 0) {
    set_is_active(from.is_active());
  }
}

void SwitchResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:expressionService.SwitchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchResponse::CopyFrom(const SwitchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:expressionService.SwitchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchResponse::IsInitialized() const {
  return true;
}

void SwitchResponse::Swap(SwitchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchResponse::InternalSwap(SwitchResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(is_active_, other->is_active_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SwitchResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace expressionService
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::expressionService::ExpressionInfo* Arena::CreateMaybeMessage< ::expressionService::ExpressionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::ExpressionInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::PlayExpressionsRequest* Arena::CreateMaybeMessage< ::expressionService::PlayExpressionsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::PlayExpressionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::PlayExpressionsResponse* Arena::CreateMaybeMessage< ::expressionService::PlayExpressionsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::PlayExpressionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::StopExpressionRequest* Arena::CreateMaybeMessage< ::expressionService::StopExpressionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::StopExpressionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::StopExpressionResponse* Arena::CreateMaybeMessage< ::expressionService::StopExpressionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::StopExpressionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::UploadExpressionFileRequest* Arena::CreateMaybeMessage< ::expressionService::UploadExpressionFileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::UploadExpressionFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::UploadExpressionFileResponse* Arena::CreateMaybeMessage< ::expressionService::UploadExpressionFileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::UploadExpressionFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::ListExpressionsRequest* Arena::CreateMaybeMessage< ::expressionService::ListExpressionsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::ListExpressionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::ListExpressionsResponse* Arena::CreateMaybeMessage< ::expressionService::ListExpressionsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::ListExpressionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::DeleteExpressionsRequest* Arena::CreateMaybeMessage< ::expressionService::DeleteExpressionsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::DeleteExpressionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::DeleteExpressionsResponse* Arena::CreateMaybeMessage< ::expressionService::DeleteExpressionsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::DeleteExpressionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::RenameRequest* Arena::CreateMaybeMessage< ::expressionService::RenameRequest >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::RenameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::RenameResponse* Arena::CreateMaybeMessage< ::expressionService::RenameResponse >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::RenameResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::StateRequest* Arena::CreateMaybeMessage< ::expressionService::StateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::StateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::StateResponse* Arena::CreateMaybeMessage< ::expressionService::StateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::StateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::SwitchRequest* Arena::CreateMaybeMessage< ::expressionService::SwitchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::SwitchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::expressionService::SwitchResponse* Arena::CreateMaybeMessage< ::expressionService::SwitchResponse >(Arena* arena) {
  return Arena::CreateInternal< ::expressionService::SwitchResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
