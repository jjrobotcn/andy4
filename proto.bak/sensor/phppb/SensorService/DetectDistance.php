<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sensor.proto

namespace SensorService;

use UnexpectedValueException;

/**
 * 检测距离
 *
 * Protobuf type <code>sensorService.DetectDistance</code>
 */
class DetectDistance
{
    /**
     * 零值, 不使用
     *
     * Generated from protobuf enum <code>_ZERO_DIS = 0;</code>
     */
    const _ZERO_DIS = 0;
    /**
     * 释放
     *
     * Generated from protobuf enum <code>RELEASE_DIS = 1;</code>
     */
    const RELEASE_DIS = 1;
    /**
     * 近距
     *
     * Generated from protobuf enum <code>CLOSE = 2;</code>
     */
    const CLOSE = 2;
    /**
     * 中距
     *
     * Generated from protobuf enum <code>MEDIUM = 3;</code>
     */
    const MEDIUM = 3;
    /**
     * 远距
     *
     * Generated from protobuf enum <code>LONG = 4;</code>
     */
    const LONG = 4;

    private static $valueToName = [
        self::_ZERO_DIS => '_ZERO_DIS',
        self::RELEASE_DIS => 'RELEASE_DIS',
        self::CLOSE => 'CLOSE',
        self::MEDIUM => 'MEDIUM',
        self::LONG => 'LONG',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

