// source: facedetect.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.faceRecognition.FacePosition', null, global);
goog.exportSymbol('proto.faceRecognition.FromImageRequest', null, global);
goog.exportSymbol('proto.faceRecognition.FromImageResponse', null, global);
goog.exportSymbol('proto.faceRecognition.Gender', null, global);
goog.exportSymbol('proto.faceRecognition.OnFaceDetectRequest', null, global);
goog.exportSymbol('proto.faceRecognition.OnFaceDetectResponse', null, global);
goog.exportSymbol('proto.faceRecognition.OnFaceSetFaceDetectRequest', null, global);
goog.exportSymbol('proto.faceRecognition.OnFaceSetFaceDetectResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.faceRecognition.FacePosition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.faceRecognition.FacePosition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.faceRecognition.FacePosition.displayName = 'proto.faceRecognition.FacePosition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.faceRecognition.FromImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.faceRecognition.FromImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.faceRecognition.FromImageRequest.displayName = 'proto.faceRecognition.FromImageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.faceRecognition.FromImageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.faceRecognition.FromImageResponse.repeatedFields_, null);
};
goog.inherits(proto.faceRecognition.FromImageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.faceRecognition.FromImageResponse.displayName = 'proto.faceRecognition.FromImageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.faceRecognition.OnFaceDetectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.faceRecognition.OnFaceDetectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.faceRecognition.OnFaceDetectRequest.displayName = 'proto.faceRecognition.OnFaceDetectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.faceRecognition.OnFaceDetectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.faceRecognition.OnFaceDetectResponse.repeatedFields_, null);
};
goog.inherits(proto.faceRecognition.OnFaceDetectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.faceRecognition.OnFaceDetectResponse.displayName = 'proto.faceRecognition.OnFaceDetectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.faceRecognition.OnFaceSetFaceDetectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.faceRecognition.OnFaceSetFaceDetectRequest.displayName = 'proto.faceRecognition.OnFaceSetFaceDetectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.faceRecognition.OnFaceSetFaceDetectResponse.repeatedFields_, null);
};
goog.inherits(proto.faceRecognition.OnFaceSetFaceDetectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.faceRecognition.OnFaceSetFaceDetectResponse.displayName = 'proto.faceRecognition.OnFaceSetFaceDetectResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.faceRecognition.FacePosition.prototype.toObject = function(opt_includeInstance) {
  return proto.faceRecognition.FacePosition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.faceRecognition.FacePosition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.faceRecognition.FacePosition.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.faceRecognition.FacePosition}
 */
proto.faceRecognition.FacePosition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.faceRecognition.FacePosition;
  return proto.faceRecognition.FacePosition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.faceRecognition.FacePosition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.faceRecognition.FacePosition}
 */
proto.faceRecognition.FacePosition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.faceRecognition.FacePosition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.faceRecognition.FacePosition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.faceRecognition.FacePosition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.faceRecognition.FacePosition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 x = 1;
 * @return {number}
 */
proto.faceRecognition.FacePosition.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.faceRecognition.FacePosition} returns this
 */
proto.faceRecognition.FacePosition.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 y = 2;
 * @return {number}
 */
proto.faceRecognition.FacePosition.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.faceRecognition.FacePosition} returns this
 */
proto.faceRecognition.FacePosition.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.faceRecognition.FromImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.faceRecognition.FromImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.faceRecognition.FromImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.faceRecognition.FromImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    image: msg.getImage_asB64(),
    withGender: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    withAge: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    withPosition: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    withFaceCropWidth: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.faceRecognition.FromImageRequest}
 */
proto.faceRecognition.FromImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.faceRecognition.FromImageRequest;
  return proto.faceRecognition.FromImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.faceRecognition.FromImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.faceRecognition.FromImageRequest}
 */
proto.faceRecognition.FromImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImage(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithGender(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithAge(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithPosition(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithFaceCropWidth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.faceRecognition.FromImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.faceRecognition.FromImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.faceRecognition.FromImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.faceRecognition.FromImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getWithGender();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getWithAge();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getWithPosition();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getWithFaceCropWidth();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional bytes image = 1;
 * @return {!(string|Uint8Array)}
 */
proto.faceRecognition.FromImageRequest.prototype.getImage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes image = 1;
 * This is a type-conversion wrapper around `getImage()`
 * @return {string}
 */
proto.faceRecognition.FromImageRequest.prototype.getImage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImage()));
};


/**
 * optional bytes image = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImage()`
 * @return {!Uint8Array}
 */
proto.faceRecognition.FromImageRequest.prototype.getImage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.faceRecognition.FromImageRequest} returns this
 */
proto.faceRecognition.FromImageRequest.prototype.setImage = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool with_gender = 2;
 * @return {boolean}
 */
proto.faceRecognition.FromImageRequest.prototype.getWithGender = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.faceRecognition.FromImageRequest} returns this
 */
proto.faceRecognition.FromImageRequest.prototype.setWithGender = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool with_age = 3;
 * @return {boolean}
 */
proto.faceRecognition.FromImageRequest.prototype.getWithAge = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.faceRecognition.FromImageRequest} returns this
 */
proto.faceRecognition.FromImageRequest.prototype.setWithAge = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool with_position = 4;
 * @return {boolean}
 */
proto.faceRecognition.FromImageRequest.prototype.getWithPosition = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.faceRecognition.FromImageRequest} returns this
 */
proto.faceRecognition.FromImageRequest.prototype.setWithPosition = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool with_face_crop_width = 5;
 * @return {boolean}
 */
proto.faceRecognition.FromImageRequest.prototype.getWithFaceCropWidth = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.faceRecognition.FromImageRequest} returns this
 */
proto.faceRecognition.FromImageRequest.prototype.setWithFaceCropWidth = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.faceRecognition.FromImageResponse.repeatedFields_ = [1,2,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.faceRecognition.FromImageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.faceRecognition.FromImageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.faceRecognition.FromImageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.faceRecognition.FromImageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    faceCropsList: msg.getFaceCropsList_asB64(),
    gendersList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    agesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    positionsList: jspb.Message.toObjectList(msg.getPositionsList(),
    proto.faceRecognition.FacePosition.toObject, includeInstance),
    faceCropWidthsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.faceRecognition.FromImageResponse}
 */
proto.faceRecognition.FromImageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.faceRecognition.FromImageResponse;
  return proto.faceRecognition.FromImageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.faceRecognition.FromImageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.faceRecognition.FromImageResponse}
 */
proto.faceRecognition.FromImageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addFaceCrops(value);
      break;
    case 2:
      var value = /** @type {!Array<!proto.faceRecognition.Gender>} */ (reader.readPackedEnum());
      msg.setGendersList(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setAgesList(value);
      break;
    case 4:
      var value = new proto.faceRecognition.FacePosition;
      reader.readMessage(value,proto.faceRecognition.FacePosition.deserializeBinaryFromReader);
      msg.addPositions(value);
      break;
    case 5:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setFaceCropWidthsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.faceRecognition.FromImageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.faceRecognition.FromImageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.faceRecognition.FromImageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.faceRecognition.FromImageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFaceCropsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
  f = message.getGendersList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getAgesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getPositionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.faceRecognition.FacePosition.serializeBinaryToWriter
    );
  }
  f = message.getFaceCropWidthsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      5,
      f
    );
  }
};


/**
 * repeated bytes face_crops = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.faceRecognition.FromImageResponse.prototype.getFaceCropsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes face_crops = 1;
 * This is a type-conversion wrapper around `getFaceCropsList()`
 * @return {!Array<string>}
 */
proto.faceRecognition.FromImageResponse.prototype.getFaceCropsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getFaceCropsList()));
};


/**
 * repeated bytes face_crops = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFaceCropsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.faceRecognition.FromImageResponse.prototype.getFaceCropsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getFaceCropsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.faceRecognition.FromImageResponse} returns this
 */
proto.faceRecognition.FromImageResponse.prototype.setFaceCropsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.FromImageResponse} returns this
 */
proto.faceRecognition.FromImageResponse.prototype.addFaceCrops = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.FromImageResponse} returns this
 */
proto.faceRecognition.FromImageResponse.prototype.clearFaceCropsList = function() {
  return this.setFaceCropsList([]);
};


/**
 * repeated Gender genders = 2;
 * @return {!Array<!proto.faceRecognition.Gender>}
 */
proto.faceRecognition.FromImageResponse.prototype.getGendersList = function() {
  return /** @type {!Array<!proto.faceRecognition.Gender>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.faceRecognition.Gender>} value
 * @return {!proto.faceRecognition.FromImageResponse} returns this
 */
proto.faceRecognition.FromImageResponse.prototype.setGendersList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.faceRecognition.Gender} value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.FromImageResponse} returns this
 */
proto.faceRecognition.FromImageResponse.prototype.addGenders = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.FromImageResponse} returns this
 */
proto.faceRecognition.FromImageResponse.prototype.clearGendersList = function() {
  return this.setGendersList([]);
};


/**
 * repeated int32 ages = 3;
 * @return {!Array<number>}
 */
proto.faceRecognition.FromImageResponse.prototype.getAgesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.faceRecognition.FromImageResponse} returns this
 */
proto.faceRecognition.FromImageResponse.prototype.setAgesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.FromImageResponse} returns this
 */
proto.faceRecognition.FromImageResponse.prototype.addAges = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.FromImageResponse} returns this
 */
proto.faceRecognition.FromImageResponse.prototype.clearAgesList = function() {
  return this.setAgesList([]);
};


/**
 * repeated FacePosition positions = 4;
 * @return {!Array<!proto.faceRecognition.FacePosition>}
 */
proto.faceRecognition.FromImageResponse.prototype.getPositionsList = function() {
  return /** @type{!Array<!proto.faceRecognition.FacePosition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.faceRecognition.FacePosition, 4));
};


/**
 * @param {!Array<!proto.faceRecognition.FacePosition>} value
 * @return {!proto.faceRecognition.FromImageResponse} returns this
*/
proto.faceRecognition.FromImageResponse.prototype.setPositionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.faceRecognition.FacePosition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.FacePosition}
 */
proto.faceRecognition.FromImageResponse.prototype.addPositions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.faceRecognition.FacePosition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.FromImageResponse} returns this
 */
proto.faceRecognition.FromImageResponse.prototype.clearPositionsList = function() {
  return this.setPositionsList([]);
};


/**
 * repeated uint32 face_crop_widths = 5;
 * @return {!Array<number>}
 */
proto.faceRecognition.FromImageResponse.prototype.getFaceCropWidthsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.faceRecognition.FromImageResponse} returns this
 */
proto.faceRecognition.FromImageResponse.prototype.setFaceCropWidthsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.FromImageResponse} returns this
 */
proto.faceRecognition.FromImageResponse.prototype.addFaceCropWidths = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.FromImageResponse} returns this
 */
proto.faceRecognition.FromImageResponse.prototype.clearFaceCropWidthsList = function() {
  return this.setFaceCropWidthsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.faceRecognition.OnFaceDetectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.faceRecognition.OnFaceDetectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.faceRecognition.OnFaceDetectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.faceRecognition.OnFaceDetectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    intervalMillisecond: jspb.Message.getFieldWithDefault(msg, 1, 0),
    withGender: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    withAge: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    withPosition: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    withFaceCropWidth: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.faceRecognition.OnFaceDetectRequest}
 */
proto.faceRecognition.OnFaceDetectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.faceRecognition.OnFaceDetectRequest;
  return proto.faceRecognition.OnFaceDetectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.faceRecognition.OnFaceDetectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.faceRecognition.OnFaceDetectRequest}
 */
proto.faceRecognition.OnFaceDetectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIntervalMillisecond(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithGender(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithAge(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithPosition(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithFaceCropWidth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.faceRecognition.OnFaceDetectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.faceRecognition.OnFaceDetectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.faceRecognition.OnFaceDetectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.faceRecognition.OnFaceDetectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntervalMillisecond();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getWithGender();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getWithAge();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getWithPosition();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getWithFaceCropWidth();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional uint32 interval_millisecond = 1;
 * @return {number}
 */
proto.faceRecognition.OnFaceDetectRequest.prototype.getIntervalMillisecond = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.faceRecognition.OnFaceDetectRequest} returns this
 */
proto.faceRecognition.OnFaceDetectRequest.prototype.setIntervalMillisecond = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool with_gender = 2;
 * @return {boolean}
 */
proto.faceRecognition.OnFaceDetectRequest.prototype.getWithGender = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.faceRecognition.OnFaceDetectRequest} returns this
 */
proto.faceRecognition.OnFaceDetectRequest.prototype.setWithGender = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool with_age = 3;
 * @return {boolean}
 */
proto.faceRecognition.OnFaceDetectRequest.prototype.getWithAge = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.faceRecognition.OnFaceDetectRequest} returns this
 */
proto.faceRecognition.OnFaceDetectRequest.prototype.setWithAge = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool with_position = 4;
 * @return {boolean}
 */
proto.faceRecognition.OnFaceDetectRequest.prototype.getWithPosition = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.faceRecognition.OnFaceDetectRequest} returns this
 */
proto.faceRecognition.OnFaceDetectRequest.prototype.setWithPosition = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool with_face_crop_width = 5;
 * @return {boolean}
 */
proto.faceRecognition.OnFaceDetectRequest.prototype.getWithFaceCropWidth = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.faceRecognition.OnFaceDetectRequest} returns this
 */
proto.faceRecognition.OnFaceDetectRequest.prototype.setWithFaceCropWidth = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.faceRecognition.OnFaceDetectResponse.repeatedFields_ = [1,2,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.faceRecognition.OnFaceDetectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.faceRecognition.OnFaceDetectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.faceRecognition.OnFaceDetectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    faceCropsList: msg.getFaceCropsList_asB64(),
    gendersList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    agesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    positionsList: jspb.Message.toObjectList(msg.getPositionsList(),
    proto.faceRecognition.FacePosition.toObject, includeInstance),
    faceCropWidthsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.faceRecognition.OnFaceDetectResponse}
 */
proto.faceRecognition.OnFaceDetectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.faceRecognition.OnFaceDetectResponse;
  return proto.faceRecognition.OnFaceDetectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.faceRecognition.OnFaceDetectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.faceRecognition.OnFaceDetectResponse}
 */
proto.faceRecognition.OnFaceDetectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addFaceCrops(value);
      break;
    case 2:
      var value = /** @type {!Array<!proto.faceRecognition.Gender>} */ (reader.readPackedEnum());
      msg.setGendersList(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setAgesList(value);
      break;
    case 4:
      var value = new proto.faceRecognition.FacePosition;
      reader.readMessage(value,proto.faceRecognition.FacePosition.deserializeBinaryFromReader);
      msg.addPositions(value);
      break;
    case 5:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setFaceCropWidthsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.faceRecognition.OnFaceDetectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.faceRecognition.OnFaceDetectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.faceRecognition.OnFaceDetectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFaceCropsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
  f = message.getGendersList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getAgesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getPositionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.faceRecognition.FacePosition.serializeBinaryToWriter
    );
  }
  f = message.getFaceCropWidthsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      5,
      f
    );
  }
};


/**
 * repeated bytes face_crops = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.getFaceCropsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes face_crops = 1;
 * This is a type-conversion wrapper around `getFaceCropsList()`
 * @return {!Array<string>}
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.getFaceCropsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getFaceCropsList()));
};


/**
 * repeated bytes face_crops = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFaceCropsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.getFaceCropsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getFaceCropsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.faceRecognition.OnFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.setFaceCropsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.OnFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.addFaceCrops = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.OnFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.clearFaceCropsList = function() {
  return this.setFaceCropsList([]);
};


/**
 * repeated Gender genders = 2;
 * @return {!Array<!proto.faceRecognition.Gender>}
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.getGendersList = function() {
  return /** @type {!Array<!proto.faceRecognition.Gender>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.faceRecognition.Gender>} value
 * @return {!proto.faceRecognition.OnFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.setGendersList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.faceRecognition.Gender} value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.OnFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.addGenders = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.OnFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.clearGendersList = function() {
  return this.setGendersList([]);
};


/**
 * repeated int32 ages = 3;
 * @return {!Array<number>}
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.getAgesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.faceRecognition.OnFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.setAgesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.OnFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.addAges = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.OnFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.clearAgesList = function() {
  return this.setAgesList([]);
};


/**
 * repeated FacePosition positions = 4;
 * @return {!Array<!proto.faceRecognition.FacePosition>}
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.getPositionsList = function() {
  return /** @type{!Array<!proto.faceRecognition.FacePosition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.faceRecognition.FacePosition, 4));
};


/**
 * @param {!Array<!proto.faceRecognition.FacePosition>} value
 * @return {!proto.faceRecognition.OnFaceDetectResponse} returns this
*/
proto.faceRecognition.OnFaceDetectResponse.prototype.setPositionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.faceRecognition.FacePosition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.FacePosition}
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.addPositions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.faceRecognition.FacePosition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.OnFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.clearPositionsList = function() {
  return this.setPositionsList([]);
};


/**
 * repeated uint32 face_crop_widths = 5;
 * @return {!Array<number>}
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.getFaceCropWidthsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.faceRecognition.OnFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.setFaceCropWidthsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.OnFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.addFaceCropWidths = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.OnFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceDetectResponse.prototype.clearFaceCropWidthsList = function() {
  return this.setFaceCropWidthsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.faceRecognition.OnFaceSetFaceDetectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.faceRecognition.OnFaceSetFaceDetectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    faceSetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    withFaceCrop: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    withGender: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    withAge: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    withPosition: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    intervalMillisecond: jspb.Message.getFieldWithDefault(msg, 6, 0),
    confidenceMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    withFaceCropWidth: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectRequest}
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.faceRecognition.OnFaceSetFaceDetectRequest;
  return proto.faceRecognition.OnFaceSetFaceDetectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.faceRecognition.OnFaceSetFaceDetectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectRequest}
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFaceSetId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithFaceCrop(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithGender(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithAge(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithPosition(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIntervalMillisecond(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setConfidenceMin(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithFaceCropWidth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.faceRecognition.OnFaceSetFaceDetectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.faceRecognition.OnFaceSetFaceDetectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFaceSetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWithFaceCrop();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getWithGender();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getWithAge();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getWithPosition();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIntervalMillisecond();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getConfidenceMin();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getWithFaceCropWidth();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string face_set_id = 1;
 * @return {string}
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.getFaceSetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectRequest} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.setFaceSetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool with_face_crop = 2;
 * @return {boolean}
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.getWithFaceCrop = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectRequest} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.setWithFaceCrop = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool with_gender = 3;
 * @return {boolean}
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.getWithGender = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectRequest} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.setWithGender = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool with_age = 4;
 * @return {boolean}
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.getWithAge = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectRequest} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.setWithAge = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool with_position = 5;
 * @return {boolean}
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.getWithPosition = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectRequest} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.setWithPosition = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional uint32 interval_millisecond = 6;
 * @return {number}
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.getIntervalMillisecond = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectRequest} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.setIntervalMillisecond = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional float confidence_min = 7;
 * @return {number}
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.getConfidenceMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectRequest} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.setConfidenceMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional bool with_face_crop_width = 8;
 * @return {boolean}
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.getWithFaceCropWidth = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectRequest} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectRequest.prototype.setWithFaceCropWidth = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.repeatedFields_ = [1,2,3,4,5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.faceRecognition.OnFaceSetFaceDetectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.faceRecognition.OnFaceSetFaceDetectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    confidencesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f,
    faceTokensList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    faceCropsList: msg.getFaceCropsList_asB64(),
    gendersList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    agesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    positionsList: jspb.Message.toObjectList(msg.getPositionsList(),
    proto.faceRecognition.FacePosition.toObject, includeInstance),
    faceCropWidthsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse}
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.faceRecognition.OnFaceSetFaceDetectResponse;
  return proto.faceRecognition.OnFaceSetFaceDetectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.faceRecognition.OnFaceSetFaceDetectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse}
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setConfidencesList(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addFaceTokens(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addFaceCrops(value);
      break;
    case 4:
      var value = /** @type {!Array<!proto.faceRecognition.Gender>} */ (reader.readPackedEnum());
      msg.setGendersList(value);
      break;
    case 5:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setAgesList(value);
      break;
    case 6:
      var value = new proto.faceRecognition.FacePosition;
      reader.readMessage(value,proto.faceRecognition.FacePosition.deserializeBinaryFromReader);
      msg.addPositions(value);
      break;
    case 7:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setFaceCropWidthsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.faceRecognition.OnFaceSetFaceDetectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.faceRecognition.OnFaceSetFaceDetectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfidencesList();
  if (f.length > 0) {
    writer.writePackedFloat(
      1,
      f
    );
  }
  f = message.getFaceTokensList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getFaceCropsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
  f = message.getGendersList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
  f = message.getAgesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      5,
      f
    );
  }
  f = message.getPositionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.faceRecognition.FacePosition.serializeBinaryToWriter
    );
  }
  f = message.getFaceCropWidthsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      7,
      f
    );
  }
};


/**
 * repeated float confidences = 1;
 * @return {!Array<number>}
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.getConfidencesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.setConfidencesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.addConfidences = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.clearConfidencesList = function() {
  return this.setConfidencesList([]);
};


/**
 * repeated string face_tokens = 2;
 * @return {!Array<string>}
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.getFaceTokensList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.setFaceTokensList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.addFaceTokens = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.clearFaceTokensList = function() {
  return this.setFaceTokensList([]);
};


/**
 * repeated bytes face_crops = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.getFaceCropsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes face_crops = 3;
 * This is a type-conversion wrapper around `getFaceCropsList()`
 * @return {!Array<string>}
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.getFaceCropsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getFaceCropsList()));
};


/**
 * repeated bytes face_crops = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFaceCropsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.getFaceCropsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getFaceCropsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.setFaceCropsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.addFaceCrops = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.clearFaceCropsList = function() {
  return this.setFaceCropsList([]);
};


/**
 * repeated Gender genders = 4;
 * @return {!Array<!proto.faceRecognition.Gender>}
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.getGendersList = function() {
  return /** @type {!Array<!proto.faceRecognition.Gender>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.faceRecognition.Gender>} value
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.setGendersList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.faceRecognition.Gender} value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.addGenders = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.clearGendersList = function() {
  return this.setGendersList([]);
};


/**
 * repeated int32 ages = 5;
 * @return {!Array<number>}
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.getAgesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.setAgesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.addAges = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.clearAgesList = function() {
  return this.setAgesList([]);
};


/**
 * repeated FacePosition positions = 6;
 * @return {!Array<!proto.faceRecognition.FacePosition>}
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.getPositionsList = function() {
  return /** @type{!Array<!proto.faceRecognition.FacePosition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.faceRecognition.FacePosition, 6));
};


/**
 * @param {!Array<!proto.faceRecognition.FacePosition>} value
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
*/
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.setPositionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.faceRecognition.FacePosition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.FacePosition}
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.addPositions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.faceRecognition.FacePosition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.clearPositionsList = function() {
  return this.setPositionsList([]);
};


/**
 * repeated uint32 face_crop_widths = 7;
 * @return {!Array<number>}
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.getFaceCropWidthsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.setFaceCropWidthsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.addFaceCropWidths = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.faceRecognition.OnFaceSetFaceDetectResponse} returns this
 */
proto.faceRecognition.OnFaceSetFaceDetectResponse.prototype.clearFaceCropWidthsList = function() {
  return this.setFaceCropWidthsList([]);
};


/**
 * @enum {number}
 */
proto.faceRecognition.Gender = {
  GENDER_UNKNOWN: 0,
  GENDER_MALE: 1,
  GENDER_FEMALE: 2
};

goog.object.extend(exports, proto.faceRecognition);
