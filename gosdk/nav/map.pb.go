// Code generated by protoc-gen-go. DO NOT EDIT.
// source: map.proto

package navpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MapPosition struct {
	// 水平坐标 [0: mapWidth]
	X uint32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	// 垂直坐标 [0: mapHeight]
	Y uint32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	// 角度 水平右方向为0, 顺时针
	//     270
	// 180  ----0
	//     90
	Angle                uint32   `protobuf:"varint,3,opt,name=angle,proto3" json:"angle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MapPosition) Reset()         { *m = MapPosition{} }
func (m *MapPosition) String() string { return proto.CompactTextString(m) }
func (*MapPosition) ProtoMessage()    {}
func (*MapPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_670a3ee274ba020a, []int{0}
}

func (m *MapPosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapPosition.Unmarshal(m, b)
}
func (m *MapPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapPosition.Marshal(b, m, deterministic)
}
func (m *MapPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapPosition.Merge(m, src)
}
func (m *MapPosition) XXX_Size() int {
	return xxx_messageInfo_MapPosition.Size(m)
}
func (m *MapPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_MapPosition.DiscardUnknown(m)
}

var xxx_messageInfo_MapPosition proto.InternalMessageInfo

func (m *MapPosition) GetX() uint32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *MapPosition) GetY() uint32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *MapPosition) GetAngle() uint32 {
	if m != nil {
		return m.Angle
	}
	return 0
}

type GetMapInfoRequest struct {
	// true: 不返回map_image信息
	NoMapImage bool `protobuf:"varint,1,opt,name=no_map_image,json=noMapImage,proto3" json:"no_map_image,omitempty"`
	// true: 不返回map_points信息
	NoMapPoints          bool     `protobuf:"varint,2,opt,name=no_map_points,json=noMapPoints,proto3" json:"no_map_points,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMapInfoRequest) Reset()         { *m = GetMapInfoRequest{} }
func (m *GetMapInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetMapInfoRequest) ProtoMessage()    {}
func (*GetMapInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_670a3ee274ba020a, []int{1}
}

func (m *GetMapInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMapInfoRequest.Unmarshal(m, b)
}
func (m *GetMapInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMapInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetMapInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMapInfoRequest.Merge(m, src)
}
func (m *GetMapInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetMapInfoRequest.Size(m)
}
func (m *GetMapInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMapInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMapInfoRequest proto.InternalMessageInfo

func (m *GetMapInfoRequest) GetNoMapImage() bool {
	if m != nil {
		return m.NoMapImage
	}
	return false
}

func (m *GetMapInfoRequest) GetNoMapPoints() bool {
	if m != nil {
		return m.NoMapPoints
	}
	return false
}

type GetMapInfoResponse struct {
	// 地图id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 地图名
	Name                 string                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MapImage             *GetMapInfoResponse_MapImage   `protobuf:"bytes,3,opt,name=map_image,json=mapImage,proto3" json:"map_image,omitempty"`
	MapPoints            []*GetMapInfoResponse_MapPoint `protobuf:"bytes,4,rep,name=map_points,json=mapPoints,proto3" json:"map_points,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *GetMapInfoResponse) Reset()         { *m = GetMapInfoResponse{} }
func (m *GetMapInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetMapInfoResponse) ProtoMessage()    {}
func (*GetMapInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_670a3ee274ba020a, []int{2}
}

func (m *GetMapInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMapInfoResponse.Unmarshal(m, b)
}
func (m *GetMapInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMapInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetMapInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMapInfoResponse.Merge(m, src)
}
func (m *GetMapInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetMapInfoResponse.Size(m)
}
func (m *GetMapInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMapInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMapInfoResponse proto.InternalMessageInfo

func (m *GetMapInfoResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetMapInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetMapInfoResponse) GetMapImage() *GetMapInfoResponse_MapImage {
	if m != nil {
		return m.MapImage
	}
	return nil
}

func (m *GetMapInfoResponse) GetMapPoints() []*GetMapInfoResponse_MapPoint {
	if m != nil {
		return m.MapPoints
	}
	return nil
}

// 地图图片信息
type GetMapInfoResponse_MapImage struct {
	Width                uint32   `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height               uint32   `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Image                []byte   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMapInfoResponse_MapImage) Reset()         { *m = GetMapInfoResponse_MapImage{} }
func (m *GetMapInfoResponse_MapImage) String() string { return proto.CompactTextString(m) }
func (*GetMapInfoResponse_MapImage) ProtoMessage()    {}
func (*GetMapInfoResponse_MapImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_670a3ee274ba020a, []int{2, 0}
}

func (m *GetMapInfoResponse_MapImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMapInfoResponse_MapImage.Unmarshal(m, b)
}
func (m *GetMapInfoResponse_MapImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMapInfoResponse_MapImage.Marshal(b, m, deterministic)
}
func (m *GetMapInfoResponse_MapImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMapInfoResponse_MapImage.Merge(m, src)
}
func (m *GetMapInfoResponse_MapImage) XXX_Size() int {
	return xxx_messageInfo_GetMapInfoResponse_MapImage.Size(m)
}
func (m *GetMapInfoResponse_MapImage) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMapInfoResponse_MapImage.DiscardUnknown(m)
}

var xxx_messageInfo_GetMapInfoResponse_MapImage proto.InternalMessageInfo

func (m *GetMapInfoResponse_MapImage) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *GetMapInfoResponse_MapImage) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetMapInfoResponse_MapImage) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

// 地图点数据
// 与nav.RoutePoint信息一致，
// 区别为包含地图坐标信息
type GetMapInfoResponse_MapPoint struct {
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Position             *MapPosition `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetMapInfoResponse_MapPoint) Reset()         { *m = GetMapInfoResponse_MapPoint{} }
func (m *GetMapInfoResponse_MapPoint) String() string { return proto.CompactTextString(m) }
func (*GetMapInfoResponse_MapPoint) ProtoMessage()    {}
func (*GetMapInfoResponse_MapPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_670a3ee274ba020a, []int{2, 1}
}

func (m *GetMapInfoResponse_MapPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMapInfoResponse_MapPoint.Unmarshal(m, b)
}
func (m *GetMapInfoResponse_MapPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMapInfoResponse_MapPoint.Marshal(b, m, deterministic)
}
func (m *GetMapInfoResponse_MapPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMapInfoResponse_MapPoint.Merge(m, src)
}
func (m *GetMapInfoResponse_MapPoint) XXX_Size() int {
	return xxx_messageInfo_GetMapInfoResponse_MapPoint.Size(m)
}
func (m *GetMapInfoResponse_MapPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMapInfoResponse_MapPoint.DiscardUnknown(m)
}

var xxx_messageInfo_GetMapInfoResponse_MapPoint proto.InternalMessageInfo

func (m *GetMapInfoResponse_MapPoint) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetMapInfoResponse_MapPoint) GetPosition() *MapPosition {
	if m != nil {
		return m.Position
	}
	return nil
}

type MapPositionStreamRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MapPositionStreamRequest) Reset()         { *m = MapPositionStreamRequest{} }
func (m *MapPositionStreamRequest) String() string { return proto.CompactTextString(m) }
func (*MapPositionStreamRequest) ProtoMessage()    {}
func (*MapPositionStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_670a3ee274ba020a, []int{3}
}

func (m *MapPositionStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapPositionStreamRequest.Unmarshal(m, b)
}
func (m *MapPositionStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapPositionStreamRequest.Marshal(b, m, deterministic)
}
func (m *MapPositionStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapPositionStreamRequest.Merge(m, src)
}
func (m *MapPositionStreamRequest) XXX_Size() int {
	return xxx_messageInfo_MapPositionStreamRequest.Size(m)
}
func (m *MapPositionStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MapPositionStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MapPositionStreamRequest proto.InternalMessageInfo

type MapPositionStreamResponse struct {
	Position             *MapPosition `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MapPositionStreamResponse) Reset()         { *m = MapPositionStreamResponse{} }
func (m *MapPositionStreamResponse) String() string { return proto.CompactTextString(m) }
func (*MapPositionStreamResponse) ProtoMessage()    {}
func (*MapPositionStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_670a3ee274ba020a, []int{4}
}

func (m *MapPositionStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapPositionStreamResponse.Unmarshal(m, b)
}
func (m *MapPositionStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapPositionStreamResponse.Marshal(b, m, deterministic)
}
func (m *MapPositionStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapPositionStreamResponse.Merge(m, src)
}
func (m *MapPositionStreamResponse) XXX_Size() int {
	return xxx_messageInfo_MapPositionStreamResponse.Size(m)
}
func (m *MapPositionStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MapPositionStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MapPositionStreamResponse proto.InternalMessageInfo

func (m *MapPositionStreamResponse) GetPosition() *MapPosition {
	if m != nil {
		return m.Position
	}
	return nil
}

type LocationResetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocationResetRequest) Reset()         { *m = LocationResetRequest{} }
func (m *LocationResetRequest) String() string { return proto.CompactTextString(m) }
func (*LocationResetRequest) ProtoMessage()    {}
func (*LocationResetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_670a3ee274ba020a, []int{5}
}

func (m *LocationResetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocationResetRequest.Unmarshal(m, b)
}
func (m *LocationResetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocationResetRequest.Marshal(b, m, deterministic)
}
func (m *LocationResetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocationResetRequest.Merge(m, src)
}
func (m *LocationResetRequest) XXX_Size() int {
	return xxx_messageInfo_LocationResetRequest.Size(m)
}
func (m *LocationResetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LocationResetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LocationResetRequest proto.InternalMessageInfo

type LocationResetResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocationResetResponse) Reset()         { *m = LocationResetResponse{} }
func (m *LocationResetResponse) String() string { return proto.CompactTextString(m) }
func (*LocationResetResponse) ProtoMessage()    {}
func (*LocationResetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_670a3ee274ba020a, []int{6}
}

func (m *LocationResetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocationResetResponse.Unmarshal(m, b)
}
func (m *LocationResetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocationResetResponse.Marshal(b, m, deterministic)
}
func (m *LocationResetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocationResetResponse.Merge(m, src)
}
func (m *LocationResetResponse) XXX_Size() int {
	return xxx_messageInfo_LocationResetResponse.Size(m)
}
func (m *LocationResetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LocationResetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LocationResetResponse proto.InternalMessageInfo

type UploadMapFileRequest struct {
	// 地图名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 地图文件
	MapFile              []byte   `protobuf:"bytes,2,opt,name=map_file,json=mapFile,proto3" json:"map_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadMapFileRequest) Reset()         { *m = UploadMapFileRequest{} }
func (m *UploadMapFileRequest) String() string { return proto.CompactTextString(m) }
func (*UploadMapFileRequest) ProtoMessage()    {}
func (*UploadMapFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_670a3ee274ba020a, []int{7}
}

func (m *UploadMapFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadMapFileRequest.Unmarshal(m, b)
}
func (m *UploadMapFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadMapFileRequest.Marshal(b, m, deterministic)
}
func (m *UploadMapFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadMapFileRequest.Merge(m, src)
}
func (m *UploadMapFileRequest) XXX_Size() int {
	return xxx_messageInfo_UploadMapFileRequest.Size(m)
}
func (m *UploadMapFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadMapFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadMapFileRequest proto.InternalMessageInfo

func (m *UploadMapFileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UploadMapFileRequest) GetMapFile() []byte {
	if m != nil {
		return m.MapFile
	}
	return nil
}

type UploadMapFileResponse struct {
	// 地图生成id
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadMapFileResponse) Reset()         { *m = UploadMapFileResponse{} }
func (m *UploadMapFileResponse) String() string { return proto.CompactTextString(m) }
func (*UploadMapFileResponse) ProtoMessage()    {}
func (*UploadMapFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_670a3ee274ba020a, []int{8}
}

func (m *UploadMapFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadMapFileResponse.Unmarshal(m, b)
}
func (m *UploadMapFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadMapFileResponse.Marshal(b, m, deterministic)
}
func (m *UploadMapFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadMapFileResponse.Merge(m, src)
}
func (m *UploadMapFileResponse) XXX_Size() int {
	return xxx_messageInfo_UploadMapFileResponse.Size(m)
}
func (m *UploadMapFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadMapFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadMapFileResponse proto.InternalMessageInfo

func (m *UploadMapFileResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DownloadMapFileRequest struct {
	// 下载地图id
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadMapFileRequest) Reset()         { *m = DownloadMapFileRequest{} }
func (m *DownloadMapFileRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadMapFileRequest) ProtoMessage()    {}
func (*DownloadMapFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_670a3ee274ba020a, []int{9}
}

func (m *DownloadMapFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadMapFileRequest.Unmarshal(m, b)
}
func (m *DownloadMapFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadMapFileRequest.Marshal(b, m, deterministic)
}
func (m *DownloadMapFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadMapFileRequest.Merge(m, src)
}
func (m *DownloadMapFileRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadMapFileRequest.Size(m)
}
func (m *DownloadMapFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadMapFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadMapFileRequest proto.InternalMessageInfo

func (m *DownloadMapFileRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DownloadMapFileResponse struct {
	// 地图名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 地图文件
	MapFile              []byte   `protobuf:"bytes,2,opt,name=map_file,json=mapFile,proto3" json:"map_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadMapFileResponse) Reset()         { *m = DownloadMapFileResponse{} }
func (m *DownloadMapFileResponse) String() string { return proto.CompactTextString(m) }
func (*DownloadMapFileResponse) ProtoMessage()    {}
func (*DownloadMapFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_670a3ee274ba020a, []int{10}
}

func (m *DownloadMapFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadMapFileResponse.Unmarshal(m, b)
}
func (m *DownloadMapFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadMapFileResponse.Marshal(b, m, deterministic)
}
func (m *DownloadMapFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadMapFileResponse.Merge(m, src)
}
func (m *DownloadMapFileResponse) XXX_Size() int {
	return xxx_messageInfo_DownloadMapFileResponse.Size(m)
}
func (m *DownloadMapFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadMapFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadMapFileResponse proto.InternalMessageInfo

func (m *DownloadMapFileResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DownloadMapFileResponse) GetMapFile() []byte {
	if m != nil {
		return m.MapFile
	}
	return nil
}

func init() {
	proto.RegisterType((*MapPosition)(nil), "navService.MapPosition")
	proto.RegisterType((*GetMapInfoRequest)(nil), "navService.GetMapInfoRequest")
	proto.RegisterType((*GetMapInfoResponse)(nil), "navService.GetMapInfoResponse")
	proto.RegisterType((*GetMapInfoResponse_MapImage)(nil), "navService.GetMapInfoResponse.MapImage")
	proto.RegisterType((*GetMapInfoResponse_MapPoint)(nil), "navService.GetMapInfoResponse.MapPoint")
	proto.RegisterType((*MapPositionStreamRequest)(nil), "navService.MapPositionStreamRequest")
	proto.RegisterType((*MapPositionStreamResponse)(nil), "navService.MapPositionStreamResponse")
	proto.RegisterType((*LocationResetRequest)(nil), "navService.LocationResetRequest")
	proto.RegisterType((*LocationResetResponse)(nil), "navService.LocationResetResponse")
	proto.RegisterType((*UploadMapFileRequest)(nil), "navService.UploadMapFileRequest")
	proto.RegisterType((*UploadMapFileResponse)(nil), "navService.UploadMapFileResponse")
	proto.RegisterType((*DownloadMapFileRequest)(nil), "navService.DownloadMapFileRequest")
	proto.RegisterType((*DownloadMapFileResponse)(nil), "navService.DownloadMapFileResponse")
}

func init() { proto.RegisterFile("map.proto", fileDescriptor_670a3ee274ba020a) }

var fileDescriptor_670a3ee274ba020a = []byte{
	// 559 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xe1, 0x6e, 0x12, 0x4d,
	0x14, 0xfd, 0x16, 0x4a, 0x3f, 0xb8, 0x80, 0xa6, 0x13, 0x0a, 0x74, 0x13, 0x0d, 0x8e, 0x1a, 0xfa,
	0x6b, 0x63, 0xa8, 0xff, 0x4d, 0x48, 0xad, 0x9a, 0xb8, 0x86, 0x0c, 0x6a, 0x62, 0xff, 0x90, 0x81,
	0x9d, 0xc2, 0x34, 0xec, 0xcc, 0xc8, 0x8e, 0x6d, 0x79, 0x0d, 0x1f, 0xc8, 0x17, 0xf2, 0x25, 0xcc,
	0xcc, 0xee, 0xc2, 0x02, 0x5b, 0xac, 0xff, 0xb8, 0x77, 0xce, 0x9c, 0x73, 0xee, 0x9c, 0xcb, 0x42,
	0x25, 0xa4, 0xca, 0x53, 0x0b, 0xa9, 0x25, 0x02, 0x41, 0x6f, 0x86, 0x6c, 0x71, 0xc3, 0x27, 0x0c,
	0xbf, 0x81, 0xaa, 0x4f, 0xd5, 0x40, 0x46, 0x5c, 0x73, 0x29, 0x50, 0x0d, 0x9c, 0xbb, 0xb6, 0xd3,
	0x71, 0x4e, 0xeb, 0xc4, 0xb9, 0x33, 0xd5, 0xb2, 0x5d, 0x88, 0xab, 0x25, 0x6a, 0x40, 0x89, 0x8a,
	0xe9, 0x9c, 0xb5, 0x8b, 0xb6, 0x13, 0x17, 0xf8, 0x1b, 0x1c, 0xbd, 0x63, 0xda, 0xa7, 0xea, 0x83,
	0xb8, 0x92, 0x84, 0x7d, 0xff, 0xc1, 0x22, 0x8d, 0x3a, 0x50, 0x13, 0x72, 0x14, 0x52, 0x35, 0xe2,
	0x21, 0x9d, 0x32, 0xcb, 0x58, 0x26, 0x20, 0xa4, 0xc1, 0x99, 0x0e, 0xc2, 0x50, 0x4f, 0x10, 0x4a,
	0x72, 0xa1, 0x23, 0x2b, 0x53, 0x26, 0x55, 0x0b, 0x19, 0xd8, 0x16, 0xfe, 0x5d, 0x00, 0x94, 0xe5,
	0x8e, 0x94, 0x14, 0x11, 0x43, 0x8f, 0xa0, 0xc0, 0x03, 0x4b, 0x59, 0x21, 0x05, 0x1e, 0x20, 0x04,
	0x07, 0x82, 0x86, 0xcc, 0x32, 0x54, 0x88, 0xfd, 0x8d, 0xce, 0xed, 0xbc, 0x89, 0xba, 0xf1, 0x5b,
	0xed, 0x75, 0xbd, 0xf5, 0xd8, 0xde, 0x2e, 0xad, 0x97, 0x5a, 0x23, 0xe5, 0x30, 0x35, 0x79, 0x01,
	0x90, 0x71, 0x78, 0xd0, 0x29, 0x3e, 0x8c, 0xc6, 0xda, 0x27, 0xc6, 0x40, 0x3c, 0x88, 0xfb, 0x09,
	0xca, 0xab, 0xc1, 0x1b, 0x50, 0xba, 0xe5, 0x81, 0x9e, 0x25, 0xaf, 0x1c, 0x17, 0xa8, 0x09, 0x87,
	0x33, 0xc6, 0xa7, 0x33, 0x9d, 0x3c, 0x77, 0x52, 0x19, 0xf4, 0x7a, 0x86, 0x1a, 0x89, 0x0b, 0x77,
	0x68, 0xf9, 0x2c, 0xf9, 0x6a, 0x7a, 0x27, 0x33, 0xfd, 0x19, 0x94, 0x55, 0x92, 0xa8, 0xe5, 0xab,
	0xf6, 0x5a, 0x59, 0xd7, 0x99, 0xc0, 0xc9, 0x0a, 0x88, 0x5d, 0x68, 0x67, 0x0e, 0x86, 0x7a, 0xc1,
	0x68, 0x98, 0xe4, 0x89, 0x07, 0x70, 0x92, 0x73, 0x96, 0xe4, 0x91, 0x55, 0x73, 0x1e, 0xaa, 0xd6,
	0x84, 0xc6, 0x47, 0x39, 0xa1, 0xb6, 0xcb, 0x22, 0xa6, 0x53, 0xa5, 0x16, 0x1c, 0x6f, 0xf5, 0x63,
	0x15, 0xfc, 0x16, 0x1a, 0x5f, 0xd4, 0x5c, 0xd2, 0xc0, 0xa7, 0xea, 0x82, 0xcf, 0x59, 0xba, 0x6a,
	0x79, 0xf3, 0x9f, 0x80, 0xc9, 0x70, 0x74, 0xc5, 0xe7, 0xf1, 0x56, 0xd4, 0xc8, 0xff, 0x61, 0x7c,
	0x0b, 0x77, 0xe1, 0x78, 0x8b, 0x26, 0x7f, 0xab, 0xf0, 0x29, 0x34, 0xcf, 0xe5, 0xad, 0xc8, 0x51,
	0xdc, 0x46, 0xbe, 0x87, 0xd6, 0x0e, 0x32, 0x21, 0xfd, 0x37, 0x73, 0xbd, 0x9f, 0x05, 0x28, 0xfa,
	0x54, 0x21, 0x1f, 0x60, 0xbd, 0x59, 0xe8, 0xc9, 0x7d, 0x1b, 0x67, 0xed, 0xb8, 0x4f, 0xf7, 0x2f,
	0x24, 0xfe, 0x0f, 0x05, 0x70, 0xb4, 0x93, 0x1e, 0x7a, 0x71, 0x4f, 0x46, 0x1b, 0xc1, 0xbb, 0x2f,
	0xff, 0x82, 0x4a, 0x35, 0x5e, 0x39, 0xe8, 0x2b, 0xd4, 0x37, 0x92, 0x43, 0x9d, 0xec, 0xdd, 0xbc,
	0xb0, 0xdd, 0x67, 0x7b, 0x10, 0x29, 0x73, 0xef, 0x97, 0x03, 0xe0, 0x53, 0x35, 0xd4, 0x72, 0x61,
	0xfe, 0x3f, 0x9f, 0xa1, 0xbe, 0x11, 0xe0, 0xa6, 0x4c, 0xde, 0x8a, 0x6c, 0xca, 0xe4, 0xa7, 0x7f,
	0x09, 0x8f, 0xb7, 0x32, 0x44, 0x38, 0x7b, 0x2b, 0x7f, 0x15, 0xdc, 0xe7, 0x7b, 0x31, 0x31, 0x77,
	0xbf, 0x0b, 0xad, 0x89, 0x0c, 0xbd, 0xeb, 0xeb, 0x85, 0x1c, 0x4b, 0xed, 0x51, 0x11, 0x2c, 0x5f,
	0x9b, 0x7b, 0x6a, 0xdc, 0x2f, 0x99, 0x27, 0xed, 0x5f, 0x96, 0x6c, 0x35, 0x3e, 0xb4, 0x9f, 0xe7,
	0xb3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x5b, 0xba, 0xa9, 0xab, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MapClient is the client API for Map service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MapClient interface {
	// GetMapInfo 获取地图信息
	GetMapInfo(ctx context.Context, in *GetMapInfoRequest, opts ...grpc.CallOption) (*GetMapInfoResponse, error)
	// MapPositionStream 监听设备的地图定位信息
	MapPositionStream(ctx context.Context, in *MapPositionStreamRequest, opts ...grpc.CallOption) (Map_MapPositionStreamClient, error)
	// LocationReset 重置当前定位
	//
	// 某些情况下此方法返回成功时可能出现实际位置与地图位置不相符，
	// 在有明确参照物附近调用此方法可提高准确定位成功率。
	//
	// 用于发生定位异常/错误状态，重新初始化导航定位
	// 重定位错误：定位状态超时|无地图|UWB错误
	// 重定位超时判断: 默认10s，仅在非错误状态下重置
	LocationReset(ctx context.Context, in *LocationResetRequest, opts ...grpc.CallOption) (*LocationResetResponse, error)
}

type mapClient struct {
	cc grpc.ClientConnInterface
}

func NewMapClient(cc grpc.ClientConnInterface) MapClient {
	return &mapClient{cc}
}

func (c *mapClient) GetMapInfo(ctx context.Context, in *GetMapInfoRequest, opts ...grpc.CallOption) (*GetMapInfoResponse, error) {
	out := new(GetMapInfoResponse)
	err := c.cc.Invoke(ctx, "/navService.Map/GetMapInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapClient) MapPositionStream(ctx context.Context, in *MapPositionStreamRequest, opts ...grpc.CallOption) (Map_MapPositionStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Map_serviceDesc.Streams[0], "/navService.Map/MapPositionStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &mapMapPositionStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Map_MapPositionStreamClient interface {
	Recv() (*MapPositionStreamResponse, error)
	grpc.ClientStream
}

type mapMapPositionStreamClient struct {
	grpc.ClientStream
}

func (x *mapMapPositionStreamClient) Recv() (*MapPositionStreamResponse, error) {
	m := new(MapPositionStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mapClient) LocationReset(ctx context.Context, in *LocationResetRequest, opts ...grpc.CallOption) (*LocationResetResponse, error) {
	out := new(LocationResetResponse)
	err := c.cc.Invoke(ctx, "/navService.Map/LocationReset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MapServer is the server API for Map service.
type MapServer interface {
	// GetMapInfo 获取地图信息
	GetMapInfo(context.Context, *GetMapInfoRequest) (*GetMapInfoResponse, error)
	// MapPositionStream 监听设备的地图定位信息
	MapPositionStream(*MapPositionStreamRequest, Map_MapPositionStreamServer) error
	// LocationReset 重置当前定位
	//
	// 某些情况下此方法返回成功时可能出现实际位置与地图位置不相符，
	// 在有明确参照物附近调用此方法可提高准确定位成功率。
	//
	// 用于发生定位异常/错误状态，重新初始化导航定位
	// 重定位错误：定位状态超时|无地图|UWB错误
	// 重定位超时判断: 默认10s，仅在非错误状态下重置
	LocationReset(context.Context, *LocationResetRequest) (*LocationResetResponse, error)
}

// UnimplementedMapServer can be embedded to have forward compatible implementations.
type UnimplementedMapServer struct {
}

func (*UnimplementedMapServer) GetMapInfo(ctx context.Context, req *GetMapInfoRequest) (*GetMapInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMapInfo not implemented")
}
func (*UnimplementedMapServer) MapPositionStream(req *MapPositionStreamRequest, srv Map_MapPositionStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method MapPositionStream not implemented")
}
func (*UnimplementedMapServer) LocationReset(ctx context.Context, req *LocationResetRequest) (*LocationResetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LocationReset not implemented")
}

func RegisterMapServer(s *grpc.Server, srv MapServer) {
	s.RegisterService(&_Map_serviceDesc, srv)
}

func _Map_GetMapInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMapInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapServer).GetMapInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/navService.Map/GetMapInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapServer).GetMapInfo(ctx, req.(*GetMapInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Map_MapPositionStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MapPositionStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MapServer).MapPositionStream(m, &mapMapPositionStreamServer{stream})
}

type Map_MapPositionStreamServer interface {
	Send(*MapPositionStreamResponse) error
	grpc.ServerStream
}

type mapMapPositionStreamServer struct {
	grpc.ServerStream
}

func (x *mapMapPositionStreamServer) Send(m *MapPositionStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Map_LocationReset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LocationResetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapServer).LocationReset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/navService.Map/LocationReset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapServer).LocationReset(ctx, req.(*LocationResetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Map_serviceDesc = grpc.ServiceDesc{
	ServiceName: "navService.Map",
	HandlerType: (*MapServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMapInfo",
			Handler:    _Map_GetMapInfo_Handler,
		},
		{
			MethodName: "LocationReset",
			Handler:    _Map_LocationReset_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MapPositionStream",
			Handler:       _Map_MapPositionStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "map.proto",
}

// MapStorageClient is the client API for MapStorage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MapStorageClient interface {
	// 上传地图文件
	UploadMapFile(ctx context.Context, in *UploadMapFileRequest, opts ...grpc.CallOption) (*UploadMapFileResponse, error)
	// 下载地图文件
	DownloadMapFile(ctx context.Context, in *DownloadMapFileRequest, opts ...grpc.CallOption) (*DownloadMapFileResponse, error)
}

type mapStorageClient struct {
	cc grpc.ClientConnInterface
}

func NewMapStorageClient(cc grpc.ClientConnInterface) MapStorageClient {
	return &mapStorageClient{cc}
}

func (c *mapStorageClient) UploadMapFile(ctx context.Context, in *UploadMapFileRequest, opts ...grpc.CallOption) (*UploadMapFileResponse, error) {
	out := new(UploadMapFileResponse)
	err := c.cc.Invoke(ctx, "/navService.MapStorage/UploadMapFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapStorageClient) DownloadMapFile(ctx context.Context, in *DownloadMapFileRequest, opts ...grpc.CallOption) (*DownloadMapFileResponse, error) {
	out := new(DownloadMapFileResponse)
	err := c.cc.Invoke(ctx, "/navService.MapStorage/DownloadMapFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MapStorageServer is the server API for MapStorage service.
type MapStorageServer interface {
	// 上传地图文件
	UploadMapFile(context.Context, *UploadMapFileRequest) (*UploadMapFileResponse, error)
	// 下载地图文件
	DownloadMapFile(context.Context, *DownloadMapFileRequest) (*DownloadMapFileResponse, error)
}

// UnimplementedMapStorageServer can be embedded to have forward compatible implementations.
type UnimplementedMapStorageServer struct {
}

func (*UnimplementedMapStorageServer) UploadMapFile(ctx context.Context, req *UploadMapFileRequest) (*UploadMapFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadMapFile not implemented")
}
func (*UnimplementedMapStorageServer) DownloadMapFile(ctx context.Context, req *DownloadMapFileRequest) (*DownloadMapFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadMapFile not implemented")
}

func RegisterMapStorageServer(s *grpc.Server, srv MapStorageServer) {
	s.RegisterService(&_MapStorage_serviceDesc, srv)
}

func _MapStorage_UploadMapFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadMapFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapStorageServer).UploadMapFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/navService.MapStorage/UploadMapFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapStorageServer).UploadMapFile(ctx, req.(*UploadMapFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MapStorage_DownloadMapFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadMapFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapStorageServer).DownloadMapFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/navService.MapStorage/DownloadMapFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapStorageServer).DownloadMapFile(ctx, req.(*DownloadMapFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MapStorage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "navService.MapStorage",
	HandlerType: (*MapStorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UploadMapFile",
			Handler:    _MapStorage_UploadMapFile_Handler,
		},
		{
			MethodName: "DownloadMapFile",
			Handler:    _MapStorage_DownloadMapFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "map.proto",
}
