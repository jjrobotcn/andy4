// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage.proto

package cameraService

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ListDatesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDatesRequest) Reset()         { *m = ListDatesRequest{} }
func (m *ListDatesRequest) String() string { return proto.CompactTextString(m) }
func (*ListDatesRequest) ProtoMessage()    {}
func (*ListDatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{0}
}
func (m *ListDatesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDatesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDatesRequest.Merge(m, src)
}
func (m *ListDatesRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListDatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDatesRequest proto.InternalMessageInfo

type ListDatesResponse struct {
	// 日期 e.g. [2019-01-01, 2019-01-02]
	Dates                []string `protobuf:"bytes,1,rep,name=dates,proto3" json:"dates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDatesResponse) Reset()         { *m = ListDatesResponse{} }
func (m *ListDatesResponse) String() string { return proto.CompactTextString(m) }
func (*ListDatesResponse) ProtoMessage()    {}
func (*ListDatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{1}
}
func (m *ListDatesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDatesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDatesResponse.Merge(m, src)
}
func (m *ListDatesResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListDatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDatesResponse proto.InternalMessageInfo

func (m *ListDatesResponse) GetDates() []string {
	if m != nil {
		return m.Dates
	}
	return nil
}

type ListVideosRequest struct {
	// 开始时间
	// 默认为当日00:00:00
	// 格式 2019-01-02_03:04:05
	Start string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	// 结束时间
	// 默认为当日23:59:59
	// 格式 2019-01-02_03:04:05
	End                  string   `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListVideosRequest) Reset()         { *m = ListVideosRequest{} }
func (m *ListVideosRequest) String() string { return proto.CompactTextString(m) }
func (*ListVideosRequest) ProtoMessage()    {}
func (*ListVideosRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{2}
}
func (m *ListVideosRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListVideosRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListVideosRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListVideosRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVideosRequest.Merge(m, src)
}
func (m *ListVideosRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListVideosRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVideosRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListVideosRequest proto.InternalMessageInfo

func (m *ListVideosRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *ListVideosRequest) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

type ListVideosResponse struct {
	// e.g. [2019-01-01/00:00:00.mp4, 2019-01-01/00:10:00.mp4]
	Videos               []string `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListVideosResponse) Reset()         { *m = ListVideosResponse{} }
func (m *ListVideosResponse) String() string { return proto.CompactTextString(m) }
func (*ListVideosResponse) ProtoMessage()    {}
func (*ListVideosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{3}
}
func (m *ListVideosResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListVideosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListVideosResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListVideosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVideosResponse.Merge(m, src)
}
func (m *ListVideosResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListVideosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVideosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListVideosResponse proto.InternalMessageInfo

func (m *ListVideosResponse) GetVideos() []string {
	if m != nil {
		return m.Videos
	}
	return nil
}

type GetVideoFileRequest struct {
	// e.g. 2019-01-01/00:00:00.mp4
	Video                string   `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVideoFileRequest) Reset()         { *m = GetVideoFileRequest{} }
func (m *GetVideoFileRequest) String() string { return proto.CompactTextString(m) }
func (*GetVideoFileRequest) ProtoMessage()    {}
func (*GetVideoFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{4}
}
func (m *GetVideoFileRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetVideoFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetVideoFileRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetVideoFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVideoFileRequest.Merge(m, src)
}
func (m *GetVideoFileRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetVideoFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVideoFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVideoFileRequest proto.InternalMessageInfo

func (m *GetVideoFileRequest) GetVideo() string {
	if m != nil {
		return m.Video
	}
	return ""
}

type GetVideoFileResponse struct {
	Chunk                []byte   `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVideoFileResponse) Reset()         { *m = GetVideoFileResponse{} }
func (m *GetVideoFileResponse) String() string { return proto.CompactTextString(m) }
func (*GetVideoFileResponse) ProtoMessage()    {}
func (*GetVideoFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{5}
}
func (m *GetVideoFileResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetVideoFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetVideoFileResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetVideoFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVideoFileResponse.Merge(m, src)
}
func (m *GetVideoFileResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetVideoFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVideoFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVideoFileResponse proto.InternalMessageInfo

func (m *GetVideoFileResponse) GetChunk() []byte {
	if m != nil {
		return m.Chunk
	}
	return nil
}

type DeleteVideoFilesRequest struct {
	// e.g. [2019-01-01/00:00:00.mp4, 2019-12-01/22:10:00.mp4]
	Videos               []string `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVideoFilesRequest) Reset()         { *m = DeleteVideoFilesRequest{} }
func (m *DeleteVideoFilesRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVideoFilesRequest) ProtoMessage()    {}
func (*DeleteVideoFilesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{6}
}
func (m *DeleteVideoFilesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteVideoFilesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteVideoFilesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteVideoFilesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVideoFilesRequest.Merge(m, src)
}
func (m *DeleteVideoFilesRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteVideoFilesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVideoFilesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVideoFilesRequest proto.InternalMessageInfo

func (m *DeleteVideoFilesRequest) GetVideos() []string {
	if m != nil {
		return m.Videos
	}
	return nil
}

type DeleteVideoFilesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVideoFilesResponse) Reset()         { *m = DeleteVideoFilesResponse{} }
func (m *DeleteVideoFilesResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteVideoFilesResponse) ProtoMessage()    {}
func (*DeleteVideoFilesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{7}
}
func (m *DeleteVideoFilesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteVideoFilesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteVideoFilesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteVideoFilesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVideoFilesResponse.Merge(m, src)
}
func (m *DeleteVideoFilesResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeleteVideoFilesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVideoFilesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVideoFilesResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ListDatesRequest)(nil), "cameraService.ListDatesRequest")
	proto.RegisterType((*ListDatesResponse)(nil), "cameraService.ListDatesResponse")
	proto.RegisterType((*ListVideosRequest)(nil), "cameraService.ListVideosRequest")
	proto.RegisterType((*ListVideosResponse)(nil), "cameraService.ListVideosResponse")
	proto.RegisterType((*GetVideoFileRequest)(nil), "cameraService.GetVideoFileRequest")
	proto.RegisterType((*GetVideoFileResponse)(nil), "cameraService.GetVideoFileResponse")
	proto.RegisterType((*DeleteVideoFilesRequest)(nil), "cameraService.DeleteVideoFilesRequest")
	proto.RegisterType((*DeleteVideoFilesResponse)(nil), "cameraService.DeleteVideoFilesResponse")
}

func init() { proto.RegisterFile("storage.proto", fileDescriptor_0d2c4ccf1453ffdb) }

var fileDescriptor_0d2c4ccf1453ffdb = []byte{
	// 413 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xd1, 0x8e, 0xd2, 0x40,
	0x14, 0x86, 0x1d, 0x50, 0x0c, 0x27, 0x90, 0xe0, 0x48, 0xb4, 0x69, 0xb0, 0xe2, 0x48, 0x54, 0x90,
	0x50, 0xc1, 0x3b, 0xbc, 0x53, 0xa2, 0x31, 0xf1, 0x0a, 0x12, 0x2f, 0xf4, 0x6a, 0xa4, 0x27, 0xd8,
	0x88, 0x1d, 0xec, 0x0c, 0x3c, 0x80, 0x8f, 0xa0, 0x7b, 0xb9, 0x0f, 0xb4, 0x97, 0x9b, 0xec, 0x0b,
	0x6c, 0xc8, 0x3e, 0xc8, 0xa6, 0x33, 0x03, 0x94, 0x2e, 0x65, 0xef, 0x38, 0x27, 0xdf, 0x3f, 0xff,
	0xcc, 0xff, 0x53, 0xa8, 0x4a, 0x25, 0x62, 0x3e, 0xc3, 0xde, 0x22, 0x16, 0x4a, 0xd0, 0xea, 0x94,
	0xff, 0xc6, 0x98, 0x4f, 0x30, 0x5e, 0x85, 0x53, 0x74, 0x1b, 0x33, 0x21, 0x66, 0x73, 0xf4, 0xf9,
	0x22, 0xf4, 0x79, 0x14, 0x09, 0xc5, 0x55, 0x28, 0x22, 0x69, 0x60, 0x46, 0xa1, 0xf6, 0x25, 0x94,
	0x6a, 0xc4, 0x15, 0xca, 0x31, 0xfe, 0x59, 0xa2, 0x54, 0xac, 0x0d, 0x0f, 0x52, 0x3b, 0xb9, 0x10,
	0x91, 0x44, 0x5a, 0x87, 0x7b, 0x41, 0xb2, 0x70, 0x48, 0xb3, 0xf8, 0xaa, 0x3c, 0x36, 0x03, 0x7b,
	0x67, 0xd0, 0xaf, 0x61, 0x80, 0x62, 0xa3, 0x4f, 0x50, 0xa9, 0x78, 0xac, 0x1c, 0xd2, 0x24, 0x09,
	0xaa, 0x07, 0x5a, 0x83, 0x22, 0x46, 0x81, 0x53, 0xd0, 0xbb, 0xe4, 0x27, 0xeb, 0x02, 0x4d, 0x8b,
	0xad, 0xd1, 0x23, 0x28, 0xad, 0xf4, 0xc6, 0x3a, 0xd9, 0x89, 0xbd, 0x86, 0x87, 0x9f, 0xd0, 0xc0,
	0x1f, 0xc3, 0x39, 0xa6, 0xcc, 0x34, 0xb0, 0x31, 0xd3, 0x03, 0xeb, 0x42, 0x7d, 0x1f, 0xde, 0xbd,
	0x62, 0xfa, 0x73, 0x19, 0xfd, 0xd2, 0x74, 0x65, 0x6c, 0x06, 0xd6, 0x87, 0xc7, 0x23, 0x9c, 0xa3,
	0xc2, 0xad, 0x60, 0xfb, 0x96, 0xbc, 0xdb, 0xb8, 0xe0, 0xdc, 0x94, 0x18, 0x93, 0xc1, 0xbf, 0xbb,
	0x70, 0x7f, 0x62, 0x2a, 0xa1, 0x0a, 0xca, 0xdb, 0x2c, 0xe9, 0xd3, 0xde, 0x5e, 0x35, 0xbd, 0x6c,
	0xf2, 0x6e, 0x33, 0x1f, 0x30, 0x67, 0xb3, 0xd6, 0xdf, 0x8b, 0xab, 0xff, 0x05, 0x8f, 0x36, 0x74,
	0x9f, 0xab, 0x81, 0x6f, 0x04, 0xbe, 0xfd, 0x0b, 0xf8, 0xba, 0x16, 0x7a, 0x4a, 0x00, 0x76, 0xd1,
	0xd2, 0x43, 0xc7, 0xee, 0x55, 0xe6, 0x3e, 0x3b, 0x42, 0x58, 0xe7, 0xcf, 0xda, 0xf9, 0x03, 0x7d,
	0x92, 0xe3, 0x6c, 0x82, 0xf9, 0xc6, 0x98, 0x05, 0xfa, 0x87, 0x81, 0x21, 0xe9, 0xd0, 0xef, 0x50,
	0x49, 0xb7, 0x43, 0x59, 0xc6, 0xfd, 0x40, 0xcf, 0xee, 0xf3, 0xa3, 0x8c, 0xbd, 0xe3, 0x9d, 0x37,
	0x84, 0x9e, 0x10, 0xa8, 0x65, 0xab, 0xa1, 0x2f, 0x32, 0xea, 0x9c, 0xba, 0xdd, 0x97, 0xb7, 0x72,
	0xd6, 0xc9, 0xd7, 0x69, 0xb4, 0x59, 0xeb, 0x68, 0x1a, 0x7e, 0xa0, 0xf5, 0x43, 0xd2, 0x79, 0x5f,
	0x39, 0x5b, 0x7b, 0xe4, 0x7c, 0xed, 0x91, 0xcb, 0xb5, 0x47, 0x7e, 0x94, 0xf4, 0xd7, 0xf7, 0xf6,
	0x3a, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xdd, 0x1f, 0xe7, 0xbb, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StorageClient is the client API for Storage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StorageClient interface {
	// 获取监控视频日期列表
	ListDates(ctx context.Context, in *ListDatesRequest, opts ...grpc.CallOption) (*ListDatesResponse, error)
	// 获取监控视频列表
	ListVideos(ctx context.Context, in *ListVideosRequest, opts ...grpc.CallOption) (*ListVideosResponse, error)
	// 获取监控视频文件
	GetVideoFile(ctx context.Context, in *GetVideoFileRequest, opts ...grpc.CallOption) (Storage_GetVideoFileClient, error)
	// 删除监控视频文件
	DeleteVideoFiles(ctx context.Context, in *DeleteVideoFilesRequest, opts ...grpc.CallOption) (*DeleteVideoFilesResponse, error)
}

type storageClient struct {
	cc *grpc.ClientConn
}

func NewStorageClient(cc *grpc.ClientConn) StorageClient {
	return &storageClient{cc}
}

func (c *storageClient) ListDates(ctx context.Context, in *ListDatesRequest, opts ...grpc.CallOption) (*ListDatesResponse, error) {
	out := new(ListDatesResponse)
	err := c.cc.Invoke(ctx, "/cameraService.Storage/ListDates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) ListVideos(ctx context.Context, in *ListVideosRequest, opts ...grpc.CallOption) (*ListVideosResponse, error) {
	out := new(ListVideosResponse)
	err := c.cc.Invoke(ctx, "/cameraService.Storage/ListVideos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) GetVideoFile(ctx context.Context, in *GetVideoFileRequest, opts ...grpc.CallOption) (Storage_GetVideoFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Storage_serviceDesc.Streams[0], "/cameraService.Storage/GetVideoFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &storageGetVideoFileClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Storage_GetVideoFileClient interface {
	Recv() (*GetVideoFileResponse, error)
	grpc.ClientStream
}

type storageGetVideoFileClient struct {
	grpc.ClientStream
}

func (x *storageGetVideoFileClient) Recv() (*GetVideoFileResponse, error) {
	m := new(GetVideoFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *storageClient) DeleteVideoFiles(ctx context.Context, in *DeleteVideoFilesRequest, opts ...grpc.CallOption) (*DeleteVideoFilesResponse, error) {
	out := new(DeleteVideoFilesResponse)
	err := c.cc.Invoke(ctx, "/cameraService.Storage/DeleteVideoFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StorageServer is the server API for Storage service.
type StorageServer interface {
	// 获取监控视频日期列表
	ListDates(context.Context, *ListDatesRequest) (*ListDatesResponse, error)
	// 获取监控视频列表
	ListVideos(context.Context, *ListVideosRequest) (*ListVideosResponse, error)
	// 获取监控视频文件
	GetVideoFile(*GetVideoFileRequest, Storage_GetVideoFileServer) error
	// 删除监控视频文件
	DeleteVideoFiles(context.Context, *DeleteVideoFilesRequest) (*DeleteVideoFilesResponse, error)
}

// UnimplementedStorageServer can be embedded to have forward compatible implementations.
type UnimplementedStorageServer struct {
}

func (*UnimplementedStorageServer) ListDates(ctx context.Context, req *ListDatesRequest) (*ListDatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDates not implemented")
}
func (*UnimplementedStorageServer) ListVideos(ctx context.Context, req *ListVideosRequest) (*ListVideosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVideos not implemented")
}
func (*UnimplementedStorageServer) GetVideoFile(req *GetVideoFileRequest, srv Storage_GetVideoFileServer) error {
	return status.Errorf(codes.Unimplemented, "method GetVideoFile not implemented")
}
func (*UnimplementedStorageServer) DeleteVideoFiles(ctx context.Context, req *DeleteVideoFilesRequest) (*DeleteVideoFilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVideoFiles not implemented")
}

func RegisterStorageServer(s *grpc.Server, srv StorageServer) {
	s.RegisterService(&_Storage_serviceDesc, srv)
}

func _Storage_ListDates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).ListDates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cameraService.Storage/ListDates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).ListDates(ctx, req.(*ListDatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_ListVideos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVideosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).ListVideos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cameraService.Storage/ListVideos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).ListVideos(ctx, req.(*ListVideosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_GetVideoFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetVideoFileRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StorageServer).GetVideoFile(m, &storageGetVideoFileServer{stream})
}

type Storage_GetVideoFileServer interface {
	Send(*GetVideoFileResponse) error
	grpc.ServerStream
}

type storageGetVideoFileServer struct {
	grpc.ServerStream
}

func (x *storageGetVideoFileServer) Send(m *GetVideoFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Storage_DeleteVideoFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVideoFilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).DeleteVideoFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cameraService.Storage/DeleteVideoFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).DeleteVideoFiles(ctx, req.(*DeleteVideoFilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Storage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cameraService.Storage",
	HandlerType: (*StorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDates",
			Handler:    _Storage_ListDates_Handler,
		},
		{
			MethodName: "ListVideos",
			Handler:    _Storage_ListVideos_Handler,
		},
		{
			MethodName: "DeleteVideoFiles",
			Handler:    _Storage_DeleteVideoFiles_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetVideoFile",
			Handler:       _Storage_GetVideoFile_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "storage.proto",
}

func (m *ListDatesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDatesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListDatesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ListDatesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDatesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListDatesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Dates) > 0 {
		for iNdEx := len(m.Dates) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Dates[iNdEx])
			copy(dAtA[i:], m.Dates[iNdEx])
			i = encodeVarintStorage(dAtA, i, uint64(len(m.Dates[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ListVideosRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListVideosRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListVideosRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.End) > 0 {
		i -= len(m.End)
		copy(dAtA[i:], m.End)
		i = encodeVarintStorage(dAtA, i, uint64(len(m.End)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Start) > 0 {
		i -= len(m.Start)
		copy(dAtA[i:], m.Start)
		i = encodeVarintStorage(dAtA, i, uint64(len(m.Start)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListVideosResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListVideosResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListVideosResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Videos) > 0 {
		for iNdEx := len(m.Videos) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Videos[iNdEx])
			copy(dAtA[i:], m.Videos[iNdEx])
			i = encodeVarintStorage(dAtA, i, uint64(len(m.Videos[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetVideoFileRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetVideoFileRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetVideoFileRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Video) > 0 {
		i -= len(m.Video)
		copy(dAtA[i:], m.Video)
		i = encodeVarintStorage(dAtA, i, uint64(len(m.Video)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetVideoFileResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetVideoFileResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetVideoFileResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Chunk) > 0 {
		i -= len(m.Chunk)
		copy(dAtA[i:], m.Chunk)
		i = encodeVarintStorage(dAtA, i, uint64(len(m.Chunk)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteVideoFilesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteVideoFilesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteVideoFilesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Videos) > 0 {
		for iNdEx := len(m.Videos) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Videos[iNdEx])
			copy(dAtA[i:], m.Videos[iNdEx])
			i = encodeVarintStorage(dAtA, i, uint64(len(m.Videos[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *DeleteVideoFilesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteVideoFilesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteVideoFilesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintStorage(dAtA []byte, offset int, v uint64) int {
	offset -= sovStorage(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ListDatesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDatesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Dates) > 0 {
		for _, s := range m.Dates {
			l = len(s)
			n += 1 + l + sovStorage(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListVideosRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Start)
	if l > 0 {
		n += 1 + l + sovStorage(uint64(l))
	}
	l = len(m.End)
	if l > 0 {
		n += 1 + l + sovStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListVideosResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Videos) > 0 {
		for _, s := range m.Videos {
			l = len(s)
			n += 1 + l + sovStorage(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetVideoFileRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Video)
	if l > 0 {
		n += 1 + l + sovStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetVideoFileResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Chunk)
	if l > 0 {
		n += 1 + l + sovStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteVideoFilesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Videos) > 0 {
		for _, s := range m.Videos {
			l = len(s)
			n += 1 + l + sovStorage(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteVideoFilesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovStorage(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozStorage(x uint64) (n int) {
	return sovStorage(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ListDatesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListDatesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListDatesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDatesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListDatesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListDatesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dates", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Dates = append(m.Dates, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListVideosRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListVideosRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListVideosRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Start = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field End", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.End = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListVideosResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListVideosResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListVideosResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Videos", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Videos = append(m.Videos, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetVideoFileRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetVideoFileRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetVideoFileRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Video = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetVideoFileResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetVideoFileResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetVideoFileResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chunk", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthStorage
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chunk = append(m.Chunk[:0], dAtA[iNdEx:postIndex]...)
			if m.Chunk == nil {
				m.Chunk = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteVideoFilesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteVideoFilesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteVideoFilesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Videos", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Videos = append(m.Videos, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteVideoFilesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteVideoFilesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteVideoFilesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipStorage(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowStorage
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthStorage
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthStorage
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowStorage
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipStorage(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthStorage
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthStorage = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowStorage   = fmt.Errorf("proto: integer overflow")
)
