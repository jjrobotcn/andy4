// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: camera.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CameraService {

  /// <summary>Holder for reflection information generated from camera.proto</summary>
  public static partial class CameraReflection {

    #region Descriptor
    /// <summary>File descriptor for camera.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CameraReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxjYW1lcmEucHJvdG8SDWNhbWVyYVNlcnZpY2UaHGdvb2dsZS9hcGkvYW5u",
            "b3RhdGlvbnMucHJvdG8iFwoVTGl2ZUgyNjRTdHJlYW1SZXF1ZXN0IicKFkxp",
            "dmVIMjY0U3RyZWFtUmVzcG9uc2USDQoFZnJhbWUYASABKAwiFQoTRHZyTGlz",
            "dERhdGVzUmVxdWVzdCIpChREdnJMaXN0RGF0ZXNSZXNwb25zZRIRCglkYXRl",
            "X2xpc3QYASADKAkiSgoTRHZyRGF0ZVZpZGVvc0ZpbHRlchISCgpob3VyX3N0",
            "YXJ0GAEgASgJEhAKCGhvdXJfZW5kGAIgASgJEg0KBWxpbWl0GAMgASgNIlwK",
            "GER2ckxpc3REYXRlVmlkZW9zUmVxdWVzdBIMCgRkYXRlGAEgASgJEjIKBmZp",
            "bHRlchgCIAEoCzIiLmNhbWVyYVNlcnZpY2UuRHZyRGF0ZVZpZGVvc0ZpbHRl",
            "ciIyChlEdnJMaXN0RGF0ZVZpZGVvc1Jlc3BvbnNlEhUKDXZpZGVvc19zdGF0",
            "aWMYASADKAkyjwMKDUNhbWVyYVNlcnZpY2USYQoOTGl2ZUgyNjRTdHJlYW0S",
            "JC5jYW1lcmFTZXJ2aWNlLkxpdmVIMjY0U3RyZWFtUmVxdWVzdBolLmNhbWVy",
            "YVNlcnZpY2UuTGl2ZUgyNjRTdHJlYW1SZXNwb25zZSIAMAESgQEKDER2ckxp",
            "c3REYXRlcxIiLmNhbWVyYVNlcnZpY2UuRHZyTGlzdERhdGVzUmVxdWVzdBoj",
            "LmNhbWVyYVNlcnZpY2UuRHZyTGlzdERhdGVzUmVzcG9uc2UiKILT5JMCIiId",
            "L2FwaS92Mi9jYW1lcmEvZHZyX2xpc3RfZGF0ZXM6ASoSlgEKEUR2ckxpc3RE",
            "YXRlVmlkZW9zEicuY2FtZXJhU2VydmljZS5EdnJMaXN0RGF0ZVZpZGVvc1Jl",
            "cXVlc3QaKC5jYW1lcmFTZXJ2aWNlLkR2ckxpc3REYXRlVmlkZW9zUmVzcG9u",
            "c2UiLoLT5JMCKCIjL2FwaS92Mi9jYW1lcmEvZHZyX2xpc3RfZGF0ZV92aWRl",
            "b3M6ASpiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CameraService.LiveH264StreamRequest), global::CameraService.LiveH264StreamRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CameraService.LiveH264StreamResponse), global::CameraService.LiveH264StreamResponse.Parser, new[]{ "Frame" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CameraService.DvrListDatesRequest), global::CameraService.DvrListDatesRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CameraService.DvrListDatesResponse), global::CameraService.DvrListDatesResponse.Parser, new[]{ "DateList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CameraService.DvrDateVideosFilter), global::CameraService.DvrDateVideosFilter.Parser, new[]{ "HourStart", "HourEnd", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CameraService.DvrListDateVideosRequest), global::CameraService.DvrListDateVideosRequest.Parser, new[]{ "Date", "Filter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CameraService.DvrListDateVideosResponse), global::CameraService.DvrListDateVideosResponse.Parser, new[]{ "VideosStatic" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LiveH264StreamRequest : pb::IMessage<LiveH264StreamRequest> {
    private static readonly pb::MessageParser<LiveH264StreamRequest> _parser = new pb::MessageParser<LiveH264StreamRequest>(() => new LiveH264StreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LiveH264StreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CameraService.CameraReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiveH264StreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiveH264StreamRequest(LiveH264StreamRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiveH264StreamRequest Clone() {
      return new LiveH264StreamRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LiveH264StreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LiveH264StreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LiveH264StreamRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class LiveH264StreamResponse : pb::IMessage<LiveH264StreamResponse> {
    private static readonly pb::MessageParser<LiveH264StreamResponse> _parser = new pb::MessageParser<LiveH264StreamResponse>(() => new LiveH264StreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LiveH264StreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CameraService.CameraReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiveH264StreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiveH264StreamResponse(LiveH264StreamResponse other) : this() {
      frame_ = other.frame_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiveH264StreamResponse Clone() {
      return new LiveH264StreamResponse(this);
    }

    /// <summary>Field number for the "frame" field.</summary>
    public const int FrameFieldNumber = 1;
    private pb::ByteString frame_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Frame {
      get { return frame_; }
      set {
        frame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LiveH264StreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LiveH264StreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Frame != other.Frame) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Frame.Length != 0) hash ^= Frame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Frame.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Frame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Frame.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Frame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LiveH264StreamResponse other) {
      if (other == null) {
        return;
      }
      if (other.Frame.Length != 0) {
        Frame = other.Frame;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Frame = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DvrListDatesRequest : pb::IMessage<DvrListDatesRequest> {
    private static readonly pb::MessageParser<DvrListDatesRequest> _parser = new pb::MessageParser<DvrListDatesRequest>(() => new DvrListDatesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DvrListDatesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CameraService.CameraReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvrListDatesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvrListDatesRequest(DvrListDatesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvrListDatesRequest Clone() {
      return new DvrListDatesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DvrListDatesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DvrListDatesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DvrListDatesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class DvrListDatesResponse : pb::IMessage<DvrListDatesResponse> {
    private static readonly pb::MessageParser<DvrListDatesResponse> _parser = new pb::MessageParser<DvrListDatesResponse>(() => new DvrListDatesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DvrListDatesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CameraService.CameraReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvrListDatesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvrListDatesResponse(DvrListDatesResponse other) : this() {
      dateList_ = other.dateList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvrListDatesResponse Clone() {
      return new DvrListDatesResponse(this);
    }

    /// <summary>Field number for the "date_list" field.</summary>
    public const int DateListFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_dateList_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> dateList_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DateList {
      get { return dateList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DvrListDatesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DvrListDatesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dateList_.Equals(other.dateList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dateList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      dateList_.WriteTo(output, _repeated_dateList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dateList_.CalculateSize(_repeated_dateList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DvrListDatesResponse other) {
      if (other == null) {
        return;
      }
      dateList_.Add(other.dateList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dateList_.AddEntriesFrom(input, _repeated_dateList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 过滤参数
  /// </summary>
  public sealed partial class DvrDateVideosFilter : pb::IMessage<DvrDateVideosFilter> {
    private static readonly pb::MessageParser<DvrDateVideosFilter> _parser = new pb::MessageParser<DvrDateVideosFilter>(() => new DvrDateVideosFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DvrDateVideosFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CameraService.CameraReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvrDateVideosFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvrDateVideosFilter(DvrDateVideosFilter other) : this() {
      hourStart_ = other.hourStart_;
      hourEnd_ = other.hourEnd_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvrDateVideosFilter Clone() {
      return new DvrDateVideosFilter(this);
    }

    /// <summary>Field number for the "hour_start" field.</summary>
    public const int HourStartFieldNumber = 1;
    private string hourStart_ = "";
    /// <summary>
    /// 过滤开始小时, 0为当日零点开始
    /// 大于23将返回参数错误
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HourStart {
      get { return hourStart_; }
      set {
        hourStart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hour_end" field.</summary>
    public const int HourEndFieldNumber = 2;
    private string hourEnd_ = "";
    /// <summary>
    /// 过滤结束小时, 0为当日23点
    /// 小于hour_start或大于23将返回参数错误
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HourEnd {
      get { return hourEnd_; }
      set {
        hourEnd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private uint limit_;
    /// <summary>
    /// 限制视频列表数量, 0为所有
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DvrDateVideosFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DvrDateVideosFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HourStart != other.HourStart) return false;
      if (HourEnd != other.HourEnd) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HourStart.Length != 0) hash ^= HourStart.GetHashCode();
      if (HourEnd.Length != 0) hash ^= HourEnd.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HourStart.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HourStart);
      }
      if (HourEnd.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HourEnd);
      }
      if (Limit != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HourStart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HourStart);
      }
      if (HourEnd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HourEnd);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DvrDateVideosFilter other) {
      if (other == null) {
        return;
      }
      if (other.HourStart.Length != 0) {
        HourStart = other.HourStart;
      }
      if (other.HourEnd.Length != 0) {
        HourEnd = other.HourEnd;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HourStart = input.ReadString();
            break;
          }
          case 18: {
            HourEnd = input.ReadString();
            break;
          }
          case 24: {
            Limit = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DvrListDateVideosRequest : pb::IMessage<DvrListDateVideosRequest> {
    private static readonly pb::MessageParser<DvrListDateVideosRequest> _parser = new pb::MessageParser<DvrListDateVideosRequest>(() => new DvrListDateVideosRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DvrListDateVideosRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CameraService.CameraReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvrListDateVideosRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvrListDateVideosRequest(DvrListDateVideosRequest other) : this() {
      date_ = other.date_;
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvrListDateVideosRequest Clone() {
      return new DvrListDateVideosRequest(this);
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 1;
    private string date_ = "";
    /// <summary>
    /// 请求日期, 根据DvrListDatesResonse中日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Date {
      get { return date_; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    private global::CameraService.DvrDateVideosFilter filter_;
    /// <summary>
    /// 过滤参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CameraService.DvrDateVideosFilter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DvrListDateVideosRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DvrListDateVideosRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Date != other.Date) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Date.Length != 0) hash ^= Date.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Date.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Date);
      }
      if (filter_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Date.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DvrListDateVideosRequest other) {
      if (other == null) {
        return;
      }
      if (other.Date.Length != 0) {
        Date = other.Date;
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          Filter = new global::CameraService.DvrDateVideosFilter();
        }
        Filter.MergeFrom(other.Filter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Date = input.ReadString();
            break;
          }
          case 18: {
            if (filter_ == null) {
              Filter = new global::CameraService.DvrDateVideosFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DvrListDateVideosResponse : pb::IMessage<DvrListDateVideosResponse> {
    private static readonly pb::MessageParser<DvrListDateVideosResponse> _parser = new pb::MessageParser<DvrListDateVideosResponse>(() => new DvrListDateVideosResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DvrListDateVideosResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CameraService.CameraReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvrListDateVideosResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvrListDateVideosResponse(DvrListDateVideosResponse other) : this() {
      videosStatic_ = other.videosStatic_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvrListDateVideosResponse Clone() {
      return new DvrListDateVideosResponse(this);
    }

    /// <summary>Field number for the "videos_static" field.</summary>
    public const int VideosStaticFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_videosStatic_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> videosStatic_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 监控文件静态文件地址列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> VideosStatic {
      get { return videosStatic_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DvrListDateVideosResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DvrListDateVideosResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!videosStatic_.Equals(other.videosStatic_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= videosStatic_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      videosStatic_.WriteTo(output, _repeated_videosStatic_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += videosStatic_.CalculateSize(_repeated_videosStatic_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DvrListDateVideosResponse other) {
      if (other == null) {
        return;
      }
      videosStatic_.Add(other.videosStatic_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            videosStatic_.AddEntriesFrom(input, _repeated_videosStatic_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
