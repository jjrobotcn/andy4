// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: escpos.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Element;
@class ElementRow;
@class HtmlTemplate;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ElementType

/** 内容类型 */
typedef GPB_ENUM(ElementType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ElementType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 文本类型 */
  ElementType_Text = 0,

  /** 图片类型 */
  ElementType_Image = 1,
};

GPBEnumDescriptor *ElementType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ElementType_IsValidValue(int32_t value);

#pragma mark - Enum ElementSize

/** 文字尺寸 */
typedef GPB_ENUM(ElementSize) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ElementSize_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** DEFAULT = NORMAL */
  ElementSize_Default = 0,

  /** 小字体 */
  ElementSize_Small = 1,

  /** 中字体 */
  ElementSize_Normal = 2,

  /** 大字体 */
  ElementSize_Large = 3,

  /** 超大字体 */
  ElementSize_Huge = 4,
};

GPBEnumDescriptor *ElementSize_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ElementSize_IsValidValue(int32_t value);

#pragma mark - Enum ElementAlign

/** 行对齐方式 */
typedef GPB_ENUM(ElementAlign) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ElementAlign_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 左对齐 */
  ElementAlign_Left = 0,

  /** 居中 */
  ElementAlign_Center = 1,

  /** 右对齐 */
  ElementAlign_Right = 2,
};

GPBEnumDescriptor *ElementAlign_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ElementAlign_IsValidValue(int32_t value);

#pragma mark - EscposRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface EscposRoot : GPBRootObject
@end

#pragma mark - PrintRawRequest

typedef GPB_ENUM(PrintRawRequest_FieldNumber) {
  PrintRawRequest_FieldNumber_Raw = 1,
};

/**
 * 打印bytes数据请求
 **/
@interface PrintRawRequest : GPBMessage

/** escpos协议数据 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *raw;

@end

#pragma mark - PrintRawResponse

/**
 * 打印bytes数据结果
 **/
@interface PrintRawResponse : GPBMessage

@end

#pragma mark - Element

typedef GPB_ENUM(Element_FieldNumber) {
  Element_FieldNumber_Etype = 1,
  Element_FieldNumber_ContentText = 2,
  Element_FieldNumber_ContentImage = 3,
  Element_FieldNumber_Size = 4,
  Element_FieldNumber_ImageContentType = 5,
};

/**
 * 打印对象
 **/
@interface Element : GPBMessage

/** 打印类型 */
@property(nonatomic, readwrite) ElementType etype;

/** 文本类型打印内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *contentText;

/** 图片类型打印内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *contentImage;

/** 图片类型， 默认为png (png|jpg|jpeg|bmp) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *imageContentType;

/**
 * 字号
 * 图片类型无效
 **/
@property(nonatomic, readwrite) ElementSize size;

@end

/**
 * Fetches the raw value of a @c Element's @c etype property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Element_Etype_RawValue(Element *message);
/**
 * Sets the raw value of an @c Element's @c etype property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetElement_Etype_RawValue(Element *message, int32_t value);

/**
 * Fetches the raw value of a @c Element's @c size property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Element_Size_RawValue(Element *message);
/**
 * Sets the raw value of an @c Element's @c size property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetElement_Size_RawValue(Element *message, int32_t value);

#pragma mark - ElementRow

typedef GPB_ENUM(ElementRow_FieldNumber) {
  ElementRow_FieldNumber_ElementsArray = 1,
  ElementRow_FieldNumber_Align = 2,
};

/**
 * 单行中打印对象
 **/
@interface ElementRow : GPBMessage

/** 打印对象列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Element*> *elementsArray;
/** The number of items in @c elementsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger elementsArray_Count;

/** 行对齐方式 */
@property(nonatomic, readwrite) ElementAlign align;

@end

/**
 * Fetches the raw value of a @c ElementRow's @c align property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ElementRow_Align_RawValue(ElementRow *message);
/**
 * Sets the raw value of an @c ElementRow's @c align property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetElementRow_Align_RawValue(ElementRow *message, int32_t value);

#pragma mark - PrintElementsRequest

typedef GPB_ENUM(PrintElementsRequest_FieldNumber) {
  PrintElementsRequest_FieldNumber_ElementRowsArray = 1,
  PrintElementsRequest_FieldNumber_Cut = 2,
};

/**
 * 打印对象请求
 **/
@interface PrintElementsRequest : GPBMessage

/** 打印element行对象列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ElementRow*> *elementRowsArray;
/** The number of items in @c elementRowsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger elementRowsArray_Count;

/** 是否切纸 需打印机类型支持 */
@property(nonatomic, readwrite) BOOL cut;

@end

#pragma mark - PrintElementsResponse

/**
 * 打印对象结果
 **/
@interface PrintElementsResponse : GPBMessage

@end

#pragma mark - PrintHtmlTemplateRequest

typedef GPB_ENUM(PrintHtmlTemplateRequest_FieldNumber) {
  PrintHtmlTemplateRequest_FieldNumber_Id_p = 1,
  PrintHtmlTemplateRequest_FieldNumber_Name = 2,
  PrintHtmlTemplateRequest_FieldNumber_Params = 3,
  PrintHtmlTemplateRequest_FieldNumber_Cut = 4,
};

/**
 * html模板打印请求
 **/
@interface PrintHtmlTemplateRequest : GPBMessage

/** 可与name选填 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 可与id选填, 仅匹配首个同名模板 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/**
 * 模板参数, 模板页面中使用"{{}}"符号标记
 * 如: 联系电话: {{tel}}, 参数中使用{"params": {"tel": "123"}}
 * 打印内容则为:  联系电话: 123
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *params;
/** The number of items in @c params without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger params_Count;

/** 是否切纸 需打印机类型支持 */
@property(nonatomic, readwrite) BOOL cut;

@end

#pragma mark - PrintHtmlTemplateResponse

/**
 * html模板打印结果
 **/
@interface PrintHtmlTemplateResponse : GPBMessage

@end

#pragma mark - HtmlTemplate

typedef GPB_ENUM(HtmlTemplate_FieldNumber) {
  HtmlTemplate_FieldNumber_Id_p = 1,
  HtmlTemplate_FieldNumber_Name = 2,
  HtmlTemplate_FieldNumber_Content = 3,
};

/**
 * html模板
 **/
@interface HtmlTemplate : GPBMessage

/**
 * 创建时id将自动生成
 * 修改时根据此id获取模板数据
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/**
 * 创建时传入空值将生成随机名
 * 修改时传入空值将不改变
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 修改时传入空值将不改变 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

#pragma mark - NewHtmlTemplateRequest

typedef GPB_ENUM(NewHtmlTemplateRequest_FieldNumber) {
  NewHtmlTemplateRequest_FieldNumber_HtmlTemplate = 1,
};

/**
 * 创建html模板请求
 **/
@interface NewHtmlTemplateRequest : GPBMessage

/** html模板 */
@property(nonatomic, readwrite, strong, null_resettable) HtmlTemplate *htmlTemplate;
/** Test to see if @c htmlTemplate has been set. */
@property(nonatomic, readwrite) BOOL hasHtmlTemplate;

@end

#pragma mark - NewHtmlTemplateResponse

typedef GPB_ENUM(NewHtmlTemplateResponse_FieldNumber) {
  NewHtmlTemplateResponse_FieldNumber_HtmlTemplate = 1,
};

/**
 * 创建html模板结果
 **/
@interface NewHtmlTemplateResponse : GPBMessage

/** html模板 */
@property(nonatomic, readwrite, strong, null_resettable) HtmlTemplate *htmlTemplate;
/** Test to see if @c htmlTemplate has been set. */
@property(nonatomic, readwrite) BOOL hasHtmlTemplate;

@end

#pragma mark - ListHtmlTemplatesRequest

/**
 * 获取模板列表请求
 **/
@interface ListHtmlTemplatesRequest : GPBMessage

@end

#pragma mark - ListHtmlTemplatesResponse

typedef GPB_ENUM(ListHtmlTemplatesResponse_FieldNumber) {
  ListHtmlTemplatesResponse_FieldNumber_HtmlTemplatesArray = 1,
};

/**
 * 获取模板列表结果
 **/
@interface ListHtmlTemplatesResponse : GPBMessage

/** html模板列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<HtmlTemplate*> *htmlTemplatesArray;
/** The number of items in @c htmlTemplatesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger htmlTemplatesArray_Count;

@end

#pragma mark - GetHtmlTemplateRequest

typedef GPB_ENUM(GetHtmlTemplateRequest_FieldNumber) {
  GetHtmlTemplateRequest_FieldNumber_Id_p = 1,
};

/**
 * 获取指定模板内容请求
 **/
@interface GetHtmlTemplateRequest : GPBMessage

/** html模板id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@end

#pragma mark - GetHtmlTemplateResponse

typedef GPB_ENUM(GetHtmlTemplateResponse_FieldNumber) {
  GetHtmlTemplateResponse_FieldNumber_HtmlTemplate = 1,
};

/**
 * 获取指定模板内容结果
 **/
@interface GetHtmlTemplateResponse : GPBMessage

/** html模板 */
@property(nonatomic, readwrite, strong, null_resettable) HtmlTemplate *htmlTemplate;
/** Test to see if @c htmlTemplate has been set. */
@property(nonatomic, readwrite) BOOL hasHtmlTemplate;

@end

#pragma mark - UpdateHtmlTemplateRequest

typedef GPB_ENUM(UpdateHtmlTemplateRequest_FieldNumber) {
  UpdateHtmlTemplateRequest_FieldNumber_HtmlTemplate = 1,
};

/**
 * 更新html模板请求
 **/
@interface UpdateHtmlTemplateRequest : GPBMessage

/** html模板 */
@property(nonatomic, readwrite, strong, null_resettable) HtmlTemplate *htmlTemplate;
/** Test to see if @c htmlTemplate has been set. */
@property(nonatomic, readwrite) BOOL hasHtmlTemplate;

@end

#pragma mark - UpdateHtmlTemplateResponse

typedef GPB_ENUM(UpdateHtmlTemplateResponse_FieldNumber) {
  UpdateHtmlTemplateResponse_FieldNumber_HtmlTemplate = 1,
};

/**
 * 更新html模板结果
 **/
@interface UpdateHtmlTemplateResponse : GPBMessage

/** html模板 */
@property(nonatomic, readwrite, strong, null_resettable) HtmlTemplate *htmlTemplate;
/** Test to see if @c htmlTemplate has been set. */
@property(nonatomic, readwrite) BOOL hasHtmlTemplate;

@end

#pragma mark - DeleteHtmlTemplatesRequest

typedef GPB_ENUM(DeleteHtmlTemplatesRequest_FieldNumber) {
  DeleteHtmlTemplatesRequest_FieldNumber_HtmlTemplatesIdArray = 1,
};

/**
 * 删除html模板请求
 **/
@interface DeleteHtmlTemplatesRequest : GPBMessage

/** 删除模板id列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *htmlTemplatesIdArray;
/** The number of items in @c htmlTemplatesIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger htmlTemplatesIdArray_Count;

@end

#pragma mark - DeleteHtmlTemplatesResponse

/**
 * 删除html模板结果
 **/
@interface DeleteHtmlTemplatesResponse : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
