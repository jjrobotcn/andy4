syntax = "proto3";

package escposService;

option go_package = "escpospb";

option java_package = "com.jjrobot.andy4.escpospb";
option java_outer_classname = "EscPosServicePB";

service EscPosService {
    // 打印bytes数据
    // 打印模板与打印对象方式不满足业务需求
    // 或希望接入其它已外部业务实现的打印组件时, 可通过此方法直接
    // 传入打印内容
    rpc PrintRaw (PrintRawRequest) returns (PrintRawResponse) {}

    // 打印对象
    rpc PrintElements (PrintElementsRequest) returns (PrintElementsResponse) {}

    // 打印预设的html模板内容
    rpc PrintHtmlTemplate (PrintHtmlTemplateRequest) returns (PrintHtmlTemplateResponse) {}

    // 创建html模板
    rpc NewHtmlTemplate (NewHtmlTemplateRequest) returns (NewHtmlTemplateResponse) {}

    // 获取html模板列表
    rpc ListHtmlTemplates (ListHtmlTemplatesRequest) returns (ListHtmlTemplatesResponse) {}

    // 获取指定html模板内容
    rpc GetHtmlTemplate (GetHtmlTemplateRequest) returns (GetHtmlTemplateResponse) {}

    // 更新html模板
    rpc UpdateHtmlTemplate (UpdateHtmlTemplateRequest) returns (UpdateHtmlTemplateResponse) {}

    // 删除html模板
    rpc DeleteHtmlTemplates (DeleteHtmlTemplatesRequest) returns (DeleteHtmlTemplatesResponse) {}
}

// 打印bytes数据请求
message PrintRawRequest {
    // escpos协议数据
    bytes raw = 1;
}

// 打印bytes数据结果
message PrintRawResponse {
}

// 内容类型
enum ElementType {
    // 文本类型
    TEXT = 0;

    // 图片类型
    IMAGE = 1;
}

// 文字尺寸
enum ElementSize {
    // DEFAULT = NORMAL
    DEFAULT = 0;

    // 小字体
    SMALL = 1;

    // 中字体
    NORMAL = 2;

    // 大字体
    LARGE = 3;

    // 超大字体
    HUGE = 4;
}

// 行对齐方式
enum ElementAlign {
    // 左对齐
    LEFT = 0;

    // 居中
    CENTER = 1;

    // 右对齐
    RIGHT = 2;
}

// 打印对象
message Element {
    // 打印类型
    ElementType etype = 1;

    // 文本类型打印内容
    string content_text = 2;

    // 图片类型打印内容
    bytes content_image = 3;

    // 图片类型， 默认为png (png|jpg|jpeg|bmp)
    string image_content_type = 5;

    // 字号
    // 图片类型无效
    ElementSize size = 4;
}

// 单行中打印对象
message ElementRow {
    // 打印对象列表
    repeated Element elements = 1;

    // 行对齐方式
    ElementAlign align = 2;
}

// 打印对象请求
message PrintElementsRequest {
    // 打印element行对象列表
    repeated ElementRow element_rows = 1;

    // 是否切纸 需打印机类型支持
    bool cut = 2;
}

// 打印对象结果
message PrintElementsResponse {
}

// html模板打印请求
message PrintHtmlTemplateRequest {
    // 可与name选填
    string id = 1;

    // 可与id选填, 仅匹配首个同名模板
    string name = 2;

    // 模板参数, 模板页面中使用"{{}}"符号标记
    // 如: 联系电话: {{tel}}, 参数中使用{"params": {"tel": "123"}}
    // 打印内容则为:  联系电话: 123
    map<string, string> params = 3;

    // 是否切纸 需打印机类型支持
    bool cut = 4;
}

// html模板打印结果
message PrintHtmlTemplateResponse {
}

// html模板
message HtmlTemplate {
    // 创建时id将自动生成
    // 修改时根据此id获取模板数据
    string id = 1;

    // 创建时传入空值将生成随机名
    // 修改时传入空值将不改变
    string name = 2;

    // 修改时传入空值将不改变
    string content = 3;
}

// 创建html模板请求
message NewHtmlTemplateRequest {
    // html模板
    HtmlTemplate html_template = 1;
}

// 创建html模板结果
message NewHtmlTemplateResponse {
    // html模板
    HtmlTemplate html_template = 1;
}

// 获取模板列表请求
message ListHtmlTemplatesRequest {
}

// 获取模板列表结果
message ListHtmlTemplatesResponse {
    // html模板列表
    repeated HtmlTemplate html_templates = 1;
}

// 获取指定模板内容请求
message GetHtmlTemplateRequest {
    // html模板id
    string id = 1;
}

// 获取指定模板内容结果
message GetHtmlTemplateResponse {
    // html模板
    HtmlTemplate html_template = 1;
}

// 更新html模板请求
message UpdateHtmlTemplateRequest {
    // html模板
    HtmlTemplate html_template = 1;
}

// 更新html模板结果
message UpdateHtmlTemplateResponse {
    // html模板
    HtmlTemplate html_template = 1;
}

// 删除html模板请求
message DeleteHtmlTemplatesRequest {
    // 删除模板id列表
    repeated string html_templates_id = 1;
}

// 删除html模板结果
message DeleteHtmlTemplatesResponse {
}