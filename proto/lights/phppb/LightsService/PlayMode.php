<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lights.proto

namespace LightsService;

use UnexpectedValueException;

/**
 * 播放模式
 *
 * Protobuf type <code>lightsService.PlayMode</code>
 */
class PlayMode
{
    /**
     * 预置模式 默认为ALWAYS
     *
     * Generated from protobuf enum <code>PRESET = 0;</code>
     */
    const PRESET = 0;
    /**
     * 常亮模式
     *
     * Generated from protobuf enum <code>ALWAYS = 1;</code>
     */
    const ALWAYS = 1;
    /**
     * 滚动模式
     * [1,2,3] => [2,3,1] => [3,1,2]
     *
     * Generated from protobuf enum <code>MARQUEE = 2;</code>
     */
    const MARQUEE = 2;
    /**
     * 闪烁模式
     * [true, true] => [false, false]
     *
     * Generated from protobuf enum <code>FLASH = 3;</code>
     */
    const FLASH = 3;
    /**
     * 跳动模式
     * [true, false, true, false] => [false, true, false, true]
     *
     * Generated from protobuf enum <code>TICKTOCK = 4;</code>
     */
    const TICKTOCK = 4;

    private static $valueToName = [
        self::PRESET => 'PRESET',
        self::ALWAYS => 'ALWAYS',
        self::MARQUEE => 'MARQUEE',
        self::FLASH => 'FLASH',
        self::TICKTOCK => 'TICKTOCK',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

