syntax = "proto3";

package kvstore;

option go_package = "kvstorepb";

option java_package = "com.jjrobot.andy4.kvstorepb";
option java_outer_classname = "KVStorePB";

// kvstore.KVStore Key-Value键值存储服务
service KVStore {
    // Put 创建kv键值对
    // 若key已存在将更新value值
    rpc Put(PutRequest) returns (PutResponse) {}

    // Get 获取key的value
    // 若key不存在则返回gRPC错误:NotFound
    rpc Get(GetRequest) returns (GetResponse) {}

    // GetPrefix 获取符合key_prefix的多个kv键值对
    rpc GetPrefix(GetPrefixRequest) returns (GetPrefixResponse) {}

    // GetPrefixStream gRPC stream方式获取符合key_prefix的多个kv键值对
    rpc GetPrefixStream(GetPrefixStreamRequest) returns (stream GetPrefixStreamResponse) {}

    // Delete 删除kv键值对
    rpc Delete(DeleteRequest) returns (DeleteResponse) {}
}

message PutRequest {
    string key = 1;
    bytes value = 2;
}

message PutResponse {}

message GetRequest {
    string key = 1;
}

message GetResponse {
    bytes value = 1;
}

message GetPrefixRequest {
    // keys: [not_match, match_1, match_2, match.3, match@4]
    // match: [match_1, match_2, match.3, match@4]
    // match_: [match_1,, match_2]
    // match@: [match@3]
    // match!: []
    string key_prefix = 1;
}

message GetPrefixResponse {
    message Match {
        string key = 1;
        bytes value = 2;
    }
    repeated Match matches = 1;
}

message GetPrefixStreamRequest {
    // keys: [not_match, match_1, match_2, match.3, match@4]
    // match: [match_1, match_2, match.3, match@4]
    // match_: [match_1,, match_2]
    // match@: [match@3]
    // match!: []
    string key_prefix = 1;
}

message GetPrefixStreamResponse {
    string key = 1;
    bytes value = 2;
}

message DeleteRequest {
    string key = 1;
}

message DeleteResponse {}
