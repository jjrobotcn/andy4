// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sensor.proto

package sensorService

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 检测方向
type DetectDirection int32

const (
	DetectDirection__ZERO_DIR   DetectDirection = 0
	DetectDirection_RELEASE_DIR DetectDirection = 1
	DetectDirection_LEFT        DetectDirection = 2
	DetectDirection_CENTER      DetectDirection = 3
	DetectDirection_RIGHT       DetectDirection = 4
)

var DetectDirection_name = map[int32]string{
	0: "_ZERO_DIR",
	1: "RELEASE_DIR",
	2: "LEFT",
	3: "CENTER",
	4: "RIGHT",
}

var DetectDirection_value = map[string]int32{
	"_ZERO_DIR":   0,
	"RELEASE_DIR": 1,
	"LEFT":        2,
	"CENTER":      3,
	"RIGHT":       4,
}

func (x DetectDirection) String() string {
	return proto.EnumName(DetectDirection_name, int32(x))
}

func (DetectDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c749425f02243e2d, []int{0}
}

// 检测距离
type DetectDistance int32

const (
	DetectDistance__ZERO_DIS   DetectDistance = 0
	DetectDistance_RELEASE_DIS DetectDistance = 1
	DetectDistance_CLOSE       DetectDistance = 2
	DetectDistance_MEDIUM      DetectDistance = 3
	DetectDistance_LONG        DetectDistance = 4
)

var DetectDistance_name = map[int32]string{
	0: "_ZERO_DIS",
	1: "RELEASE_DIS",
	2: "CLOSE",
	3: "MEDIUM",
	4: "LONG",
}

var DetectDistance_value = map[string]int32{
	"_ZERO_DIS":   0,
	"RELEASE_DIS": 1,
	"CLOSE":       2,
	"MEDIUM":      3,
	"LONG":        4,
}

func (x DetectDistance) String() string {
	return proto.EnumName(DetectDistance_name, int32(x))
}

func (DetectDistance) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c749425f02243e2d, []int{1}
}

type DataType int32

const (
	DataType_UNKNOWN DataType = 0
	DataType_OBS     DataType = 1
	DataType_AGV     DataType = 2
	DataType_TOUCH   DataType = 4
)

var DataType_name = map[int32]string{
	0: "UNKNOWN",
	1: "OBS",
	2: "AGV",
	4: "TOUCH",
}

var DataType_value = map[string]int32{
	"UNKNOWN": 0,
	"OBS":     1,
	"AGV":     2,
	"TOUCH":   4,
}

func (x DataType) String() string {
	return proto.EnumName(DataType_name, int32(x))
}

func (DataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c749425f02243e2d, []int{2}
}

type GetDetectRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDetectRequest) Reset()         { *m = GetDetectRequest{} }
func (m *GetDetectRequest) String() string { return proto.CompactTextString(m) }
func (*GetDetectRequest) ProtoMessage()    {}
func (*GetDetectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c749425f02243e2d, []int{0}
}

func (m *GetDetectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDetectRequest.Unmarshal(m, b)
}
func (m *GetDetectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDetectRequest.Marshal(b, m, deterministic)
}
func (m *GetDetectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDetectRequest.Merge(m, src)
}
func (m *GetDetectRequest) XXX_Size() int {
	return xxx_messageInfo_GetDetectRequest.Size(m)
}
func (m *GetDetectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDetectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDetectRequest proto.InternalMessageInfo

// 传感器状态流数据
// stype: 数据类型
type GetDetectResponse struct {
	Direction            DetectDirection `protobuf:"varint,1,opt,name=direction,proto3,enum=sensorService.DetectDirection" json:"direction,omitempty"`
	Distance             DetectDistance  `protobuf:"varint,2,opt,name=distance,proto3,enum=sensorService.DetectDistance" json:"distance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetDetectResponse) Reset()         { *m = GetDetectResponse{} }
func (m *GetDetectResponse) String() string { return proto.CompactTextString(m) }
func (*GetDetectResponse) ProtoMessage()    {}
func (*GetDetectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c749425f02243e2d, []int{1}
}

func (m *GetDetectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDetectResponse.Unmarshal(m, b)
}
func (m *GetDetectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDetectResponse.Marshal(b, m, deterministic)
}
func (m *GetDetectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDetectResponse.Merge(m, src)
}
func (m *GetDetectResponse) XXX_Size() int {
	return xxx_messageInfo_GetDetectResponse.Size(m)
}
func (m *GetDetectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDetectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDetectResponse proto.InternalMessageInfo

func (m *GetDetectResponse) GetDirection() DetectDirection {
	if m != nil {
		return m.Direction
	}
	return DetectDirection__ZERO_DIR
}

func (m *GetDetectResponse) GetDistance() DetectDistance {
	if m != nil {
		return m.Distance
	}
	return DetectDistance__ZERO_DIS
}

type GetMotionInductionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMotionInductionRequest) Reset()         { *m = GetMotionInductionRequest{} }
func (m *GetMotionInductionRequest) String() string { return proto.CompactTextString(m) }
func (*GetMotionInductionRequest) ProtoMessage()    {}
func (*GetMotionInductionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c749425f02243e2d, []int{2}
}

func (m *GetMotionInductionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMotionInductionRequest.Unmarshal(m, b)
}
func (m *GetMotionInductionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMotionInductionRequest.Marshal(b, m, deterministic)
}
func (m *GetMotionInductionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMotionInductionRequest.Merge(m, src)
}
func (m *GetMotionInductionRequest) XXX_Size() int {
	return xxx_messageInfo_GetMotionInductionRequest.Size(m)
}
func (m *GetMotionInductionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMotionInductionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMotionInductionRequest proto.InternalMessageInfo

type GetMotionInductionResponse struct {
	Left                 bool     `protobuf:"varint,1,opt,name=left,proto3" json:"left,omitempty"`
	Right                bool     `protobuf:"varint,2,opt,name=right,proto3" json:"right,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMotionInductionResponse) Reset()         { *m = GetMotionInductionResponse{} }
func (m *GetMotionInductionResponse) String() string { return proto.CompactTextString(m) }
func (*GetMotionInductionResponse) ProtoMessage()    {}
func (*GetMotionInductionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c749425f02243e2d, []int{3}
}

func (m *GetMotionInductionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMotionInductionResponse.Unmarshal(m, b)
}
func (m *GetMotionInductionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMotionInductionResponse.Marshal(b, m, deterministic)
}
func (m *GetMotionInductionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMotionInductionResponse.Merge(m, src)
}
func (m *GetMotionInductionResponse) XXX_Size() int {
	return xxx_messageInfo_GetMotionInductionResponse.Size(m)
}
func (m *GetMotionInductionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMotionInductionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMotionInductionResponse proto.InternalMessageInfo

func (m *GetMotionInductionResponse) GetLeft() bool {
	if m != nil {
		return m.Left
	}
	return false
}

func (m *GetMotionInductionResponse) GetRight() bool {
	if m != nil {
		return m.Right
	}
	return false
}

type GetTouchRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTouchRequest) Reset()         { *m = GetTouchRequest{} }
func (m *GetTouchRequest) String() string { return proto.CompactTextString(m) }
func (*GetTouchRequest) ProtoMessage()    {}
func (*GetTouchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c749425f02243e2d, []int{4}
}

func (m *GetTouchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTouchRequest.Unmarshal(m, b)
}
func (m *GetTouchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTouchRequest.Marshal(b, m, deterministic)
}
func (m *GetTouchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTouchRequest.Merge(m, src)
}
func (m *GetTouchRequest) XXX_Size() int {
	return xxx_messageInfo_GetTouchRequest.Size(m)
}
func (m *GetTouchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTouchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTouchRequest proto.InternalMessageInfo

// 触摸状态流数据
type GetTouchResponse struct {
	HandLeft             bool     `protobuf:"varint,1,opt,name=hand_left,json=handLeft,proto3" json:"hand_left,omitempty"`
	HandRight            bool     `protobuf:"varint,2,opt,name=hand_right,json=handRight,proto3" json:"hand_right,omitempty"`
	Head                 bool     `protobuf:"varint,3,opt,name=head,proto3" json:"head,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTouchResponse) Reset()         { *m = GetTouchResponse{} }
func (m *GetTouchResponse) String() string { return proto.CompactTextString(m) }
func (*GetTouchResponse) ProtoMessage()    {}
func (*GetTouchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c749425f02243e2d, []int{5}
}

func (m *GetTouchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTouchResponse.Unmarshal(m, b)
}
func (m *GetTouchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTouchResponse.Marshal(b, m, deterministic)
}
func (m *GetTouchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTouchResponse.Merge(m, src)
}
func (m *GetTouchResponse) XXX_Size() int {
	return xxx_messageInfo_GetTouchResponse.Size(m)
}
func (m *GetTouchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTouchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTouchResponse proto.InternalMessageInfo

func (m *GetTouchResponse) GetHandLeft() bool {
	if m != nil {
		return m.HandLeft
	}
	return false
}

func (m *GetTouchResponse) GetHandRight() bool {
	if m != nil {
		return m.HandRight
	}
	return false
}

func (m *GetTouchResponse) GetHead() bool {
	if m != nil {
		return m.Head
	}
	return false
}

// 避障传感器数据
// e.g. {"topRight: 30", "bottomMiddle": 10}
// *topRight等key非最终使用, 仅作为示例
type DataObs struct {
	Data                 map[string]int32 `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DataObs) Reset()         { *m = DataObs{} }
func (m *DataObs) String() string { return proto.CompactTextString(m) }
func (*DataObs) ProtoMessage()    {}
func (*DataObs) Descriptor() ([]byte, []int) {
	return fileDescriptor_c749425f02243e2d, []int{6}
}

func (m *DataObs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataObs.Unmarshal(m, b)
}
func (m *DataObs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataObs.Marshal(b, m, deterministic)
}
func (m *DataObs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataObs.Merge(m, src)
}
func (m *DataObs) XXX_Size() int {
	return xxx_messageInfo_DataObs.Size(m)
}
func (m *DataObs) XXX_DiscardUnknown() {
	xxx_messageInfo_DataObs.DiscardUnknown(m)
}

var xxx_messageInfo_DataObs proto.InternalMessageInfo

func (m *DataObs) GetData() map[string]int32 {
	if m != nil {
		return m.Data
	}
	return nil
}

// agv数据
// card_id: 感应卡点id
// data: 是否为激活状态列表
type DataAgv struct {
	CardId               string   `protobuf:"bytes,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	Data                 []bool   `protobuf:"varint,2,rep,packed,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataAgv) Reset()         { *m = DataAgv{} }
func (m *DataAgv) String() string { return proto.CompactTextString(m) }
func (*DataAgv) ProtoMessage()    {}
func (*DataAgv) Descriptor() ([]byte, []int) {
	return fileDescriptor_c749425f02243e2d, []int{7}
}

func (m *DataAgv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataAgv.Unmarshal(m, b)
}
func (m *DataAgv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataAgv.Marshal(b, m, deterministic)
}
func (m *DataAgv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataAgv.Merge(m, src)
}
func (m *DataAgv) XXX_Size() int {
	return xxx_messageInfo_DataAgv.Size(m)
}
func (m *DataAgv) XXX_DiscardUnknown() {
	xxx_messageInfo_DataAgv.DiscardUnknown(m)
}

var xxx_messageInfo_DataAgv proto.InternalMessageInfo

func (m *DataAgv) GetCardId() string {
	if m != nil {
		return m.CardId
	}
	return ""
}

func (m *DataAgv) GetData() []bool {
	if m != nil {
		return m.Data
	}
	return nil
}

// 触摸数据
// e.g. {hand_left: false, hand_right: true, head: true}
type DataTouch struct {
	Touched              map[string]bool `protobuf:"bytes,1,rep,name=touched,proto3" json:"touched,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DataTouch) Reset()         { *m = DataTouch{} }
func (m *DataTouch) String() string { return proto.CompactTextString(m) }
func (*DataTouch) ProtoMessage()    {}
func (*DataTouch) Descriptor() ([]byte, []int) {
	return fileDescriptor_c749425f02243e2d, []int{8}
}

func (m *DataTouch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataTouch.Unmarshal(m, b)
}
func (m *DataTouch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataTouch.Marshal(b, m, deterministic)
}
func (m *DataTouch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataTouch.Merge(m, src)
}
func (m *DataTouch) XXX_Size() int {
	return xxx_messageInfo_DataTouch.Size(m)
}
func (m *DataTouch) XXX_DiscardUnknown() {
	xxx_messageInfo_DataTouch.DiscardUnknown(m)
}

var xxx_messageInfo_DataTouch proto.InternalMessageInfo

func (m *DataTouch) GetTouched() map[string]bool {
	if m != nil {
		return m.Touched
	}
	return nil
}

// 使用器数据更新请求
// dtype: 传感器更新数据类型
type UpdateReq struct {
	Dtype                DataType   `protobuf:"varint,1,opt,name=dtype,proto3,enum=sensorService.DataType" json:"dtype,omitempty"`
	Obs                  *DataObs   `protobuf:"bytes,2,opt,name=obs,proto3" json:"obs,omitempty"`
	Agv                  *DataAgv   `protobuf:"bytes,3,opt,name=agv,proto3" json:"agv,omitempty"`
	Touch                *DataTouch `protobuf:"bytes,5,opt,name=touch,proto3" json:"touch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateReq) Reset()         { *m = UpdateReq{} }
func (m *UpdateReq) String() string { return proto.CompactTextString(m) }
func (*UpdateReq) ProtoMessage()    {}
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c749425f02243e2d, []int{9}
}

func (m *UpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReq.Unmarshal(m, b)
}
func (m *UpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReq.Marshal(b, m, deterministic)
}
func (m *UpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReq.Merge(m, src)
}
func (m *UpdateReq) XXX_Size() int {
	return xxx_messageInfo_UpdateReq.Size(m)
}
func (m *UpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReq proto.InternalMessageInfo

func (m *UpdateReq) GetDtype() DataType {
	if m != nil {
		return m.Dtype
	}
	return DataType_UNKNOWN
}

func (m *UpdateReq) GetObs() *DataObs {
	if m != nil {
		return m.Obs
	}
	return nil
}

func (m *UpdateReq) GetAgv() *DataAgv {
	if m != nil {
		return m.Agv
	}
	return nil
}

func (m *UpdateReq) GetTouch() *DataTouch {
	if m != nil {
		return m.Touch
	}
	return nil
}

type RawRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawRequest) Reset()         { *m = RawRequest{} }
func (m *RawRequest) String() string { return proto.CompactTextString(m) }
func (*RawRequest) ProtoMessage()    {}
func (*RawRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c749425f02243e2d, []int{10}
}

func (m *RawRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawRequest.Unmarshal(m, b)
}
func (m *RawRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawRequest.Marshal(b, m, deterministic)
}
func (m *RawRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawRequest.Merge(m, src)
}
func (m *RawRequest) XXX_Size() int {
	return xxx_messageInfo_RawRequest.Size(m)
}
func (m *RawRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RawRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RawRequest proto.InternalMessageInfo

// 原始数据返回
// dtype: 传感器更新数据类型
type RawResponse struct {
	Dtype                DataType   `protobuf:"varint,1,opt,name=dtype,proto3,enum=sensorService.DataType" json:"dtype,omitempty"`
	Obs                  *DataObs   `protobuf:"bytes,2,opt,name=obs,proto3" json:"obs,omitempty"`
	Agv                  *DataAgv   `protobuf:"bytes,3,opt,name=agv,proto3" json:"agv,omitempty"`
	Touch                *DataTouch `protobuf:"bytes,5,opt,name=touch,proto3" json:"touch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RawResponse) Reset()         { *m = RawResponse{} }
func (m *RawResponse) String() string { return proto.CompactTextString(m) }
func (*RawResponse) ProtoMessage()    {}
func (*RawResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c749425f02243e2d, []int{11}
}

func (m *RawResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawResponse.Unmarshal(m, b)
}
func (m *RawResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawResponse.Marshal(b, m, deterministic)
}
func (m *RawResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawResponse.Merge(m, src)
}
func (m *RawResponse) XXX_Size() int {
	return xxx_messageInfo_RawResponse.Size(m)
}
func (m *RawResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RawResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RawResponse proto.InternalMessageInfo

func (m *RawResponse) GetDtype() DataType {
	if m != nil {
		return m.Dtype
	}
	return DataType_UNKNOWN
}

func (m *RawResponse) GetObs() *DataObs {
	if m != nil {
		return m.Obs
	}
	return nil
}

func (m *RawResponse) GetAgv() *DataAgv {
	if m != nil {
		return m.Agv
	}
	return nil
}

func (m *RawResponse) GetTouch() *DataTouch {
	if m != nil {
		return m.Touch
	}
	return nil
}

func init() {
	proto.RegisterEnum("sensorService.DetectDirection", DetectDirection_name, DetectDirection_value)
	proto.RegisterEnum("sensorService.DetectDistance", DetectDistance_name, DetectDistance_value)
	proto.RegisterEnum("sensorService.DataType", DataType_name, DataType_value)
	proto.RegisterType((*GetDetectRequest)(nil), "sensorService.GetDetectRequest")
	proto.RegisterType((*GetDetectResponse)(nil), "sensorService.GetDetectResponse")
	proto.RegisterType((*GetMotionInductionRequest)(nil), "sensorService.GetMotionInductionRequest")
	proto.RegisterType((*GetMotionInductionResponse)(nil), "sensorService.GetMotionInductionResponse")
	proto.RegisterType((*GetTouchRequest)(nil), "sensorService.GetTouchRequest")
	proto.RegisterType((*GetTouchResponse)(nil), "sensorService.GetTouchResponse")
	proto.RegisterType((*DataObs)(nil), "sensorService.DataObs")
	proto.RegisterMapType((map[string]int32)(nil), "sensorService.DataObs.DataEntry")
	proto.RegisterType((*DataAgv)(nil), "sensorService.DataAgv")
	proto.RegisterType((*DataTouch)(nil), "sensorService.DataTouch")
	proto.RegisterMapType((map[string]bool)(nil), "sensorService.DataTouch.TouchedEntry")
	proto.RegisterType((*UpdateReq)(nil), "sensorService.UpdateReq")
	proto.RegisterType((*RawRequest)(nil), "sensorService.RawRequest")
	proto.RegisterType((*RawResponse)(nil), "sensorService.RawResponse")
}

func init() { proto.RegisterFile("sensor.proto", fileDescriptor_c749425f02243e2d) }

var fileDescriptor_c749425f02243e2d = []byte{
	// 706 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x55, 0xdd, 0x6e, 0xda, 0x4a,
	0x10, 0x8e, 0x31, 0x04, 0x7b, 0xc8, 0x8f, 0x33, 0x3a, 0x3a, 0x21, 0x8e, 0x92, 0x20, 0x4b, 0x47,
	0xe2, 0x44, 0x3a, 0xe8, 0x88, 0x46, 0xfd, 0x89, 0x2a, 0xb5, 0x34, 0x38, 0x04, 0x95, 0x60, 0x75,
	0x81, 0x56, 0xea, 0x0d, 0x32, 0x78, 0x0b, 0xa8, 0x29, 0x26, 0xf6, 0x42, 0xca, 0x1b, 0xf4, 0xa2,
	0xcf, 0x54, 0xf5, 0x65, 0xfa, 0x1e, 0xd5, 0xee, 0x9a, 0xc4, 0x21, 0x46, 0xed, 0x6d, 0xaf, 0xd8,
	0x99, 0xf9, 0xbe, 0x6f, 0xbf, 0x19, 0xaf, 0x06, 0xd8, 0x08, 0xe9, 0x38, 0xf4, 0x83, 0xd2, 0x24,
	0xf0, 0x99, 0x8f, 0x9b, 0x32, 0x6a, 0xd1, 0x60, 0x36, 0xea, 0x53, 0x0b, 0xc1, 0xa8, 0x51, 0x56,
	0xa5, 0x8c, 0xf6, 0x19, 0xa1, 0xd7, 0x53, 0x1a, 0x32, 0xeb, 0xab, 0x02, 0x3b, 0xb1, 0x64, 0x38,
	0xf1, 0xc7, 0x21, 0xc5, 0xe7, 0xa0, 0x7b, 0xa3, 0x80, 0xf6, 0xd9, 0xc8, 0x1f, 0xe7, 0x95, 0x82,
	0x52, 0xdc, 0x2a, 0x1f, 0x96, 0xee, 0x89, 0x95, 0x24, 0xa3, 0xba, 0x40, 0x91, 0x3b, 0x02, 0x3e,
	0x03, 0xcd, 0x1b, 0x85, 0xcc, 0x1d, 0xf7, 0x69, 0x3e, 0x25, 0xc8, 0x07, 0x2b, 0xc8, 0x12, 0x44,
	0x6e, 0xe1, 0xd6, 0x3e, 0xec, 0xd5, 0x28, 0xbb, 0xf4, 0xb9, 0x4e, 0x7d, 0xec, 0x4d, 0xa5, 0x76,
	0xe4, 0xf5, 0x1c, 0xcc, 0xa4, 0x62, 0xe4, 0x19, 0x21, 0x7d, 0x45, 0x3f, 0x30, 0x61, 0x57, 0x23,
	0xe2, 0x8c, 0x7f, 0x41, 0x26, 0x18, 0x0d, 0x86, 0x4c, 0xd8, 0xd0, 0x88, 0x0c, 0xac, 0x1d, 0xd8,
	0xae, 0x51, 0xd6, 0xf6, 0xa7, 0xfd, 0xe1, 0x42, 0xba, 0x27, 0x46, 0x13, 0xa5, 0x22, 0xc1, 0x7d,
	0xd0, 0x87, 0xee, 0xd8, 0xeb, 0xc6, 0x54, 0x35, 0x9e, 0x68, 0x70, 0xe5, 0x03, 0x00, 0x51, 0x8c,
	0xcb, 0x0b, 0x38, 0xe1, 0x09, 0x6e, 0x66, 0x48, 0x5d, 0x2f, 0xaf, 0x4a, 0x33, 0xfc, 0x6c, 0x7d,
	0x86, 0x6c, 0xd5, 0x65, 0xae, 0xd3, 0x0b, 0xf1, 0x04, 0xd2, 0x9e, 0xcb, 0xdc, 0xbc, 0x52, 0x50,
	0x8b, 0xb9, 0x72, 0x61, 0x79, 0x3a, 0x12, 0x25, 0x7e, 0xed, 0x31, 0x0b, 0xe6, 0x44, 0xa0, 0xcd,
	0x27, 0xa0, 0xdf, 0xa6, 0xd0, 0x00, 0xf5, 0x23, 0x9d, 0x0b, 0x5f, 0x3a, 0xe1, 0x47, 0xde, 0xec,
	0xcc, 0xbd, 0x9a, 0xca, 0x99, 0x67, 0x88, 0x0c, 0x4e, 0x53, 0x4f, 0x15, 0xeb, 0xb1, 0xbc, 0xb9,
	0x32, 0x98, 0xe1, 0x2e, 0x64, 0xfb, 0x6e, 0xe0, 0x75, 0x47, 0x5e, 0x44, 0x5d, 0xe7, 0x61, 0xdd,
	0xe3, 0x8e, 0x85, 0xa5, 0x54, 0x41, 0xe5, 0x8e, 0xf9, 0xd9, 0xfa, 0xa2, 0xc8, 0x1b, 0xc5, 0x5c,
	0xf0, 0x05, 0x64, 0x19, 0x3f, 0x50, 0x2f, 0xf2, 0xfd, 0x4f, 0x82, 0x6f, 0x01, 0x2d, 0xb5, 0x25,
	0x4e, 0x9a, 0x5f, 0xb0, 0xcc, 0x53, 0xd8, 0x88, 0x17, 0x7e, 0xd5, 0x82, 0x16, 0x6f, 0xe1, 0x9b,
	0x02, 0x7a, 0x67, 0xe2, 0xb9, 0x8c, 0x12, 0x7a, 0x8d, 0xff, 0x41, 0xc6, 0x63, 0xf3, 0x09, 0x8d,
	0xde, 0xe6, 0x6e, 0x92, 0x91, 0xf9, 0x84, 0x12, 0x89, 0xc2, 0x22, 0xa8, 0x7e, 0x2f, 0x14, 0xa2,
	0xb9, 0xf2, 0xdf, 0xc9, 0xd3, 0x26, 0x1c, 0xc2, 0x91, 0xee, 0x60, 0x26, 0x3e, 0x5b, 0x32, 0xb2,
	0x32, 0x98, 0x11, 0x0e, 0xc1, 0x12, 0x64, 0x44, 0x5f, 0xf9, 0x8c, 0xc0, 0xe6, 0x57, 0xcd, 0x82,
	0x48, 0x98, 0xb5, 0x01, 0x40, 0xdc, 0x9b, 0xc5, 0x7b, 0xfb, 0xae, 0x40, 0x4e, 0x84, 0xd1, 0x5b,
	0xfb, 0xf3, 0x1a, 0x3a, 0x26, 0xb0, 0xbd, 0xb4, 0x03, 0x70, 0x13, 0xf4, 0xee, 0x7b, 0x9b, 0x38,
	0xdd, 0x6a, 0x9d, 0x18, 0x6b, 0xb8, 0x0d, 0x39, 0x62, 0x37, 0xec, 0x4a, 0xcb, 0x16, 0x09, 0x05,
	0x35, 0x48, 0x37, 0xec, 0xf3, 0xb6, 0x91, 0x42, 0x80, 0xf5, 0x33, 0xbb, 0xd9, 0xb6, 0x89, 0xa1,
	0xa2, 0x0e, 0x19, 0x52, 0xaf, 0x5d, 0xb4, 0x8d, 0xf4, 0xf1, 0x1b, 0xd8, 0xba, 0xbf, 0x1a, 0xe2,
	0x92, 0xad, 0x65, 0xc9, 0x96, 0xa1, 0x70, 0xf2, 0x59, 0xc3, 0x69, 0xd9, 0x52, 0xf3, 0xd2, 0xae,
	0xd6, 0x3b, 0x97, 0x86, 0x2a, 0x6e, 0x72, 0x9a, 0x35, 0x23, 0x7d, 0x7c, 0x02, 0xda, 0x62, 0x7a,
	0x98, 0x83, 0x6c, 0xa7, 0xf9, 0xba, 0xe9, 0xbc, 0x6b, 0x1a, 0x6b, 0x98, 0x05, 0xd5, 0x79, 0xc5,
	0x25, 0xb2, 0xa0, 0x56, 0x6a, 0x6f, 0x8d, 0x14, 0xd7, 0x6a, 0x3b, 0x9d, 0xb3, 0x0b, 0x23, 0x5d,
	0xfe, 0x91, 0x82, 0xcd, 0x56, 0xbc, 0x7f, 0x24, 0xa0, 0xdf, 0xee, 0x49, 0x3c, 0x5a, 0x1a, 0xce,
	0xf2, 0x5a, 0x35, 0x0b, 0xab, 0x01, 0xf2, 0x8b, 0x5b, 0x6b, 0xff, 0x2b, 0xf8, 0x09, 0xf0, 0xe1,
	0x42, 0xc3, 0xe2, 0x43, 0x6e, 0xf2, 0x42, 0x34, 0xff, 0xfd, 0x0d, 0x64, 0xec, 0x3a, 0x07, 0xb4,
	0xc5, 0x92, 0xc3, 0xc3, 0x87, 0xd4, 0xf8, 0x42, 0x34, 0x8f, 0x56, 0xd6, 0x63, 0x82, 0x2f, 0x41,
	0x25, 0xee, 0x0d, 0xee, 0x2d, 0x61, 0xef, 0xde, 0xb9, 0x69, 0x26, 0x95, 0xee, 0x14, 0x7a, 0xeb,
	0xe2, 0x8f, 0xea, 0xd1, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x11, 0xae, 0x51, 0xb8, 0x06,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SensorServiceClient is the client API for SensorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SensorServiceClient interface {
	// 获取感应数据流
	GetDetect(ctx context.Context, in *GetDetectRequest, opts ...grpc.CallOption) (SensorService_GetDetectClient, error)
	// 获取动态感应数据
	// 场景示例： 迎宾感应
	GetMotionInduction(ctx context.Context, in *GetMotionInductionRequest, opts ...grpc.CallOption) (SensorService_GetMotionInductionClient, error)
	// 获取触摸数据流
	GetTouch(ctx context.Context, in *GetTouchRequest, opts ...grpc.CallOption) (SensorService_GetTouchClient, error)
	// 获取传感器原始数据调试接口
	Raw(ctx context.Context, in *RawRequest, opts ...grpc.CallOption) (SensorService_RawClient, error)
}

type sensorServiceClient struct {
	cc *grpc.ClientConn
}

func NewSensorServiceClient(cc *grpc.ClientConn) SensorServiceClient {
	return &sensorServiceClient{cc}
}

func (c *sensorServiceClient) GetDetect(ctx context.Context, in *GetDetectRequest, opts ...grpc.CallOption) (SensorService_GetDetectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SensorService_serviceDesc.Streams[0], "/sensorService.SensorService/GetDetect", opts...)
	if err != nil {
		return nil, err
	}
	x := &sensorServiceGetDetectClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SensorService_GetDetectClient interface {
	Recv() (*GetDetectResponse, error)
	grpc.ClientStream
}

type sensorServiceGetDetectClient struct {
	grpc.ClientStream
}

func (x *sensorServiceGetDetectClient) Recv() (*GetDetectResponse, error) {
	m := new(GetDetectResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sensorServiceClient) GetMotionInduction(ctx context.Context, in *GetMotionInductionRequest, opts ...grpc.CallOption) (SensorService_GetMotionInductionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SensorService_serviceDesc.Streams[1], "/sensorService.SensorService/GetMotionInduction", opts...)
	if err != nil {
		return nil, err
	}
	x := &sensorServiceGetMotionInductionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SensorService_GetMotionInductionClient interface {
	Recv() (*GetMotionInductionResponse, error)
	grpc.ClientStream
}

type sensorServiceGetMotionInductionClient struct {
	grpc.ClientStream
}

func (x *sensorServiceGetMotionInductionClient) Recv() (*GetMotionInductionResponse, error) {
	m := new(GetMotionInductionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sensorServiceClient) GetTouch(ctx context.Context, in *GetTouchRequest, opts ...grpc.CallOption) (SensorService_GetTouchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SensorService_serviceDesc.Streams[2], "/sensorService.SensorService/GetTouch", opts...)
	if err != nil {
		return nil, err
	}
	x := &sensorServiceGetTouchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SensorService_GetTouchClient interface {
	Recv() (*GetTouchResponse, error)
	grpc.ClientStream
}

type sensorServiceGetTouchClient struct {
	grpc.ClientStream
}

func (x *sensorServiceGetTouchClient) Recv() (*GetTouchResponse, error) {
	m := new(GetTouchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sensorServiceClient) Raw(ctx context.Context, in *RawRequest, opts ...grpc.CallOption) (SensorService_RawClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SensorService_serviceDesc.Streams[3], "/sensorService.SensorService/Raw", opts...)
	if err != nil {
		return nil, err
	}
	x := &sensorServiceRawClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SensorService_RawClient interface {
	Recv() (*RawResponse, error)
	grpc.ClientStream
}

type sensorServiceRawClient struct {
	grpc.ClientStream
}

func (x *sensorServiceRawClient) Recv() (*RawResponse, error) {
	m := new(RawResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SensorServiceServer is the server API for SensorService service.
type SensorServiceServer interface {
	// 获取感应数据流
	GetDetect(*GetDetectRequest, SensorService_GetDetectServer) error
	// 获取动态感应数据
	// 场景示例： 迎宾感应
	GetMotionInduction(*GetMotionInductionRequest, SensorService_GetMotionInductionServer) error
	// 获取触摸数据流
	GetTouch(*GetTouchRequest, SensorService_GetTouchServer) error
	// 获取传感器原始数据调试接口
	Raw(*RawRequest, SensorService_RawServer) error
}

// UnimplementedSensorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSensorServiceServer struct {
}

func (*UnimplementedSensorServiceServer) GetDetect(req *GetDetectRequest, srv SensorService_GetDetectServer) error {
	return status.Errorf(codes.Unimplemented, "method GetDetect not implemented")
}
func (*UnimplementedSensorServiceServer) GetMotionInduction(req *GetMotionInductionRequest, srv SensorService_GetMotionInductionServer) error {
	return status.Errorf(codes.Unimplemented, "method GetMotionInduction not implemented")
}
func (*UnimplementedSensorServiceServer) GetTouch(req *GetTouchRequest, srv SensorService_GetTouchServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTouch not implemented")
}
func (*UnimplementedSensorServiceServer) Raw(req *RawRequest, srv SensorService_RawServer) error {
	return status.Errorf(codes.Unimplemented, "method Raw not implemented")
}

func RegisterSensorServiceServer(s *grpc.Server, srv SensorServiceServer) {
	s.RegisterService(&_SensorService_serviceDesc, srv)
}

func _SensorService_GetDetect_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetDetectRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SensorServiceServer).GetDetect(m, &sensorServiceGetDetectServer{stream})
}

type SensorService_GetDetectServer interface {
	Send(*GetDetectResponse) error
	grpc.ServerStream
}

type sensorServiceGetDetectServer struct {
	grpc.ServerStream
}

func (x *sensorServiceGetDetectServer) Send(m *GetDetectResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _SensorService_GetMotionInduction_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetMotionInductionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SensorServiceServer).GetMotionInduction(m, &sensorServiceGetMotionInductionServer{stream})
}

type SensorService_GetMotionInductionServer interface {
	Send(*GetMotionInductionResponse) error
	grpc.ServerStream
}

type sensorServiceGetMotionInductionServer struct {
	grpc.ServerStream
}

func (x *sensorServiceGetMotionInductionServer) Send(m *GetMotionInductionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _SensorService_GetTouch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetTouchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SensorServiceServer).GetTouch(m, &sensorServiceGetTouchServer{stream})
}

type SensorService_GetTouchServer interface {
	Send(*GetTouchResponse) error
	grpc.ServerStream
}

type sensorServiceGetTouchServer struct {
	grpc.ServerStream
}

func (x *sensorServiceGetTouchServer) Send(m *GetTouchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _SensorService_Raw_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RawRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SensorServiceServer).Raw(m, &sensorServiceRawServer{stream})
}

type SensorService_RawServer interface {
	Send(*RawResponse) error
	grpc.ServerStream
}

type sensorServiceRawServer struct {
	grpc.ServerStream
}

func (x *sensorServiceRawServer) Send(m *RawResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _SensorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sensorService.SensorService",
	HandlerType: (*SensorServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetDetect",
			Handler:       _SensorService_GetDetect_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetMotionInduction",
			Handler:       _SensorService_GetMotionInduction_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetTouch",
			Handler:       _SensorService_GetTouch_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Raw",
			Handler:       _SensorService_Raw_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "sensor.proto",
}
