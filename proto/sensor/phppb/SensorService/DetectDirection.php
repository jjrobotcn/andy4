<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sensor.proto

namespace SensorService;

use UnexpectedValueException;

/**
 * 检测方向
 *
 * Protobuf type <code>sensorService.DetectDirection</code>
 */
class DetectDirection
{
    /**
     * 零值, 不使用
     *
     * Generated from protobuf enum <code>_ZERO_DIR = 0;</code>
     */
    const _ZERO_DIR = 0;
    /**
     * 释放
     *
     * Generated from protobuf enum <code>RELEASE_DIR = 1;</code>
     */
    const RELEASE_DIR = 1;
    /**
     * 居左
     *
     * Generated from protobuf enum <code>LEFT = 2;</code>
     */
    const LEFT = 2;
    /**
     * 居中
     *
     * Generated from protobuf enum <code>CENTER = 3;</code>
     */
    const CENTER = 3;
    /**
     * 居右
     *
     * Generated from protobuf enum <code>RIGHT = 4;</code>
     */
    const RIGHT = 4;

    private static $valueToName = [
        self::_ZERO_DIR => '_ZERO_DIR',
        self::RELEASE_DIR => 'RELEASE_DIR',
        self::LEFT => 'LEFT',
        self::CENTER => 'CENTER',
        self::RIGHT => 'RIGHT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

