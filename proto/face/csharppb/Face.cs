// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: face.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace FaceRecognition {

  /// <summary>Holder for reflection information generated from face.proto</summary>
  public static partial class FaceReflection {

    #region Descriptor
    /// <summary>File descriptor for face.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FaceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpmYWNlLnByb3RvEg9mYWNlUmVjb2duaXRpb24aHGdvb2dsZS9hcGkvYW5u",
            "b3RhdGlvbnMucHJvdG8iNgoOQ29tcGFyZVJlcXVlc3QSEQoJZmFjZV9pbWcx",
            "GAEgASgMEhEKCWZhY2VfaW1nMhgCIAEoDCIlCg9Db21wYXJlUmVzcG9uc2US",
            "EgoKY29uZmlkZW5jZRgBIAEoAiI2Cg1TZWFyY2hSZXF1ZXN0EhMKC2ZhY2Vf",
            "c2V0X2lkGAEgASgJEhAKCGZhY2VfaW1nGAIgASgMIjgKDlNlYXJjaFJlc3Bv",
            "bnNlEhIKCmNvbmZpZGVuY2UYASABKAISEgoKZmFjZV90b2tlbhgCIAEoCTLn",
            "AQoLRmFjZVNlcnZpY2USbQoHQ29tcGFyZRIfLmZhY2VSZWNvZ25pdGlvbi5D",
            "b21wYXJlUmVxdWVzdBogLmZhY2VSZWNvZ25pdGlvbi5Db21wYXJlUmVzcG9u",
            "c2UiH4LT5JMCGSIUL2FwaS92Mi9mYWNlL2NvbXBhcmU6ASoSaQoGU2VhcmNo",
            "Eh4uZmFjZVJlY29nbml0aW9uLlNlYXJjaFJlcXVlc3QaHy5mYWNlUmVjb2du",
            "aXRpb24uU2VhcmNoUmVzcG9uc2UiHoLT5JMCGCITL2FwaS92Mi9mYWNlL3Nl",
            "YXJjaDoBKmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.CompareRequest), global::FaceRecognition.CompareRequest.Parser, new[]{ "FaceImg1", "FaceImg2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.CompareResponse), global::FaceRecognition.CompareResponse.Parser, new[]{ "Confidence" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.SearchRequest), global::FaceRecognition.SearchRequest.Parser, new[]{ "FaceSetId", "FaceImg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FaceRecognition.SearchResponse), global::FaceRecognition.SearchResponse.Parser, new[]{ "Confidence", "FaceToken" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CompareRequest : pb::IMessage<CompareRequest> {
    private static readonly pb::MessageParser<CompareRequest> _parser = new pb::MessageParser<CompareRequest>(() => new CompareRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompareRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FaceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompareRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompareRequest(CompareRequest other) : this() {
      faceImg1_ = other.faceImg1_;
      faceImg2_ = other.faceImg2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompareRequest Clone() {
      return new CompareRequest(this);
    }

    /// <summary>Field number for the "face_img1" field.</summary>
    public const int FaceImg1FieldNumber = 1;
    private pb::ByteString faceImg1_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FaceImg1 {
      get { return faceImg1_; }
      set {
        faceImg1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "face_img2" field.</summary>
    public const int FaceImg2FieldNumber = 2;
    private pb::ByteString faceImg2_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FaceImg2 {
      get { return faceImg2_; }
      set {
        faceImg2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompareRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompareRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FaceImg1 != other.FaceImg1) return false;
      if (FaceImg2 != other.FaceImg2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FaceImg1.Length != 0) hash ^= FaceImg1.GetHashCode();
      if (FaceImg2.Length != 0) hash ^= FaceImg2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FaceImg1.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(FaceImg1);
      }
      if (FaceImg2.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(FaceImg2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FaceImg1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FaceImg1);
      }
      if (FaceImg2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FaceImg2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompareRequest other) {
      if (other == null) {
        return;
      }
      if (other.FaceImg1.Length != 0) {
        FaceImg1 = other.FaceImg1;
      }
      if (other.FaceImg2.Length != 0) {
        FaceImg2 = other.FaceImg2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FaceImg1 = input.ReadBytes();
            break;
          }
          case 18: {
            FaceImg2 = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompareResponse : pb::IMessage<CompareResponse> {
    private static readonly pb::MessageParser<CompareResponse> _parser = new pb::MessageParser<CompareResponse>(() => new CompareResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompareResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FaceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompareResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompareResponse(CompareResponse other) : this() {
      confidence_ = other.confidence_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompareResponse Clone() {
      return new CompareResponse(this);
    }

    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 1;
    private float confidence_;
    /// <summary>
    /// 对比结果信任值 [0, 1.0]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompareResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompareResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Confidence != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Confidence);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Confidence != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Confidence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Confidence != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompareResponse other) {
      if (other == null) {
        return;
      }
      if (other.Confidence != 0F) {
        Confidence = other.Confidence;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Confidence = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchRequest : pb::IMessage<SearchRequest> {
    private static readonly pb::MessageParser<SearchRequest> _parser = new pb::MessageParser<SearchRequest>(() => new SearchRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FaceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRequest(SearchRequest other) : this() {
      faceSetId_ = other.faceSetId_;
      faceImg_ = other.faceImg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRequest Clone() {
      return new SearchRequest(this);
    }

    /// <summary>Field number for the "face_set_id" field.</summary>
    public const int FaceSetIdFieldNumber = 1;
    private string faceSetId_ = "";
    /// <summary>
    /// FaceSet.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaceSetId {
      get { return faceSetId_; }
      set {
        faceSetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "face_img" field.</summary>
    public const int FaceImgFieldNumber = 2;
    private pb::ByteString faceImg_ = pb::ByteString.Empty;
    /// <summary>
    /// 待搜索人脸图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FaceImg {
      get { return faceImg_; }
      set {
        faceImg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FaceSetId != other.FaceSetId) return false;
      if (FaceImg != other.FaceImg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FaceSetId.Length != 0) hash ^= FaceSetId.GetHashCode();
      if (FaceImg.Length != 0) hash ^= FaceImg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FaceSetId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FaceSetId);
      }
      if (FaceImg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(FaceImg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FaceSetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceSetId);
      }
      if (FaceImg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FaceImg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchRequest other) {
      if (other == null) {
        return;
      }
      if (other.FaceSetId.Length != 0) {
        FaceSetId = other.FaceSetId;
      }
      if (other.FaceImg.Length != 0) {
        FaceImg = other.FaceImg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FaceSetId = input.ReadString();
            break;
          }
          case 18: {
            FaceImg = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchResponse : pb::IMessage<SearchResponse> {
    private static readonly pb::MessageParser<SearchResponse> _parser = new pb::MessageParser<SearchResponse>(() => new SearchResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FaceRecognition.FaceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchResponse(SearchResponse other) : this() {
      confidence_ = other.confidence_;
      faceToken_ = other.faceToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchResponse Clone() {
      return new SearchResponse(this);
    }

    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 1;
    private float confidence_;
    /// <summary>
    /// 搜索结果信任值 [0, 1.0]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }

    /// <summary>Field number for the "face_token" field.</summary>
    public const int FaceTokenFieldNumber = 2;
    private string faceToken_ = "";
    /// <summary>
    /// 搜索结果FaceDetail.token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaceToken {
      get { return faceToken_; }
      set {
        faceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
      if (FaceToken != other.FaceToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Confidence != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Confidence);
      if (FaceToken.Length != 0) hash ^= FaceToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Confidence != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Confidence);
      }
      if (FaceToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FaceToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Confidence != 0F) {
        size += 1 + 4;
      }
      if (FaceToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchResponse other) {
      if (other == null) {
        return;
      }
      if (other.Confidence != 0F) {
        Confidence = other.Confidence;
      }
      if (other.FaceToken.Length != 0) {
        FaceToken = other.FaceToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Confidence = input.ReadFloat();
            break;
          }
          case 18: {
            FaceToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
