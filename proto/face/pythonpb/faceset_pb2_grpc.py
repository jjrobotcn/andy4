# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import faceset_pb2 as faceset__pb2


class FaceSetServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.NewFaceSet = channel.unary_unary(
        '/faceRecognition.FaceSetService/NewFaceSet',
        request_serializer=faceset__pb2.NewFaceSetRequest.SerializeToString,
        response_deserializer=faceset__pb2.NewFaceSetResponse.FromString,
        )
    self.DeleteFaceSet = channel.unary_unary(
        '/faceRecognition.FaceSetService/DeleteFaceSet',
        request_serializer=faceset__pb2.DeleteFaceSetRequest.SerializeToString,
        response_deserializer=faceset__pb2.DeleteFaceSetResponse.FromString,
        )
    self.UpdateFaceSet = channel.unary_unary(
        '/faceRecognition.FaceSetService/UpdateFaceSet',
        request_serializer=faceset__pb2.UpdateFaceSetRequest.SerializeToString,
        response_deserializer=faceset__pb2.UpdateFaceSetResponse.FromString,
        )
    self.ListFaceSets = channel.unary_unary(
        '/faceRecognition.FaceSetService/ListFaceSets',
        request_serializer=faceset__pb2.ListFaceSetsRequest.SerializeToString,
        response_deserializer=faceset__pb2.ListFaceSetsResponse.FromString,
        )
    self.AddFace = channel.unary_unary(
        '/faceRecognition.FaceSetService/AddFace',
        request_serializer=faceset__pb2.AddFaceRequest.SerializeToString,
        response_deserializer=faceset__pb2.AddFaceResponse.FromString,
        )
    self.RemoveFace = channel.unary_unary(
        '/faceRecognition.FaceSetService/RemoveFace',
        request_serializer=faceset__pb2.RemoveFaceRequest.SerializeToString,
        response_deserializer=faceset__pb2.RemoveFaceResponse.FromString,
        )
    self.FaceDetail = channel.unary_unary(
        '/faceRecognition.FaceSetService/FaceDetail',
        request_serializer=faceset__pb2.FaceDetailRequest.SerializeToString,
        response_deserializer=faceset__pb2.FaceDetailResponse.FromString,
        )
    self.ListFaceDetails = channel.unary_unary(
        '/faceRecognition.FaceSetService/ListFaceDetails',
        request_serializer=faceset__pb2.ListFaceDetailsRequest.SerializeToString,
        response_deserializer=faceset__pb2.ListFaceDetailsResponse.FromString,
        )


class FaceSetServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def NewFaceSet(self, request, context):
    """NewFaceSet创建一个FaceSet
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteFaceSet(self, request, context):
    """DeleteFaceSet删除一个FaceSet
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateFaceSet(self, request, context):
    """UpdateFaceSet更新一个FaceSet基础信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListFaceSets(self, request, context):
    """ListFaceSets列举所有FaceSets
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddFace(self, request, context):
    """AddFace将识别一张人脸图片并将结果添加至对应FaceSet中
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemoveFace(self, request, context):
    """RemoveFace将从FaceSet中移除对应FaceToken
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FaceDetail(self, request, context):
    """FaceDetail通过face_token获取对应的FaceDetail
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListFaceDetails(self, request, context):
    """ListFaceDetails返回指定FaceSet中的FaceDetails
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FaceSetServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'NewFaceSet': grpc.unary_unary_rpc_method_handler(
          servicer.NewFaceSet,
          request_deserializer=faceset__pb2.NewFaceSetRequest.FromString,
          response_serializer=faceset__pb2.NewFaceSetResponse.SerializeToString,
      ),
      'DeleteFaceSet': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteFaceSet,
          request_deserializer=faceset__pb2.DeleteFaceSetRequest.FromString,
          response_serializer=faceset__pb2.DeleteFaceSetResponse.SerializeToString,
      ),
      'UpdateFaceSet': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateFaceSet,
          request_deserializer=faceset__pb2.UpdateFaceSetRequest.FromString,
          response_serializer=faceset__pb2.UpdateFaceSetResponse.SerializeToString,
      ),
      'ListFaceSets': grpc.unary_unary_rpc_method_handler(
          servicer.ListFaceSets,
          request_deserializer=faceset__pb2.ListFaceSetsRequest.FromString,
          response_serializer=faceset__pb2.ListFaceSetsResponse.SerializeToString,
      ),
      'AddFace': grpc.unary_unary_rpc_method_handler(
          servicer.AddFace,
          request_deserializer=faceset__pb2.AddFaceRequest.FromString,
          response_serializer=faceset__pb2.AddFaceResponse.SerializeToString,
      ),
      'RemoveFace': grpc.unary_unary_rpc_method_handler(
          servicer.RemoveFace,
          request_deserializer=faceset__pb2.RemoveFaceRequest.FromString,
          response_serializer=faceset__pb2.RemoveFaceResponse.SerializeToString,
      ),
      'FaceDetail': grpc.unary_unary_rpc_method_handler(
          servicer.FaceDetail,
          request_deserializer=faceset__pb2.FaceDetailRequest.FromString,
          response_serializer=faceset__pb2.FaceDetailResponse.SerializeToString,
      ),
      'ListFaceDetails': grpc.unary_unary_rpc_method_handler(
          servicer.ListFaceDetails,
          request_deserializer=faceset__pb2.ListFaceDetailsRequest.FromString,
          response_serializer=faceset__pb2.ListFaceDetailsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'faceRecognition.FaceSetService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
