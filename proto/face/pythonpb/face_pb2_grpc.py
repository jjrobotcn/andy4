# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import face_pb2 as face__pb2


class FaceServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Compare = channel.unary_unary(
        '/faceRecognition.FaceService/Compare',
        request_serializer=face__pb2.CompareRequest.SerializeToString,
        response_deserializer=face__pb2.CompareResponse.FromString,
        )
    self.Search = channel.unary_unary(
        '/faceRecognition.FaceService/Search',
        request_serializer=face__pb2.SearchRequest.SerializeToString,
        response_deserializer=face__pb2.SearchResponse.FromString,
        )


class FaceServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Compare(self, request, context):
    """Compare方法实现了两张人脸图片对比识别，返回两图片的对比可信度
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Search(self, request, context):
    """Search方法实现搜索FaceSet中近似人脸数据，
    若存在匹配数据时返回一个FaceDetail及其confidence
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FaceServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Compare': grpc.unary_unary_rpc_method_handler(
          servicer.Compare,
          request_deserializer=face__pb2.CompareRequest.FromString,
          response_serializer=face__pb2.CompareResponse.SerializeToString,
      ),
      'Search': grpc.unary_unary_rpc_method_handler(
          servicer.Search,
          request_deserializer=face__pb2.SearchRequest.FromString,
          response_serializer=face__pb2.SearchResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'faceRecognition.FaceService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
