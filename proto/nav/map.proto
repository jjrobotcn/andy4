syntax = "proto3";

package navService;

option go_package = "navpb";

option java_package = "com.jjrobot.andy4.navpb";
option java_outer_classname = "MapPB";

// navService.Map 导航地图
//
// 仅无线导航版本支持
service Map {
    // GetMapInfo 获取地图信息
    rpc GetMapInfo(GetMapInfoRequest) returns (GetMapInfoResponse) {}

    // MapPositionStream 监听设备的地图定位信息
    rpc MapPositionStream(MapPositionStreamRequest) returns (stream MapPositionStreamResponse) {}

    // LocationReset 重置当前定位
    //
    // 某些情况下此方法返回成功时可能出现实际位置与地图位置不相符，
    // 在有明确参照物附近调用此方法可提高准确定位成功率。
    //
    // 用于发生定位异常/错误状态，重新初始化导航定位
    // 重定位错误：定位状态超时|无地图|UWB错误
    // 重定位超时判断: 默认10s，仅在非错误状态下重置
    rpc LocationReset(LocationResetRequest) returns (LocationResetResponse) {}
}

message MapPosition {
    // 水平坐标 [0: mapWidth]
    uint32 x = 1;
    // 垂直坐标 [0: mapHeight]
    uint32 y = 2;
    // 角度 水平右方向为0, 顺时针
    //     270
    // 180  ----0
    //     90
    uint32 angle = 3;
}

message GetMapInfoRequest {
    // true: 不返回map_image信息
    bool no_map_image = 1;
    // true: 不返回map_points信息
    bool no_map_points = 2;
}

message GetMapInfoResponse {
    // 地图id
    string id = 1;
    // 地图名
    string name = 2;

    // 地图图片信息
    message MapImage {
        uint32 width = 1;
        uint32 height = 2;
        bytes image = 3;
    }
    MapImage map_image = 3;

    // 地图点数据
    // 与nav.RoutePoint信息一致，
    // 区别为包含地图坐标信息
    message MapPoint {
        string name = 1;
        MapPosition position = 2;
    }
    repeated MapPoint map_points = 4;
}

message MapPositionStreamRequest {}

message MapPositionStreamResponse {
    MapPosition position = 1;
}

message LocationResetRequest {}

message LocationResetResponse {}
