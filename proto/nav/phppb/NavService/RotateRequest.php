<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nav.proto

namespace NavService;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\Internal\GPBWrapperUtils;

/**
 * 原地旋转请求
 *
 * Generated from protobuf message <code>navService.RotateRequest</code>
 */
class RotateRequest extends \Google\Protobuf\Internal\Message
{
    protected $rotate_oneof;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $angle
     *           基于当前角度的旋转角度参数 左:-180 ~ 右:180
     *     @type bool $rollback
     *           回滚旋转角度
     *           回滚角度的记录为更新angle角度值时的当前角度，
     *           若在旋转过程中更新新角度或再次回滚， 下次回滚角度将记录为当前角度
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Nav::initOnce();
        parent::__construct($data);
    }

    /**
     * 基于当前角度的旋转角度参数 左:-180 ~ 右:180
     *
     * Generated from protobuf field <code>int32 angle = 1;</code>
     * @return int
     */
    public function getAngle()
    {
        return $this->readOneof(1);
    }

    /**
     * 基于当前角度的旋转角度参数 左:-180 ~ 右:180
     *
     * Generated from protobuf field <code>int32 angle = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setAngle($var)
    {
        GPBUtil::checkInt32($var);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * 回滚旋转角度
     * 回滚角度的记录为更新angle角度值时的当前角度，
     * 若在旋转过程中更新新角度或再次回滚， 下次回滚角度将记录为当前角度
     *
     * Generated from protobuf field <code>bool rollback = 2;</code>
     * @return bool
     */
    public function getRollback()
    {
        return $this->readOneof(2);
    }

    /**
     * 回滚旋转角度
     * 回滚角度的记录为更新angle角度值时的当前角度，
     * 若在旋转过程中更新新角度或再次回滚， 下次回滚角度将记录为当前角度
     *
     * Generated from protobuf field <code>bool rollback = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setRollback($var)
    {
        GPBUtil::checkBool($var);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getRotateOneof()
    {
        return $this->whichOneof("rotate_oneof");
    }

}

