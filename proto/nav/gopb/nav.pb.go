// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nav.proto

package navService

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StatusCode int32

const (
	// 状态零值, 不使用
	StatusCode_UNKNOWN StatusCode = 0
	// 停止状态
	// 遥控移动状态: 已停止
	// 导航状态: 导航结束
	// 旋转状态: 旋转结束
	StatusCode_STOPPED StatusCode = 1
	// 移动中状态
	// 遥控移动状态: 遥控移动中
	// 导航状态: 导航移动中
	// 旋转状态: 旋转中
	StatusCode_MOVING StatusCode = 2
	// 准备状态
	// 导航状态: 导航准备中
	// 旋转状态: 旋转准备中
	StatusCode_PREPARING StatusCode = 3
	// 用户取消状态
	// 导航状态: 导航被中止
	// 旋转状态: 旋转被中止
	StatusCode_CANCEL StatusCode = 4
	// 遥控控制权释放状态
	// 遥控移动状态: 遥控权限超时释放,
	// 其它遥控端可接管遥控控制权,
	// 其它类型操作可接管
	StatusCode_RELEASED StatusCode = 5
	// 遇到障碍物
	// 遥控移动状态: 遥控移动遇到障碍物
	// 导航状态: 导航过程中遇到障碍(自动导航方式支持自动避障)
	StatusCode_ERR_OBSTACLE StatusCode = 10
	// 未就绪状态
	StatusCode_ERR_NOT_READY StatusCode = 11
	// 电机错误
	StatusCode_ERR_MOTOR_FAIL StatusCode = 12
	// 导航目标错误
	StatusCode_ERR_WRONG_TARGET StatusCode = 13
	// 操作被拒绝， 当前遥控移动中
	StatusCode_REJ_MOVING StatusCode = 20
	// 操作被拒绝， 当前导航中
	StatusCode_REJ_NAVING StatusCode = 21
	// 操作被拒绝， 当前充电中
	StatusCode_REJ_CHARGING StatusCode = 22
	// 操作被拒绝， 当前旋转中
	StatusCode_REJ_ROTATING StatusCode = 23
)

var StatusCode_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "STOPPED",
	2:  "MOVING",
	3:  "PREPARING",
	4:  "CANCEL",
	5:  "RELEASED",
	10: "ERR_OBSTACLE",
	11: "ERR_NOT_READY",
	12: "ERR_MOTOR_FAIL",
	13: "ERR_WRONG_TARGET",
	20: "REJ_MOVING",
	21: "REJ_NAVING",
	22: "REJ_CHARGING",
	23: "REJ_ROTATING",
}

var StatusCode_value = map[string]int32{
	"UNKNOWN":          0,
	"STOPPED":          1,
	"MOVING":           2,
	"PREPARING":        3,
	"CANCEL":           4,
	"RELEASED":         5,
	"ERR_OBSTACLE":     10,
	"ERR_NOT_READY":    11,
	"ERR_MOTOR_FAIL":   12,
	"ERR_WRONG_TARGET": 13,
	"REJ_MOVING":       20,
	"REJ_NAVING":       21,
	"REJ_CHARGING":     22,
	"REJ_ROTATING":     23,
}

func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}

func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{0}
}

// 移动方向
type MoveDirection int32

const (
	MoveDirection_RELEASE        MoveDirection = 0
	MoveDirection_FORWARD        MoveDirection = 1
	MoveDirection_BACKWARD       MoveDirection = 2
	MoveDirection_LEFT           MoveDirection = 3
	MoveDirection_RIGHT          MoveDirection = 4
	MoveDirection_LEFT_FORWARD   MoveDirection = 5
	MoveDirection_RIGHT_FORWARD  MoveDirection = 6
	MoveDirection_LEFT_BACKWARD  MoveDirection = 7
	MoveDirection_RIGHT_BACKWARD MoveDirection = 8
)

var MoveDirection_name = map[int32]string{
	0: "RELEASE",
	1: "FORWARD",
	2: "BACKWARD",
	3: "LEFT",
	4: "RIGHT",
	5: "LEFT_FORWARD",
	6: "RIGHT_FORWARD",
	7: "LEFT_BACKWARD",
	8: "RIGHT_BACKWARD",
}

var MoveDirection_value = map[string]int32{
	"RELEASE":        0,
	"FORWARD":        1,
	"BACKWARD":       2,
	"LEFT":           3,
	"RIGHT":          4,
	"LEFT_FORWARD":   5,
	"RIGHT_FORWARD":  6,
	"LEFT_BACKWARD":  7,
	"RIGHT_BACKWARD": 8,
}

func (x MoveDirection) String() string {
	return proto.EnumName(MoveDirection_name, int32(x))
}

func (MoveDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{1}
}

// 导航漫游方式
type RoamingType int32

const (
	RoamingType_ROAMING_TYPE_CONTINUE RoamingType = 0
	RoamingType_ROAMING_TYPE_ORDER    RoamingType = 1
	RoamingType_ROAMING_TYPE_RANDOM   RoamingType = 2
)

var RoamingType_name = map[int32]string{
	0: "ROAMING_TYPE_CONTINUE",
	1: "ROAMING_TYPE_ORDER",
	2: "ROAMING_TYPE_RANDOM",
}

var RoamingType_value = map[string]int32{
	"ROAMING_TYPE_CONTINUE": 0,
	"ROAMING_TYPE_ORDER":    1,
	"ROAMING_TYPE_RANDOM":   2,
}

func (x RoamingType) String() string {
	return proto.EnumName(RoamingType_name, int32(x))
}

func (RoamingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{2}
}

// 充电状态码
type ChargeStatusCode int32

const (
	// 状态零值
	ChargeStatusCode_CHARGE_STATUS_UNKNOWN ChargeStatusCode = 0
	// 准备中
	// 充电导航: 导航开始/CHARGE_STATUS_NAV_OBSTACLE导航恢复
	ChargeStatusCode_CHARGE_STATUS_PREPARING ChargeStatusCode = 1
	// 已释放
	// 充电断开结束完成与未充电时为此状态
	ChargeStatusCode_CHARGE_STATUS_RELEASED ChargeStatusCode = 2
	// 充电连接中
	ChargeStatusCode_CHARGE_STATUS_CONNECTING ChargeStatusCode = 3
	// 充电中
	ChargeStatusCode_CHARGE_STATUS_CHARGING ChargeStatusCode = 4
	// 充电断开中
	ChargeStatusCode_CHARGE_STATUS_DISCONNECTING ChargeStatusCode = 5
	// 连接失败
	ChargeStatusCode_CHARGE_CONNECT_FAIL ChargeStatusCode = 6
	// 充电导航过程遇到障碍
	// 2.2.7新增
	ChargeStatusCode_CHARGE_STATUS_NAV_OBSTACLE ChargeStatusCode = 7
)

var ChargeStatusCode_name = map[int32]string{
	0: "CHARGE_STATUS_UNKNOWN",
	1: "CHARGE_STATUS_PREPARING",
	2: "CHARGE_STATUS_RELEASED",
	3: "CHARGE_STATUS_CONNECTING",
	4: "CHARGE_STATUS_CHARGING",
	5: "CHARGE_STATUS_DISCONNECTING",
	6: "CHARGE_CONNECT_FAIL",
	7: "CHARGE_STATUS_NAV_OBSTACLE",
}

var ChargeStatusCode_value = map[string]int32{
	"CHARGE_STATUS_UNKNOWN":       0,
	"CHARGE_STATUS_PREPARING":     1,
	"CHARGE_STATUS_RELEASED":      2,
	"CHARGE_STATUS_CONNECTING":    3,
	"CHARGE_STATUS_CHARGING":      4,
	"CHARGE_STATUS_DISCONNECTING": 5,
	"CHARGE_CONNECT_FAIL":         6,
	"CHARGE_STATUS_NAV_OBSTACLE":  7,
}

func (x ChargeStatusCode) String() string {
	return proto.EnumName(ChargeStatusCode_name, int32(x))
}

func (ChargeStatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{3}
}

// 导航事件
type NavEventType int32

const (
	NavEventType_NAV_EVENT_REVERSED NavEventType = 0
	NavEventType_MOVE_EVENT         NavEventType = 1
	NavEventType_NAV_EVENT          NavEventType = 2
	NavEventType_AUTO_CHARGE_EVENT  NavEventType = 3
	NavEventType_ROTATE_EVENT       NavEventType = 4
)

var NavEventType_name = map[int32]string{
	0: "NAV_EVENT_REVERSED",
	1: "MOVE_EVENT",
	2: "NAV_EVENT",
	3: "AUTO_CHARGE_EVENT",
	4: "ROTATE_EVENT",
}

var NavEventType_value = map[string]int32{
	"NAV_EVENT_REVERSED": 0,
	"MOVE_EVENT":         1,
	"NAV_EVENT":          2,
	"AUTO_CHARGE_EVENT":  3,
	"ROTATE_EVENT":       4,
}

func (x NavEventType) String() string {
	return proto.EnumName(NavEventType_name, int32(x))
}

func (NavEventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{4}
}

type MoveRequest struct {
	Speed                uint32        `protobuf:"varint,1,opt,name=speed,proto3" json:"speed,omitempty"`
	Rspeed               uint32        `protobuf:"varint,2,opt,name=rspeed,proto3" json:"rspeed,omitempty"`
	Direction            MoveDirection `protobuf:"varint,3,opt,name=direction,proto3,enum=navService.MoveDirection" json:"direction,omitempty"`
	Mode                 string        `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MoveRequest) Reset()         { *m = MoveRequest{} }
func (m *MoveRequest) String() string { return proto.CompactTextString(m) }
func (*MoveRequest) ProtoMessage()    {}
func (*MoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{0}
}

func (m *MoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveRequest.Unmarshal(m, b)
}
func (m *MoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveRequest.Marshal(b, m, deterministic)
}
func (m *MoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveRequest.Merge(m, src)
}
func (m *MoveRequest) XXX_Size() int {
	return xxx_messageInfo_MoveRequest.Size(m)
}
func (m *MoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoveRequest proto.InternalMessageInfo

func (m *MoveRequest) GetSpeed() uint32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *MoveRequest) GetRspeed() uint32 {
	if m != nil {
		return m.Rspeed
	}
	return 0
}

func (m *MoveRequest) GetDirection() MoveDirection {
	if m != nil {
		return m.Direction
	}
	return MoveDirection_RELEASE
}

func (m *MoveRequest) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

type MoveResponse struct {
	StatusCode           StatusCode `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=navService.StatusCode" json:"status_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MoveResponse) Reset()         { *m = MoveResponse{} }
func (m *MoveResponse) String() string { return proto.CompactTextString(m) }
func (*MoveResponse) ProtoMessage()    {}
func (*MoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{1}
}

func (m *MoveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveResponse.Unmarshal(m, b)
}
func (m *MoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveResponse.Marshal(b, m, deterministic)
}
func (m *MoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveResponse.Merge(m, src)
}
func (m *MoveResponse) XXX_Size() int {
	return xxx_messageInfo_MoveResponse.Size(m)
}
func (m *MoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MoveResponse proto.InternalMessageInfo

func (m *MoveResponse) GetStatusCode() StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return StatusCode_UNKNOWN
}

// 导航目标信息
// 判断顺序为index>name
type NavTarget struct {
	Index                string   `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NavTarget) Reset()         { *m = NavTarget{} }
func (m *NavTarget) String() string { return proto.CompactTextString(m) }
func (*NavTarget) ProtoMessage()    {}
func (*NavTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{2}
}

func (m *NavTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NavTarget.Unmarshal(m, b)
}
func (m *NavTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NavTarget.Marshal(b, m, deterministic)
}
func (m *NavTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NavTarget.Merge(m, src)
}
func (m *NavTarget) XXX_Size() int {
	return xxx_messageInfo_NavTarget.Size(m)
}
func (m *NavTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_NavTarget.DiscardUnknown(m)
}

var xxx_messageInfo_NavTarget proto.InternalMessageInfo

func (m *NavTarget) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *NavTarget) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type NavRoaming struct {
	NavRoamingType       RoamingType `protobuf:"varint,1,opt,name=nav_roaming_type,json=navRoamingType,proto3,enum=navService.RoamingType" json:"nav_roaming_type,omitempty"`
	WaitSec              int32       `protobuf:"varint,2,opt,name=wait_sec,json=waitSec,proto3" json:"wait_sec,omitempty"`
	RoamingTargetIndexes []string    `protobuf:"bytes,3,rep,name=roaming_target_indexes,json=roamingTargetIndexes,proto3" json:"roaming_target_indexes,omitempty"`
	OrderLoop            bool        `protobuf:"varint,4,opt,name=order_loop,json=orderLoop,proto3" json:"order_loop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NavRoaming) Reset()         { *m = NavRoaming{} }
func (m *NavRoaming) String() string { return proto.CompactTextString(m) }
func (*NavRoaming) ProtoMessage()    {}
func (*NavRoaming) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{3}
}

func (m *NavRoaming) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NavRoaming.Unmarshal(m, b)
}
func (m *NavRoaming) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NavRoaming.Marshal(b, m, deterministic)
}
func (m *NavRoaming) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NavRoaming.Merge(m, src)
}
func (m *NavRoaming) XXX_Size() int {
	return xxx_messageInfo_NavRoaming.Size(m)
}
func (m *NavRoaming) XXX_DiscardUnknown() {
	xxx_messageInfo_NavRoaming.DiscardUnknown(m)
}

var xxx_messageInfo_NavRoaming proto.InternalMessageInfo

func (m *NavRoaming) GetNavRoamingType() RoamingType {
	if m != nil {
		return m.NavRoamingType
	}
	return RoamingType_ROAMING_TYPE_CONTINUE
}

func (m *NavRoaming) GetWaitSec() int32 {
	if m != nil {
		return m.WaitSec
	}
	return 0
}

func (m *NavRoaming) GetRoamingTargetIndexes() []string {
	if m != nil {
		return m.RoamingTargetIndexes
	}
	return nil
}

func (m *NavRoaming) GetOrderLoop() bool {
	if m != nil {
		return m.OrderLoop
	}
	return false
}

// 导航请求
type NavToRequest struct {
	// Types that are valid to be assigned to TargetOneof:
	//	*NavToRequest_Target
	//	*NavToRequest_Roaming
	TargetOneof isNavToRequest_TargetOneof `protobuf_oneof:"target_oneof"`
	Speed       uint32                     `protobuf:"varint,2,opt,name=speed,proto3" json:"speed,omitempty"`
	// 同步模式标识
	// *false: 当导航开始时立即返回PREPARING, 漫游模式强制为异步
	// true: 目标模式下当导航STOPPED|CANCEL|ERR*时返回
	SyncMode             bool     `protobuf:"varint,4,opt,name=sync_mode,json=syncMode,proto3" json:"sync_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NavToRequest) Reset()         { *m = NavToRequest{} }
func (m *NavToRequest) String() string { return proto.CompactTextString(m) }
func (*NavToRequest) ProtoMessage()    {}
func (*NavToRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{4}
}

func (m *NavToRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NavToRequest.Unmarshal(m, b)
}
func (m *NavToRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NavToRequest.Marshal(b, m, deterministic)
}
func (m *NavToRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NavToRequest.Merge(m, src)
}
func (m *NavToRequest) XXX_Size() int {
	return xxx_messageInfo_NavToRequest.Size(m)
}
func (m *NavToRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NavToRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NavToRequest proto.InternalMessageInfo

type isNavToRequest_TargetOneof interface {
	isNavToRequest_TargetOneof()
}

type NavToRequest_Target struct {
	Target *NavTarget `protobuf:"bytes,1,opt,name=target,proto3,oneof"`
}

type NavToRequest_Roaming struct {
	Roaming *NavRoaming `protobuf:"bytes,3,opt,name=roaming,proto3,oneof"`
}

func (*NavToRequest_Target) isNavToRequest_TargetOneof() {}

func (*NavToRequest_Roaming) isNavToRequest_TargetOneof() {}

func (m *NavToRequest) GetTargetOneof() isNavToRequest_TargetOneof {
	if m != nil {
		return m.TargetOneof
	}
	return nil
}

func (m *NavToRequest) GetTarget() *NavTarget {
	if x, ok := m.GetTargetOneof().(*NavToRequest_Target); ok {
		return x.Target
	}
	return nil
}

func (m *NavToRequest) GetRoaming() *NavRoaming {
	if x, ok := m.GetTargetOneof().(*NavToRequest_Roaming); ok {
		return x.Roaming
	}
	return nil
}

func (m *NavToRequest) GetSpeed() uint32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *NavToRequest) GetSyncMode() bool {
	if m != nil {
		return m.SyncMode
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*NavToRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*NavToRequest_Target)(nil),
		(*NavToRequest_Roaming)(nil),
	}
}

// 导航状态
type NavToResponse struct {
	StatusCode StatusCode `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=navService.StatusCode" json:"status_code,omitempty"`
	// Types that are valid to be assigned to TargetOneof:
	//	*NavToResponse_Target
	//	*NavToResponse_IsRoaming
	TargetOneof          isNavToResponse_TargetOneof `protobuf_oneof:"target_oneof"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *NavToResponse) Reset()         { *m = NavToResponse{} }
func (m *NavToResponse) String() string { return proto.CompactTextString(m) }
func (*NavToResponse) ProtoMessage()    {}
func (*NavToResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{5}
}

func (m *NavToResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NavToResponse.Unmarshal(m, b)
}
func (m *NavToResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NavToResponse.Marshal(b, m, deterministic)
}
func (m *NavToResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NavToResponse.Merge(m, src)
}
func (m *NavToResponse) XXX_Size() int {
	return xxx_messageInfo_NavToResponse.Size(m)
}
func (m *NavToResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NavToResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NavToResponse proto.InternalMessageInfo

func (m *NavToResponse) GetStatusCode() StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return StatusCode_UNKNOWN
}

type isNavToResponse_TargetOneof interface {
	isNavToResponse_TargetOneof()
}

type NavToResponse_Target struct {
	Target *NavTarget `protobuf:"bytes,2,opt,name=target,proto3,oneof"`
}

type NavToResponse_IsRoaming struct {
	IsRoaming bool `protobuf:"varint,3,opt,name=is_roaming,json=isRoaming,proto3,oneof"`
}

func (*NavToResponse_Target) isNavToResponse_TargetOneof() {}

func (*NavToResponse_IsRoaming) isNavToResponse_TargetOneof() {}

func (m *NavToResponse) GetTargetOneof() isNavToResponse_TargetOneof {
	if m != nil {
		return m.TargetOneof
	}
	return nil
}

func (m *NavToResponse) GetTarget() *NavTarget {
	if x, ok := m.GetTargetOneof().(*NavToResponse_Target); ok {
		return x.Target
	}
	return nil
}

func (m *NavToResponse) GetIsRoaming() bool {
	if x, ok := m.GetTargetOneof().(*NavToResponse_IsRoaming); ok {
		return x.IsRoaming
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*NavToResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*NavToResponse_Target)(nil),
		(*NavToResponse_IsRoaming)(nil),
	}
}

// 导航停止请求
type NavStopRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NavStopRequest) Reset()         { *m = NavStopRequest{} }
func (m *NavStopRequest) String() string { return proto.CompactTextString(m) }
func (*NavStopRequest) ProtoMessage()    {}
func (*NavStopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{6}
}

func (m *NavStopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NavStopRequest.Unmarshal(m, b)
}
func (m *NavStopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NavStopRequest.Marshal(b, m, deterministic)
}
func (m *NavStopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NavStopRequest.Merge(m, src)
}
func (m *NavStopRequest) XXX_Size() int {
	return xxx_messageInfo_NavStopRequest.Size(m)
}
func (m *NavStopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NavStopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NavStopRequest proto.InternalMessageInfo

// 导航停止状态
type NavStopResponse struct {
	StatusCode           StatusCode `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=navService.StatusCode" json:"status_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NavStopResponse) Reset()         { *m = NavStopResponse{} }
func (m *NavStopResponse) String() string { return proto.CompactTextString(m) }
func (*NavStopResponse) ProtoMessage()    {}
func (*NavStopResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{7}
}

func (m *NavStopResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NavStopResponse.Unmarshal(m, b)
}
func (m *NavStopResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NavStopResponse.Marshal(b, m, deterministic)
}
func (m *NavStopResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NavStopResponse.Merge(m, src)
}
func (m *NavStopResponse) XXX_Size() int {
	return xxx_messageInfo_NavStopResponse.Size(m)
}
func (m *NavStopResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NavStopResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NavStopResponse proto.InternalMessageInfo

func (m *NavStopResponse) GetStatusCode() StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return StatusCode_UNKNOWN
}

// 充电请求
type AutoChargeRequest struct {
	// Types that are valid to be assigned to ChargeOptionOneof:
	//	*AutoChargeRequest_Charge
	//	*AutoChargeRequest_Cancel
	//	*AutoChargeRequest_ChargePreset
	ChargeOptionOneof isAutoChargeRequest_ChargeOptionOneof `protobuf_oneof:"charge_option_oneof"`
	// 等待充电状态为CHARGE_STATUS_CHARGING的超时配置(秒), 默认60s
	TimeoutSec           uint32   `protobuf:"varint,4,opt,name=timeout_sec,json=timeoutSec,proto3" json:"timeout_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AutoChargeRequest) Reset()         { *m = AutoChargeRequest{} }
func (m *AutoChargeRequest) String() string { return proto.CompactTextString(m) }
func (*AutoChargeRequest) ProtoMessage()    {}
func (*AutoChargeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{8}
}

func (m *AutoChargeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutoChargeRequest.Unmarshal(m, b)
}
func (m *AutoChargeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutoChargeRequest.Marshal(b, m, deterministic)
}
func (m *AutoChargeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoChargeRequest.Merge(m, src)
}
func (m *AutoChargeRequest) XXX_Size() int {
	return xxx_messageInfo_AutoChargeRequest.Size(m)
}
func (m *AutoChargeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoChargeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AutoChargeRequest proto.InternalMessageInfo

type isAutoChargeRequest_ChargeOptionOneof interface {
	isAutoChargeRequest_ChargeOptionOneof()
}

type AutoChargeRequest_Charge struct {
	Charge bool `protobuf:"varint,1,opt,name=charge,proto3,oneof"`
}

type AutoChargeRequest_Cancel struct {
	Cancel bool `protobuf:"varint,2,opt,name=cancel,proto3,oneof"`
}

type AutoChargeRequest_ChargePreset struct {
	ChargePreset bool `protobuf:"varint,3,opt,name=charge_preset,json=chargePreset,proto3,oneof"`
}

func (*AutoChargeRequest_Charge) isAutoChargeRequest_ChargeOptionOneof() {}

func (*AutoChargeRequest_Cancel) isAutoChargeRequest_ChargeOptionOneof() {}

func (*AutoChargeRequest_ChargePreset) isAutoChargeRequest_ChargeOptionOneof() {}

func (m *AutoChargeRequest) GetChargeOptionOneof() isAutoChargeRequest_ChargeOptionOneof {
	if m != nil {
		return m.ChargeOptionOneof
	}
	return nil
}

func (m *AutoChargeRequest) GetCharge() bool {
	if x, ok := m.GetChargeOptionOneof().(*AutoChargeRequest_Charge); ok {
		return x.Charge
	}
	return false
}

func (m *AutoChargeRequest) GetCancel() bool {
	if x, ok := m.GetChargeOptionOneof().(*AutoChargeRequest_Cancel); ok {
		return x.Cancel
	}
	return false
}

func (m *AutoChargeRequest) GetChargePreset() bool {
	if x, ok := m.GetChargeOptionOneof().(*AutoChargeRequest_ChargePreset); ok {
		return x.ChargePreset
	}
	return false
}

func (m *AutoChargeRequest) GetTimeoutSec() uint32 {
	if m != nil {
		return m.TimeoutSec
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AutoChargeRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AutoChargeRequest_Charge)(nil),
		(*AutoChargeRequest_Cancel)(nil),
		(*AutoChargeRequest_ChargePreset)(nil),
	}
}

// 充电状态反馈
type AutoChargeResponse struct {
	ChargeStatusCode     ChargeStatusCode `protobuf:"varint,1,opt,name=charge_status_code,json=chargeStatusCode,proto3,enum=navService.ChargeStatusCode" json:"charge_status_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AutoChargeResponse) Reset()         { *m = AutoChargeResponse{} }
func (m *AutoChargeResponse) String() string { return proto.CompactTextString(m) }
func (*AutoChargeResponse) ProtoMessage()    {}
func (*AutoChargeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{9}
}

func (m *AutoChargeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutoChargeResponse.Unmarshal(m, b)
}
func (m *AutoChargeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutoChargeResponse.Marshal(b, m, deterministic)
}
func (m *AutoChargeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoChargeResponse.Merge(m, src)
}
func (m *AutoChargeResponse) XXX_Size() int {
	return xxx_messageInfo_AutoChargeResponse.Size(m)
}
func (m *AutoChargeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoChargeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AutoChargeResponse proto.InternalMessageInfo

func (m *AutoChargeResponse) GetChargeStatusCode() ChargeStatusCode {
	if m != nil {
		return m.ChargeStatusCode
	}
	return ChargeStatusCode_CHARGE_STATUS_UNKNOWN
}

// 原地旋转请求
type RotateRequest struct {
	// Types that are valid to be assigned to RotateOneof:
	//	*RotateRequest_Angle
	//	*RotateRequest_Rollback
	RotateOneof          isRotateRequest_RotateOneof `protobuf_oneof:"rotate_oneof"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *RotateRequest) Reset()         { *m = RotateRequest{} }
func (m *RotateRequest) String() string { return proto.CompactTextString(m) }
func (*RotateRequest) ProtoMessage()    {}
func (*RotateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{10}
}

func (m *RotateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RotateRequest.Unmarshal(m, b)
}
func (m *RotateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RotateRequest.Marshal(b, m, deterministic)
}
func (m *RotateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RotateRequest.Merge(m, src)
}
func (m *RotateRequest) XXX_Size() int {
	return xxx_messageInfo_RotateRequest.Size(m)
}
func (m *RotateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RotateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RotateRequest proto.InternalMessageInfo

type isRotateRequest_RotateOneof interface {
	isRotateRequest_RotateOneof()
}

type RotateRequest_Angle struct {
	Angle int32 `protobuf:"varint,1,opt,name=angle,proto3,oneof"`
}

type RotateRequest_Rollback struct {
	Rollback bool `protobuf:"varint,2,opt,name=rollback,proto3,oneof"`
}

func (*RotateRequest_Angle) isRotateRequest_RotateOneof() {}

func (*RotateRequest_Rollback) isRotateRequest_RotateOneof() {}

func (m *RotateRequest) GetRotateOneof() isRotateRequest_RotateOneof {
	if m != nil {
		return m.RotateOneof
	}
	return nil
}

func (m *RotateRequest) GetAngle() int32 {
	if x, ok := m.GetRotateOneof().(*RotateRequest_Angle); ok {
		return x.Angle
	}
	return 0
}

func (m *RotateRequest) GetRollback() bool {
	if x, ok := m.GetRotateOneof().(*RotateRequest_Rollback); ok {
		return x.Rollback
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RotateRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RotateRequest_Angle)(nil),
		(*RotateRequest_Rollback)(nil),
	}
}

type RotateResponse struct {
	StatusCode           StatusCode `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=navService.StatusCode" json:"status_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RotateResponse) Reset()         { *m = RotateResponse{} }
func (m *RotateResponse) String() string { return proto.CompactTextString(m) }
func (*RotateResponse) ProtoMessage()    {}
func (*RotateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{11}
}

func (m *RotateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RotateResponse.Unmarshal(m, b)
}
func (m *RotateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RotateResponse.Marshal(b, m, deterministic)
}
func (m *RotateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RotateResponse.Merge(m, src)
}
func (m *RotateResponse) XXX_Size() int {
	return xxx_messageInfo_RotateResponse.Size(m)
}
func (m *RotateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RotateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RotateResponse proto.InternalMessageInfo

func (m *RotateResponse) GetStatusCode() StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return StatusCode_UNKNOWN
}

type OnNavEventChangeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnNavEventChangeRequest) Reset()         { *m = OnNavEventChangeRequest{} }
func (m *OnNavEventChangeRequest) String() string { return proto.CompactTextString(m) }
func (*OnNavEventChangeRequest) ProtoMessage()    {}
func (*OnNavEventChangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{12}
}

func (m *OnNavEventChangeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnNavEventChangeRequest.Unmarshal(m, b)
}
func (m *OnNavEventChangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnNavEventChangeRequest.Marshal(b, m, deterministic)
}
func (m *OnNavEventChangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnNavEventChangeRequest.Merge(m, src)
}
func (m *OnNavEventChangeRequest) XXX_Size() int {
	return xxx_messageInfo_OnNavEventChangeRequest.Size(m)
}
func (m *OnNavEventChangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OnNavEventChangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OnNavEventChangeRequest proto.InternalMessageInfo

type MoveEvent struct {
	StatusCode           StatusCode `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=navService.StatusCode" json:"status_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MoveEvent) Reset()         { *m = MoveEvent{} }
func (m *MoveEvent) String() string { return proto.CompactTextString(m) }
func (*MoveEvent) ProtoMessage()    {}
func (*MoveEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{13}
}

func (m *MoveEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveEvent.Unmarshal(m, b)
}
func (m *MoveEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveEvent.Marshal(b, m, deterministic)
}
func (m *MoveEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveEvent.Merge(m, src)
}
func (m *MoveEvent) XXX_Size() int {
	return xxx_messageInfo_MoveEvent.Size(m)
}
func (m *MoveEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveEvent.DiscardUnknown(m)
}

var xxx_messageInfo_MoveEvent proto.InternalMessageInfo

func (m *MoveEvent) GetStatusCode() StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return StatusCode_UNKNOWN
}

type NavEvent struct {
	StatusCode           StatusCode `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=navService.StatusCode" json:"status_code,omitempty"`
	NavTarget            *NavTarget `protobuf:"bytes,2,opt,name=nav_target,json=navTarget,proto3" json:"nav_target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NavEvent) Reset()         { *m = NavEvent{} }
func (m *NavEvent) String() string { return proto.CompactTextString(m) }
func (*NavEvent) ProtoMessage()    {}
func (*NavEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{14}
}

func (m *NavEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NavEvent.Unmarshal(m, b)
}
func (m *NavEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NavEvent.Marshal(b, m, deterministic)
}
func (m *NavEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NavEvent.Merge(m, src)
}
func (m *NavEvent) XXX_Size() int {
	return xxx_messageInfo_NavEvent.Size(m)
}
func (m *NavEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_NavEvent.DiscardUnknown(m)
}

var xxx_messageInfo_NavEvent proto.InternalMessageInfo

func (m *NavEvent) GetStatusCode() StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return StatusCode_UNKNOWN
}

func (m *NavEvent) GetNavTarget() *NavTarget {
	if m != nil {
		return m.NavTarget
	}
	return nil
}

type AutoChargeEvent struct {
	ChargeStatusCode     ChargeStatusCode `protobuf:"varint,1,opt,name=charge_status_code,json=chargeStatusCode,proto3,enum=navService.ChargeStatusCode" json:"charge_status_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AutoChargeEvent) Reset()         { *m = AutoChargeEvent{} }
func (m *AutoChargeEvent) String() string { return proto.CompactTextString(m) }
func (*AutoChargeEvent) ProtoMessage()    {}
func (*AutoChargeEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{15}
}

func (m *AutoChargeEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutoChargeEvent.Unmarshal(m, b)
}
func (m *AutoChargeEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutoChargeEvent.Marshal(b, m, deterministic)
}
func (m *AutoChargeEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoChargeEvent.Merge(m, src)
}
func (m *AutoChargeEvent) XXX_Size() int {
	return xxx_messageInfo_AutoChargeEvent.Size(m)
}
func (m *AutoChargeEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoChargeEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AutoChargeEvent proto.InternalMessageInfo

func (m *AutoChargeEvent) GetChargeStatusCode() ChargeStatusCode {
	if m != nil {
		return m.ChargeStatusCode
	}
	return ChargeStatusCode_CHARGE_STATUS_UNKNOWN
}

type RotateEvent struct {
	StatusCode           StatusCode `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=navService.StatusCode" json:"status_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RotateEvent) Reset()         { *m = RotateEvent{} }
func (m *RotateEvent) String() string { return proto.CompactTextString(m) }
func (*RotateEvent) ProtoMessage()    {}
func (*RotateEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{16}
}

func (m *RotateEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RotateEvent.Unmarshal(m, b)
}
func (m *RotateEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RotateEvent.Marshal(b, m, deterministic)
}
func (m *RotateEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RotateEvent.Merge(m, src)
}
func (m *RotateEvent) XXX_Size() int {
	return xxx_messageInfo_RotateEvent.Size(m)
}
func (m *RotateEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_RotateEvent.DiscardUnknown(m)
}

var xxx_messageInfo_RotateEvent proto.InternalMessageInfo

func (m *RotateEvent) GetStatusCode() StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return StatusCode_UNKNOWN
}

type OnNavEventChangeResponse struct {
	NavEventType NavEventType `protobuf:"varint,1,opt,name=nav_event_type,json=navEventType,proto3,enum=navService.NavEventType" json:"nav_event_type,omitempty"`
	// Types that are valid to be assigned to ChangeOneof:
	//	*OnNavEventChangeResponse_MoveEvent
	//	*OnNavEventChangeResponse_NavEvent
	//	*OnNavEventChangeResponse_RotateEvent
	//	*OnNavEventChangeResponse_AutoChargeEvent
	ChangeOneof          isOnNavEventChangeResponse_ChangeOneof `protobuf_oneof:"change_oneof"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *OnNavEventChangeResponse) Reset()         { *m = OnNavEventChangeResponse{} }
func (m *OnNavEventChangeResponse) String() string { return proto.CompactTextString(m) }
func (*OnNavEventChangeResponse) ProtoMessage()    {}
func (*OnNavEventChangeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{17}
}

func (m *OnNavEventChangeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnNavEventChangeResponse.Unmarshal(m, b)
}
func (m *OnNavEventChangeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnNavEventChangeResponse.Marshal(b, m, deterministic)
}
func (m *OnNavEventChangeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnNavEventChangeResponse.Merge(m, src)
}
func (m *OnNavEventChangeResponse) XXX_Size() int {
	return xxx_messageInfo_OnNavEventChangeResponse.Size(m)
}
func (m *OnNavEventChangeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OnNavEventChangeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OnNavEventChangeResponse proto.InternalMessageInfo

func (m *OnNavEventChangeResponse) GetNavEventType() NavEventType {
	if m != nil {
		return m.NavEventType
	}
	return NavEventType_NAV_EVENT_REVERSED
}

type isOnNavEventChangeResponse_ChangeOneof interface {
	isOnNavEventChangeResponse_ChangeOneof()
}

type OnNavEventChangeResponse_MoveEvent struct {
	MoveEvent *MoveEvent `protobuf:"bytes,2,opt,name=move_event,json=moveEvent,proto3,oneof"`
}

type OnNavEventChangeResponse_NavEvent struct {
	NavEvent *NavEvent `protobuf:"bytes,3,opt,name=nav_event,json=navEvent,proto3,oneof"`
}

type OnNavEventChangeResponse_RotateEvent struct {
	RotateEvent *RotateEvent `protobuf:"bytes,4,opt,name=rotate_event,json=rotateEvent,proto3,oneof"`
}

type OnNavEventChangeResponse_AutoChargeEvent struct {
	AutoChargeEvent *AutoChargeEvent `protobuf:"bytes,5,opt,name=auto_charge_event,json=autoChargeEvent,proto3,oneof"`
}

func (*OnNavEventChangeResponse_MoveEvent) isOnNavEventChangeResponse_ChangeOneof() {}

func (*OnNavEventChangeResponse_NavEvent) isOnNavEventChangeResponse_ChangeOneof() {}

func (*OnNavEventChangeResponse_RotateEvent) isOnNavEventChangeResponse_ChangeOneof() {}

func (*OnNavEventChangeResponse_AutoChargeEvent) isOnNavEventChangeResponse_ChangeOneof() {}

func (m *OnNavEventChangeResponse) GetChangeOneof() isOnNavEventChangeResponse_ChangeOneof {
	if m != nil {
		return m.ChangeOneof
	}
	return nil
}

func (m *OnNavEventChangeResponse) GetMoveEvent() *MoveEvent {
	if x, ok := m.GetChangeOneof().(*OnNavEventChangeResponse_MoveEvent); ok {
		return x.MoveEvent
	}
	return nil
}

func (m *OnNavEventChangeResponse) GetNavEvent() *NavEvent {
	if x, ok := m.GetChangeOneof().(*OnNavEventChangeResponse_NavEvent); ok {
		return x.NavEvent
	}
	return nil
}

func (m *OnNavEventChangeResponse) GetRotateEvent() *RotateEvent {
	if x, ok := m.GetChangeOneof().(*OnNavEventChangeResponse_RotateEvent); ok {
		return x.RotateEvent
	}
	return nil
}

func (m *OnNavEventChangeResponse) GetAutoChargeEvent() *AutoChargeEvent {
	if x, ok := m.GetChangeOneof().(*OnNavEventChangeResponse_AutoChargeEvent); ok {
		return x.AutoChargeEvent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*OnNavEventChangeResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*OnNavEventChangeResponse_MoveEvent)(nil),
		(*OnNavEventChangeResponse_NavEvent)(nil),
		(*OnNavEventChangeResponse_RotateEvent)(nil),
		(*OnNavEventChangeResponse_AutoChargeEvent)(nil),
	}
}

type LocationResetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocationResetRequest) Reset()         { *m = LocationResetRequest{} }
func (m *LocationResetRequest) String() string { return proto.CompactTextString(m) }
func (*LocationResetRequest) ProtoMessage()    {}
func (*LocationResetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{18}
}

func (m *LocationResetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocationResetRequest.Unmarshal(m, b)
}
func (m *LocationResetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocationResetRequest.Marshal(b, m, deterministic)
}
func (m *LocationResetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocationResetRequest.Merge(m, src)
}
func (m *LocationResetRequest) XXX_Size() int {
	return xxx_messageInfo_LocationResetRequest.Size(m)
}
func (m *LocationResetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LocationResetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LocationResetRequest proto.InternalMessageInfo

type LocationResetResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocationResetResponse) Reset()         { *m = LocationResetResponse{} }
func (m *LocationResetResponse) String() string { return proto.CompactTextString(m) }
func (*LocationResetResponse) ProtoMessage()    {}
func (*LocationResetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{19}
}

func (m *LocationResetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocationResetResponse.Unmarshal(m, b)
}
func (m *LocationResetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocationResetResponse.Marshal(b, m, deterministic)
}
func (m *LocationResetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocationResetResponse.Merge(m, src)
}
func (m *LocationResetResponse) XXX_Size() int {
	return xxx_messageInfo_LocationResetResponse.Size(m)
}
func (m *LocationResetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LocationResetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LocationResetResponse proto.InternalMessageInfo

// 线路数据
type Route struct {
	Id                   string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsActive             bool          `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	RoutePoints          []*RoutePoint `protobuf:"bytes,4,rep,name=route_points,json=routePoints,proto3" json:"route_points,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{20}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Route) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Route) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Route) GetRoutePoints() []*RoutePoint {
	if m != nil {
		return m.RoutePoints
	}
	return nil
}

// 线路点数据
type RoutePoint struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Rotate               uint32   `protobuf:"varint,2,opt,name=rotate,proto3" json:"rotate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoutePoint) Reset()         { *m = RoutePoint{} }
func (m *RoutePoint) String() string { return proto.CompactTextString(m) }
func (*RoutePoint) ProtoMessage()    {}
func (*RoutePoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{21}
}

func (m *RoutePoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoutePoint.Unmarshal(m, b)
}
func (m *RoutePoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoutePoint.Marshal(b, m, deterministic)
}
func (m *RoutePoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoutePoint.Merge(m, src)
}
func (m *RoutePoint) XXX_Size() int {
	return xxx_messageInfo_RoutePoint.Size(m)
}
func (m *RoutePoint) XXX_DiscardUnknown() {
	xxx_messageInfo_RoutePoint.DiscardUnknown(m)
}

var xxx_messageInfo_RoutePoint proto.InternalMessageInfo

func (m *RoutePoint) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RoutePoint) GetRotate() uint32 {
	if m != nil {
		return m.Rotate
	}
	return 0
}

// 创建线路请求
// route.name为空时将创建随机名
// route.is_active仅允许唯一激活, 若创建线路指定为激活将自动设置此线路为激活
// route.route_points若为空将自动创建默认数量线路点
type NewRouteRequest struct {
	Route                *Route   `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewRouteRequest) Reset()         { *m = NewRouteRequest{} }
func (m *NewRouteRequest) String() string { return proto.CompactTextString(m) }
func (*NewRouteRequest) ProtoMessage()    {}
func (*NewRouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{22}
}

func (m *NewRouteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewRouteRequest.Unmarshal(m, b)
}
func (m *NewRouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewRouteRequest.Marshal(b, m, deterministic)
}
func (m *NewRouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRouteRequest.Merge(m, src)
}
func (m *NewRouteRequest) XXX_Size() int {
	return xxx_messageInfo_NewRouteRequest.Size(m)
}
func (m *NewRouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewRouteRequest proto.InternalMessageInfo

func (m *NewRouteRequest) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type NewRouteResponse struct {
	Route                *Route   `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewRouteResponse) Reset()         { *m = NewRouteResponse{} }
func (m *NewRouteResponse) String() string { return proto.CompactTextString(m) }
func (*NewRouteResponse) ProtoMessage()    {}
func (*NewRouteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{23}
}

func (m *NewRouteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewRouteResponse.Unmarshal(m, b)
}
func (m *NewRouteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewRouteResponse.Marshal(b, m, deterministic)
}
func (m *NewRouteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRouteResponse.Merge(m, src)
}
func (m *NewRouteResponse) XXX_Size() int {
	return xxx_messageInfo_NewRouteResponse.Size(m)
}
func (m *NewRouteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRouteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewRouteResponse proto.InternalMessageInfo

func (m *NewRouteResponse) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type ListRoutesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRoutesRequest) Reset()         { *m = ListRoutesRequest{} }
func (m *ListRoutesRequest) String() string { return proto.CompactTextString(m) }
func (*ListRoutesRequest) ProtoMessage()    {}
func (*ListRoutesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{24}
}

func (m *ListRoutesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRoutesRequest.Unmarshal(m, b)
}
func (m *ListRoutesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRoutesRequest.Marshal(b, m, deterministic)
}
func (m *ListRoutesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoutesRequest.Merge(m, src)
}
func (m *ListRoutesRequest) XXX_Size() int {
	return xxx_messageInfo_ListRoutesRequest.Size(m)
}
func (m *ListRoutesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoutesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoutesRequest proto.InternalMessageInfo

type ListRoutesResponse struct {
	Routes               []*Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRoutesResponse) Reset()         { *m = ListRoutesResponse{} }
func (m *ListRoutesResponse) String() string { return proto.CompactTextString(m) }
func (*ListRoutesResponse) ProtoMessage()    {}
func (*ListRoutesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{25}
}

func (m *ListRoutesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRoutesResponse.Unmarshal(m, b)
}
func (m *ListRoutesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRoutesResponse.Marshal(b, m, deterministic)
}
func (m *ListRoutesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoutesResponse.Merge(m, src)
}
func (m *ListRoutesResponse) XXX_Size() int {
	return xxx_messageInfo_ListRoutesResponse.Size(m)
}
func (m *ListRoutesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoutesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoutesResponse proto.InternalMessageInfo

func (m *ListRoutesResponse) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

type GetRouteRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRouteRequest) Reset()         { *m = GetRouteRequest{} }
func (m *GetRouteRequest) String() string { return proto.CompactTextString(m) }
func (*GetRouteRequest) ProtoMessage()    {}
func (*GetRouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{26}
}

func (m *GetRouteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRouteRequest.Unmarshal(m, b)
}
func (m *GetRouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRouteRequest.Marshal(b, m, deterministic)
}
func (m *GetRouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRouteRequest.Merge(m, src)
}
func (m *GetRouteRequest) XXX_Size() int {
	return xxx_messageInfo_GetRouteRequest.Size(m)
}
func (m *GetRouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRouteRequest proto.InternalMessageInfo

func (m *GetRouteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetRouteResponse struct {
	Route                *Route   `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRouteResponse) Reset()         { *m = GetRouteResponse{} }
func (m *GetRouteResponse) String() string { return proto.CompactTextString(m) }
func (*GetRouteResponse) ProtoMessage()    {}
func (*GetRouteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{27}
}

func (m *GetRouteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRouteResponse.Unmarshal(m, b)
}
func (m *GetRouteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRouteResponse.Marshal(b, m, deterministic)
}
func (m *GetRouteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRouteResponse.Merge(m, src)
}
func (m *GetRouteResponse) XXX_Size() int {
	return xxx_messageInfo_GetRouteResponse.Size(m)
}
func (m *GetRouteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRouteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRouteResponse proto.InternalMessageInfo

func (m *GetRouteResponse) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

// 更新线路请求
// route.id根据此id获取线路
// route.name不可为空
// route.route_points不可为空
type UpdateRouteRequest struct {
	Route                *Route   `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRouteRequest) Reset()         { *m = UpdateRouteRequest{} }
func (m *UpdateRouteRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRouteRequest) ProtoMessage()    {}
func (*UpdateRouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{28}
}

func (m *UpdateRouteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRouteRequest.Unmarshal(m, b)
}
func (m *UpdateRouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRouteRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRouteRequest.Merge(m, src)
}
func (m *UpdateRouteRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRouteRequest.Size(m)
}
func (m *UpdateRouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRouteRequest proto.InternalMessageInfo

func (m *UpdateRouteRequest) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type UpdateRouteResponse struct {
	Route                *Route   `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRouteResponse) Reset()         { *m = UpdateRouteResponse{} }
func (m *UpdateRouteResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateRouteResponse) ProtoMessage()    {}
func (*UpdateRouteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{29}
}

func (m *UpdateRouteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRouteResponse.Unmarshal(m, b)
}
func (m *UpdateRouteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRouteResponse.Marshal(b, m, deterministic)
}
func (m *UpdateRouteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRouteResponse.Merge(m, src)
}
func (m *UpdateRouteResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateRouteResponse.Size(m)
}
func (m *UpdateRouteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRouteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRouteResponse proto.InternalMessageInfo

func (m *UpdateRouteResponse) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type DeleteRoutesRequest struct {
	RoutesId             []string `protobuf:"bytes,1,rep,name=routes_id,json=routesId,proto3" json:"routes_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRoutesRequest) Reset()         { *m = DeleteRoutesRequest{} }
func (m *DeleteRoutesRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRoutesRequest) ProtoMessage()    {}
func (*DeleteRoutesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{30}
}

func (m *DeleteRoutesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRoutesRequest.Unmarshal(m, b)
}
func (m *DeleteRoutesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRoutesRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRoutesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRoutesRequest.Merge(m, src)
}
func (m *DeleteRoutesRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRoutesRequest.Size(m)
}
func (m *DeleteRoutesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRoutesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRoutesRequest proto.InternalMessageInfo

func (m *DeleteRoutesRequest) GetRoutesId() []string {
	if m != nil {
		return m.RoutesId
	}
	return nil
}

type DeleteRoutesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRoutesResponse) Reset()         { *m = DeleteRoutesResponse{} }
func (m *DeleteRoutesResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteRoutesResponse) ProtoMessage()    {}
func (*DeleteRoutesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03fef413b705070, []int{31}
}

func (m *DeleteRoutesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRoutesResponse.Unmarshal(m, b)
}
func (m *DeleteRoutesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRoutesResponse.Marshal(b, m, deterministic)
}
func (m *DeleteRoutesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRoutesResponse.Merge(m, src)
}
func (m *DeleteRoutesResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteRoutesResponse.Size(m)
}
func (m *DeleteRoutesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRoutesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRoutesResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("navService.StatusCode", StatusCode_name, StatusCode_value)
	proto.RegisterEnum("navService.MoveDirection", MoveDirection_name, MoveDirection_value)
	proto.RegisterEnum("navService.RoamingType", RoamingType_name, RoamingType_value)
	proto.RegisterEnum("navService.ChargeStatusCode", ChargeStatusCode_name, ChargeStatusCode_value)
	proto.RegisterEnum("navService.NavEventType", NavEventType_name, NavEventType_value)
	proto.RegisterType((*MoveRequest)(nil), "navService.MoveRequest")
	proto.RegisterType((*MoveResponse)(nil), "navService.MoveResponse")
	proto.RegisterType((*NavTarget)(nil), "navService.NavTarget")
	proto.RegisterType((*NavRoaming)(nil), "navService.NavRoaming")
	proto.RegisterType((*NavToRequest)(nil), "navService.NavToRequest")
	proto.RegisterType((*NavToResponse)(nil), "navService.NavToResponse")
	proto.RegisterType((*NavStopRequest)(nil), "navService.NavStopRequest")
	proto.RegisterType((*NavStopResponse)(nil), "navService.NavStopResponse")
	proto.RegisterType((*AutoChargeRequest)(nil), "navService.AutoChargeRequest")
	proto.RegisterType((*AutoChargeResponse)(nil), "navService.AutoChargeResponse")
	proto.RegisterType((*RotateRequest)(nil), "navService.RotateRequest")
	proto.RegisterType((*RotateResponse)(nil), "navService.RotateResponse")
	proto.RegisterType((*OnNavEventChangeRequest)(nil), "navService.OnNavEventChangeRequest")
	proto.RegisterType((*MoveEvent)(nil), "navService.MoveEvent")
	proto.RegisterType((*NavEvent)(nil), "navService.NavEvent")
	proto.RegisterType((*AutoChargeEvent)(nil), "navService.AutoChargeEvent")
	proto.RegisterType((*RotateEvent)(nil), "navService.RotateEvent")
	proto.RegisterType((*OnNavEventChangeResponse)(nil), "navService.OnNavEventChangeResponse")
	proto.RegisterType((*LocationResetRequest)(nil), "navService.LocationResetRequest")
	proto.RegisterType((*LocationResetResponse)(nil), "navService.LocationResetResponse")
	proto.RegisterType((*Route)(nil), "navService.Route")
	proto.RegisterType((*RoutePoint)(nil), "navService.RoutePoint")
	proto.RegisterType((*NewRouteRequest)(nil), "navService.NewRouteRequest")
	proto.RegisterType((*NewRouteResponse)(nil), "navService.NewRouteResponse")
	proto.RegisterType((*ListRoutesRequest)(nil), "navService.ListRoutesRequest")
	proto.RegisterType((*ListRoutesResponse)(nil), "navService.ListRoutesResponse")
	proto.RegisterType((*GetRouteRequest)(nil), "navService.GetRouteRequest")
	proto.RegisterType((*GetRouteResponse)(nil), "navService.GetRouteResponse")
	proto.RegisterType((*UpdateRouteRequest)(nil), "navService.UpdateRouteRequest")
	proto.RegisterType((*UpdateRouteResponse)(nil), "navService.UpdateRouteResponse")
	proto.RegisterType((*DeleteRoutesRequest)(nil), "navService.DeleteRoutesRequest")
	proto.RegisterType((*DeleteRoutesResponse)(nil), "navService.DeleteRoutesResponse")
}

func init() { proto.RegisterFile("nav.proto", fileDescriptor_e03fef413b705070) }

var fileDescriptor_e03fef413b705070 = []byte{
	// 1816 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x4f, 0x73, 0x1b, 0x49,
	0x15, 0xf7, 0xc8, 0x92, 0x2d, 0x3d, 0xc9, 0xf6, 0xb8, 0x6d, 0x4b, 0xb2, 0xec, 0xc4, 0xce, 0xec,
	0x6e, 0xad, 0xf1, 0x21, 0xde, 0xf2, 0x2e, 0x2c, 0x2c, 0xb0, 0xd4, 0x44, 0x9a, 0xd8, 0xca, 0xda,
	0x33, 0xae, 0x96, 0xec, 0x54, 0x8a, 0x82, 0x61, 0x56, 0x6a, 0xbc, 0x53, 0xc8, 0xd3, 0x42, 0x33,
	0x56, 0x48, 0x71, 0x83, 0xcb, 0xde, 0xb9, 0xf0, 0x09, 0x38, 0xf0, 0x01, 0xb8, 0xf2, 0x01, 0x38,
	0xf2, 0x05, 0x38, 0x70, 0xe6, 0x03, 0x70, 0xa2, 0x5e, 0x77, 0xcf, 0x3f, 0x49, 0x49, 0x65, 0x13,
	0x6e, 0x7a, 0x7f, 0xfa, 0xfd, 0xde, 0xbf, 0xe9, 0xf7, 0x5a, 0x50, 0x09, 0xbc, 0xe9, 0xe3, 0xf1,
	0x84, 0x47, 0x9c, 0x40, 0xe0, 0x4d, 0x7b, 0x6c, 0x32, 0xf5, 0x07, 0xac, 0xb5, 0x7f, 0xcb, 0xf9,
	0xed, 0x88, 0x9d, 0x78, 0x63, 0xff, 0xc4, 0x0b, 0x02, 0x1e, 0x79, 0x91, 0xcf, 0x83, 0x50, 0x6a,
	0x1a, 0xdf, 0x6a, 0x50, 0xbd, 0xe4, 0x53, 0x46, 0xd9, 0x6f, 0xef, 0x59, 0x18, 0x91, 0x6d, 0x28,
	0x85, 0x63, 0xc6, 0x86, 0x4d, 0xed, 0x50, 0x3b, 0x5a, 0xa3, 0x92, 0x20, 0x75, 0x58, 0x99, 0x48,
	0x76, 0x41, 0xb0, 0x15, 0x45, 0x3e, 0x87, 0xca, 0xd0, 0x9f, 0xb0, 0x01, 0x5a, 0x6c, 0x2e, 0x1f,
	0x6a, 0x47, 0xeb, 0xa7, 0xbb, 0x8f, 0x53, 0xec, 0xc7, 0x68, 0xb9, 0x13, 0x2b, 0xd0, 0x54, 0x97,
	0x10, 0x28, 0xde, 0xf1, 0x21, 0x6b, 0x16, 0x0f, 0xb5, 0xa3, 0x0a, 0x15, 0xbf, 0x8d, 0x33, 0xa8,
	0x49, 0x4f, 0xc2, 0x31, 0x0f, 0x42, 0x46, 0x3e, 0x87, 0x6a, 0x18, 0x79, 0xd1, 0x7d, 0xe8, 0x0e,
	0x50, 0x55, 0x13, 0xe6, 0xeb, 0x59, 0xf3, 0x3d, 0x21, 0x6e, 0xf3, 0x21, 0xa3, 0x10, 0x26, 0xbf,
	0x8d, 0xef, 0x43, 0xc5, 0xf6, 0xa6, 0x7d, 0x6f, 0x72, 0xcb, 0x44, 0x40, 0x7e, 0x30, 0x64, 0xbf,
	0x13, 0xe7, 0x2b, 0x54, 0x12, 0x88, 0x1f, 0x78, 0x77, 0x4c, 0x84, 0x53, 0xa1, 0xe2, 0xb7, 0xf1,
	0x77, 0x0d, 0xc0, 0xf6, 0xa6, 0x94, 0x7b, 0x77, 0x7e, 0x70, 0x4b, 0x4c, 0xd0, 0x03, 0x6f, 0xea,
	0x4e, 0x24, 0xe9, 0x46, 0xaf, 0xc6, 0xb1, 0x0f, 0x8d, 0xac, 0x0f, 0x4a, 0xbd, 0xff, 0x6a, 0xcc,
	0xe8, 0x7a, 0x90, 0x1c, 0x47, 0x9a, 0xec, 0x42, 0xf9, 0xa5, 0xe7, 0x47, 0x6e, 0xc8, 0x06, 0x02,
	0xa9, 0x44, 0x57, 0x91, 0xee, 0xb1, 0x01, 0xf9, 0x0c, 0xea, 0x89, 0x65, 0xe1, 0xa8, 0x2b, 0x1c,
	0x63, 0x61, 0x73, 0xf9, 0x70, 0xf9, 0xa8, 0x42, 0xb7, 0x95, 0x54, 0x46, 0xd1, 0x95, 0x32, 0xf2,
	0x00, 0x80, 0x4f, 0x86, 0x6c, 0xe2, 0x8e, 0x38, 0x1f, 0x8b, 0xe4, 0x95, 0x69, 0x45, 0x70, 0x2e,
	0x38, 0x1f, 0x1b, 0x7f, 0xd3, 0xa0, 0x86, 0x91, 0xf3, 0xb8, 0x9a, 0x27, 0xb0, 0x22, 0xad, 0x0b,
	0xcf, 0xab, 0xa7, 0x3b, 0x59, 0xcf, 0x93, 0x1c, 0x9d, 0x2f, 0x51, 0xa5, 0x46, 0x4e, 0x61, 0x55,
	0x01, 0x8b, 0x72, 0x56, 0xf3, 0xf9, 0x4e, 0xb3, 0x73, 0xbe, 0x44, 0x63, 0xc5, 0xb4, 0x65, 0x0a,
	0xd9, 0x96, 0xd9, 0x83, 0x4a, 0xf8, 0x2a, 0x18, 0xb8, 0x49, 0x99, 0xcb, 0xb4, 0x8c, 0x8c, 0x4b,
	0x3e, 0x64, 0x4f, 0xd6, 0xa1, 0xa6, 0xa2, 0xe6, 0x01, 0xe3, 0xbf, 0x36, 0xfe, 0xaa, 0xc1, 0x9a,
	0x72, 0xfc, 0x3d, 0x8b, 0x9f, 0x09, 0xb9, 0xf0, 0x76, 0x21, 0x1f, 0x00, 0xf8, 0xa1, 0x9b, 0x8d,
	0xba, 0x7c, 0xbe, 0x44, 0x2b, 0x7e, 0xa8, 0x42, 0x9d, 0x73, 0x56, 0x87, 0x75, 0xdb, 0x9b, 0xf6,
	0x22, 0x3e, 0x56, 0x69, 0x36, 0x9e, 0xc1, 0x46, 0xc2, 0x79, 0xdf, 0xe6, 0xfd, 0x8b, 0x06, 0x9b,
	0xe6, 0x7d, 0xc4, 0xdb, 0xdf, 0x20, 0x66, 0x5c, 0xc8, 0x26, 0xac, 0x0c, 0x04, 0x43, 0x58, 0x42,
	0x07, 0x15, 0x2d, 0x24, 0x5e, 0x30, 0x60, 0x23, 0x11, 0xaf, 0x94, 0x08, 0x9a, 0x7c, 0x04, 0x6b,
	0x52, 0xc7, 0x1d, 0x4f, 0x58, 0xc8, 0xa2, 0x24, 0xb6, 0x9a, 0x64, 0x5f, 0x09, 0x2e, 0x39, 0x80,
	0x6a, 0xe4, 0xdf, 0x31, 0x7e, 0x2f, 0xfb, 0xb4, 0x28, 0x8a, 0x08, 0x8a, 0xd5, 0x63, 0x83, 0x27,
	0x3b, 0xb0, 0xa5, 0xec, 0xf0, 0x31, 0x7e, 0xbc, 0x2a, 0x0d, 0xbf, 0x02, 0x92, 0xf5, 0x53, 0xc5,
	0xfd, 0x0c, 0x88, 0x52, 0x9e, 0x0f, 0x7f, 0x3f, 0x1b, 0xbe, 0x3c, 0x97, 0x49, 0x82, 0x3e, 0x98,
	0xe1, 0x18, 0xd7, 0xb0, 0x46, 0xf1, 0xba, 0x4a, 0xb2, 0x50, 0x87, 0x92, 0x17, 0xdc, 0x8e, 0xa4,
	0xbd, 0xd2, 0xf9, 0x12, 0x95, 0x24, 0xd9, 0x87, 0xf2, 0x84, 0x8f, 0x46, 0x5f, 0x7b, 0x83, 0xdf,
	0x24, 0x59, 0x48, 0x38, 0x58, 0xbf, 0x89, 0x30, 0xa3, 0x1c, 0xef, 0xc2, 0x7a, 0x6c, 0xf6, 0x7d,
	0x8b, 0xb5, 0x0b, 0x0d, 0x27, 0xb0, 0xbd, 0xa9, 0x35, 0x65, 0x41, 0xd4, 0xfe, 0xc6, 0x0b, 0x92,
	0x8a, 0x19, 0x1d, 0xa8, 0xe0, 0x6d, 0x26, 0x24, 0xef, 0x0e, 0xf0, 0x0a, 0xca, 0xb1, 0xf9, 0x77,
	0xff, 0x24, 0x3e, 0x03, 0x9c, 0x07, 0xee, 0x5b, 0x7c, 0x16, 0x14, 0x67, 0x88, 0xfc, 0x69, 0xfc,
	0x02, 0x36, 0xd2, 0xfa, 0x4a, 0x0f, 0xfe, 0x9f, 0xc5, 0x7d, 0x0a, 0x55, 0x59, 0x85, 0xf7, 0xcc,
	0xd0, 0xbf, 0x0a, 0xd0, 0x9c, 0xaf, 0x81, 0x2a, 0xec, 0x97, 0x80, 0x57, 0xb2, 0xcb, 0x50, 0x94,
	0xbd, 0xc1, 0x9b, 0x33, 0xd1, 0x8b, 0xb3, 0xe2, 0x0a, 0xaf, 0x05, 0x19, 0x8a, 0xfc, 0x00, 0xe0,
	0x8e, 0x4f, 0x99, 0x34, 0xb0, 0x28, 0x73, 0x49, 0x89, 0xf1, 0xca, 0xb8, 0x4b, 0xea, 0xfd, 0xa9,
	0x18, 0xc6, 0xea, 0x98, 0xbc, 0x48, 0xb7, 0x17, 0x41, 0x62, 0x9f, 0xc6, 0x80, 0xe4, 0x27, 0x49,
	0x9f, 0xca, 0x73, 0x45, 0x71, 0x6e, 0x66, 0xd8, 0x24, 0x19, 0x3b, 0x5f, 0xa2, 0xd5, 0x49, 0x26,
	0x81, 0x5d, 0xd8, 0xf4, 0xee, 0x23, 0xee, 0xaa, 0x02, 0x49, 0x13, 0x25, 0x61, 0x62, 0x2f, 0x6b,
	0x62, 0xa6, 0xa6, 0xe7, 0x4b, 0x74, 0xc3, 0xcb, 0xb3, 0xf0, 0x83, 0x19, 0x88, 0x3c, 0xaa, 0x0f,
	0xa6, 0x0e, 0xdb, 0x17, 0x7c, 0x20, 0xd6, 0x06, 0x8a, 0x57, 0x46, 0xdc, 0xe2, 0x0d, 0xd8, 0x99,
	0xe1, 0xcb, 0xb4, 0x1b, 0x7f, 0xd4, 0xa0, 0x44, 0xf9, 0x7d, 0xc4, 0xc8, 0x3a, 0x14, 0xfc, 0xa1,
	0x1a, 0xbd, 0x05, 0x7f, 0xb8, 0x68, 0xee, 0xe2, 0xa4, 0xf0, 0x43, 0xd7, 0x1b, 0x44, 0xfe, 0x94,
	0xc9, 0x3b, 0x8a, 0x96, 0xfd, 0xd0, 0x14, 0x34, 0xf9, 0x11, 0x26, 0xe5, 0x3e, 0x62, 0xee, 0x98,
	0xfb, 0x41, 0x14, 0x36, 0x8b, 0x87, 0xcb, 0xb3, 0x53, 0x49, 0x20, 0x5d, 0xa1, 0x18, 0x33, 0x12,
	0xff, 0x0e, 0x8d, 0x1f, 0x02, 0xa4, 0xa2, 0x04, 0x59, 0xcb, 0x20, 0xe3, 0x5a, 0x23, 0x52, 0x98,
	0xac, 0x35, 0x82, 0x32, 0xbe, 0x80, 0x0d, 0x9b, 0xbd, 0x14, 0x87, 0xe3, 0xab, 0xe7, 0x63, 0x28,
	0x09, 0xdb, 0x6a, 0x90, 0x6e, 0xce, 0x39, 0x40, 0xa5, 0xdc, 0xf8, 0x31, 0xe8, 0xe9, 0x59, 0xd5,
	0x86, 0x6f, 0x7d, 0x78, 0x0b, 0x36, 0x2f, 0xfc, 0x30, 0x12, 0xbc, 0x30, 0x4e, 0xf3, 0xcf, 0x80,
	0x64, 0x99, 0xca, 0xe6, 0xf7, 0xd0, 0x77, 0xe4, 0x34, 0x35, 0x91, 0x92, 0x05, 0x46, 0x95, 0x82,
	0xf1, 0x08, 0x36, 0xce, 0x58, 0x94, 0x0b, 0x67, 0xa6, 0x2e, 0xe8, 0x75, 0xaa, 0xf2, 0x5d, 0xbd,
	0xfe, 0x29, 0x90, 0xeb, 0xf1, 0x10, 0x2f, 0xd4, 0x77, 0xca, 0xd8, 0x97, 0xb0, 0x95, 0x3b, 0xfe,
	0x5d, 0xe1, 0x4f, 0x61, 0xab, 0xc3, 0x46, 0x4c, 0x9d, 0x8f, 0xd3, 0x86, 0x6d, 0x25, 0xe3, 0x77,
	0x45, 0xa4, 0xb8, 0x54, 0x95, 0x25, 0xa3, 0x3b, 0xc4, 0x96, 0xce, 0x9f, 0x91, 0xa0, 0xc7, 0xff,
	0xd1, 0x00, 0xd2, 0x8b, 0x86, 0x54, 0x61, 0xf5, 0xda, 0xfe, 0xca, 0x76, 0x9e, 0xdb, 0xfa, 0x12,
	0x12, 0xbd, 0xbe, 0x73, 0x75, 0x65, 0x75, 0x74, 0x8d, 0x00, 0xac, 0x5c, 0x3a, 0x37, 0x5d, 0xfb,
	0x4c, 0x2f, 0x90, 0x35, 0xa8, 0x5c, 0x51, 0xeb, 0xca, 0xa4, 0x48, 0x2e, 0xa3, 0xa8, 0x6d, 0xda,
	0x6d, 0xeb, 0x42, 0x2f, 0x92, 0x1a, 0x94, 0xa9, 0x75, 0x61, 0x99, 0x3d, 0xab, 0xa3, 0x97, 0x88,
	0x0e, 0x35, 0x8b, 0x52, 0xd7, 0x79, 0xd2, 0xeb, 0x9b, 0xed, 0x0b, 0x4b, 0x07, 0xb2, 0x09, 0x6b,
	0xc8, 0xb1, 0x9d, 0xbe, 0x4b, 0x2d, 0xb3, 0xf3, 0x42, 0xaf, 0x12, 0x02, 0xeb, 0xc8, 0xba, 0x74,
	0xfa, 0x0e, 0x75, 0x9f, 0x9a, 0xdd, 0x0b, 0xbd, 0x46, 0xb6, 0x41, 0x47, 0xde, 0x73, 0xea, 0xd8,
	0x67, 0x6e, 0xdf, 0xa4, 0x67, 0x56, 0x5f, 0x5f, 0x23, 0xeb, 0x00, 0xd4, 0x7a, 0xe6, 0x2a, 0x3f,
	0xb6, 0x63, 0xda, 0x36, 0x05, 0xbd, 0x83, 0x70, 0x48, 0xb7, 0xcf, 0x4d, 0x7a, 0x86, 0x9c, 0x7a,
	0xcc, 0xa1, 0x4e, 0xdf, 0xec, 0x23, 0xa7, 0x71, 0xfc, 0x67, 0x0d, 0xd6, 0x72, 0x5b, 0x3a, 0x86,
	0xa9, 0x5c, 0x96, 0x31, 0x3f, 0x75, 0xe8, 0x73, 0x93, 0x62, 0xcc, 0x35, 0x28, 0x3f, 0x31, 0xdb,
	0x5f, 0x09, 0xaa, 0x40, 0xca, 0x50, 0xbc, 0xb0, 0x9e, 0xf6, 0xf5, 0x65, 0x52, 0x81, 0x12, 0xed,
	0x9e, 0x9d, 0xf7, 0xf5, 0x22, 0x02, 0x20, 0xd3, 0x8d, 0x0f, 0x95, 0x30, 0x42, 0x21, 0x4c, 0x58,
	0x2b, 0xc8, 0x12, 0x4a, 0x89, 0xb1, 0x55, 0x0c, 0x5a, 0x6a, 0x25, 0xbc, 0xf2, 0xf1, 0x0b, 0x9c,
	0x10, 0xd9, 0x65, 0x7a, 0x87, 0x3a, 0xe6, 0x65, 0x17, 0x33, 0xf0, 0xe2, 0xca, 0x72, 0xdb, 0x8e,
	0xdd, 0xef, 0xda, 0xd7, 0xe8, 0x65, 0x1d, 0x48, 0x4e, 0xe4, 0xd0, 0x8e, 0x45, 0x75, 0x8d, 0x34,
	0x60, 0x2b, 0xc7, 0xa7, 0xa6, 0xdd, 0x71, 0x2e, 0xf5, 0xc2, 0xf1, 0x7f, 0x35, 0xd0, 0x67, 0x67,
	0x14, 0x02, 0x88, 0x54, 0x59, 0x6e, 0xaf, 0x6f, 0xf6, 0xaf, 0x7b, 0x6e, 0x5a, 0xfa, 0x3d, 0x68,
	0xe4, 0x45, 0x69, 0xbd, 0x35, 0xd2, 0x82, 0x7a, 0x5e, 0x98, 0x54, 0xbc, 0x40, 0xf6, 0xa1, 0x99,
	0x97, 0xb5, 0x1d, 0xdb, 0xb6, 0xda, 0x7d, 0xd9, 0x29, 0x73, 0x27, 0x93, 0x52, 0x15, 0xc9, 0x01,
	0xec, 0xe5, 0x65, 0x9d, 0x6e, 0x2f, 0x73, 0xb8, 0x84, 0xc1, 0x29, 0x05, 0xc5, 0x96, 0xcd, 0xb2,
	0x42, 0x1e, 0x42, 0x2b, 0x7f, 0xd2, 0x36, 0x6f, 0xd2, 0x9e, 0x5b, 0x3d, 0x0e, 0xc4, 0x23, 0x21,
	0x1d, 0x72, 0x75, 0x20, 0xa8, 0x61, 0xdd, 0x58, 0x36, 0x76, 0xe1, 0x8d, 0x45, 0xd1, 0xf7, 0x25,
	0x6c, 0xa7, 0x4b, 0xe7, 0xc6, 0x92, 0x02, 0x5d, 0xc3, 0x36, 0x4f, 0xf4, 0xf4, 0x02, 0xd9, 0x81,
	0x4d, 0xf3, 0xba, 0xef, 0xb8, 0x0a, 0x4b, 0xb2, 0x97, 0x45, 0x8b, 0x61, 0x7b, 0xc5, 0x9c, 0xe2,
	0xe9, 0x3f, 0x2a, 0x62, 0xb9, 0x6f, 0xf3, 0x20, 0xc2, 0x9d, 0x8c, 0x4d, 0xc8, 0x73, 0x28, 0x62,
	0xcf, 0x91, 0xc6, 0xec, 0x28, 0x55, 0xdf, 0x6e, 0xab, 0x39, 0x2f, 0x50, 0xa3, 0xa5, 0xf9, 0x87,
	0x7f, 0xfe, 0xfb, 0x4f, 0x05, 0x42, 0x74, 0xf1, 0x9e, 0x9d, 0x9e, 0x9e, 0x04, 0xde, 0xf4, 0x04,
	0x07, 0xef, 0x91, 0xf6, 0x89, 0x46, 0x7e, 0x0e, 0x25, 0xf1, 0x8c, 0x20, 0xb3, 0x03, 0x3e, 0x79,
	0x12, 0xb5, 0x76, 0x17, 0x48, 0x94, 0xed, 0x07, 0xc2, 0x76, 0xc3, 0x20, 0x59, 0xdb, 0x62, 0x73,
	0xe2, 0x5f, 0x68, 0xc7, 0x64, 0x00, 0xab, 0x6a, 0xcb, 0x27, 0xad, 0x19, 0x23, 0x99, 0xc7, 0x40,
	0x6b, 0x6f, 0xa1, 0x4c, 0x41, 0x1c, 0x08, 0x88, 0x5d, 0x63, 0x7b, 0x16, 0x22, 0x8c, 0xf8, 0x18,
	0x41, 0x38, 0x40, 0x3a, 0xa1, 0xc9, 0x83, 0xc5, 0x93, 0x3b, 0x86, 0x7a, 0xf8, 0x3a, 0xb1, 0x42,
	0x33, 0x04, 0xda, 0xbe, 0xd1, 0xc8, 0xa2, 0x65, 0xb6, 0x04, 0x04, 0xfc, 0x25, 0xac, 0xc8, 0xad,
	0x82, 0xec, 0xce, 0x6f, 0x1a, 0x31, 0x50, 0x6b, 0x91, 0xe8, 0x4d, 0x59, 0x93, 0x83, 0x14, 0xed,
	0x7f, 0xab, 0x81, 0x3e, 0xbb, 0x9f, 0x91, 0x0f, 0xb2, 0xf6, 0x5e, 0xb3, 0x41, 0xb7, 0x3e, 0x7c,
	0xb3, 0x92, 0x82, 0xff, 0x58, 0xc0, 0x3f, 0x22, 0x07, 0x59, 0x78, 0x1e, 0xb8, 0xe9, 0xde, 0x27,
	0x77, 0x99, 0x4f, 0x34, 0xf2, 0x7b, 0x58, 0xcb, 0xed, 0x2b, 0xe4, 0x30, 0x8b, 0xb0, 0x68, 0xc5,
	0x69, 0x3d, 0x7a, 0x83, 0x86, 0x72, 0xe0, 0x23, 0xe1, 0xc0, 0x81, 0xd1, 0xca, 0x3a, 0x30, 0x52,
	0xaa, 0xae, 0x78, 0x63, 0x61, 0x1e, 0x6e, 0xa1, 0x1c, 0xef, 0x05, 0x24, 0xdf, 0x22, 0xf9, 0x4d,
	0xa3, 0xb5, 0xbf, 0x58, 0xa8, 0xd0, 0x0e, 0x05, 0x5a, 0xcb, 0xd8, 0xc9, 0x35, 0x10, 0x7b, 0xe9,
	0x8a, 0xd1, 0xa6, 0x3a, 0x28, 0x5d, 0x17, 0xf2, 0x1d, 0x34, 0xb7, 0x5b, 0xe4, 0x3b, 0x68, 0x7e,
	0xcb, 0x58, 0xdc, 0x41, 0x23, 0x3f, 0x8c, 0x24, 0x5e, 0x88, 0x80, 0x21, 0x54, 0x33, 0xf3, 0x9b,
	0xe4, 0x4c, 0xce, 0xef, 0x05, 0xad, 0x83, 0xd7, 0xca, 0x15, 0xe6, 0x07, 0x02, 0xf3, 0x81, 0xd1,
	0xcc, 0x62, 0xde, 0x0b, 0xc5, 0x34, 0xca, 0x97, 0x50, 0xcb, 0x0e, 0x70, 0x92, 0xb3, 0xba, 0x60,
	0x1d, 0x68, 0x1d, 0xbe, 0x5e, 0x41, 0xe1, 0x7e, 0x28, 0x70, 0x1f, 0x1a, 0xbb, 0x59, 0xdc, 0xa1,
	0xd0, 0x4c, 0xa3, 0xfd, 0x7a, 0x45, 0xfc, 0x6f, 0xf6, 0xe9, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x4d, 0x72, 0x5a, 0x0c, 0x6e, 0x13, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NavControllerClient is the client API for NavController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NavControllerClient interface {
	// 遥控移动
	// 当机器人处于非空闲及遥控移动状态时， 当前链接将被强制关闭, 错误描述为: "[naving|charging|rotating] reject"
	// 当机器人处于 *其它用户* 的遥控移动状态时， *你* 将收到MoveStatusResponse状态码REJ_MOVING
	// 当机器人处于 *你* 的遥控移动状态时, 请在500ms内持续发送遥控指令， 超时将自动停止移动
	// 当机器人处于 *你* 的遥控移动状态时, 若5秒后无遥控指令的更新, *你* 将接收到MoveStatusResponse状态码RELEASED，
	// 此时遥控移动控制权交由抢占的 *其它用户* 或其它类型目标的操作
	Move(ctx context.Context, opts ...grpc.CallOption) (NavController_MoveClient, error)
	// 导航
	// 当机器人处理遥控移动中|充电中|旋转中时, 错误描述为: "[moving|charging|rotating] reject"
	// 当机器人处理空闲或导航状态时, 将收到导航的目标NavTarget与导航或失败状态
	// 使用目标导航时支持同步异步模式, 参考NavToRequest.sync_mode的参数描述
	NavTo(ctx context.Context, in *NavToRequest, opts ...grpc.CallOption) (*NavToResponse, error)
	// 停止
	// 静止: 立即返回STOPPED
	// 旋转中: 返回旋转状态, STOPPED或CANCEL, 超时3秒
	// 其它: 错误描述为: "[moving|charging] reject"
	NavStop(ctx context.Context, in *NavStopRequest, opts ...grpc.CallOption) (*NavStopResponse, error)
	// 自动充电
	// 当前为充电中|充电连接中: 请求类型为charge|charge_preset等待状态为CHARGE_STATUS_CHARGING|CHARGE_STATUS_CONNECTING|CHARGE_STATUS_RELEASED后返回
	// 当前为充电中|充电连接中: 请求类型为cancel等待状态为CHARGE_STATUS_RELEASED后返回
	// 当前为已释放: 请求类型为cancel将直接返回CHARGE_STATUS_RELEASED
	// 当前为已释放: 请求类型为charge|charge_preset等待状态为CHARGE_STATUS_CHARGING后返回
	// 超时错误: 发送请求后默认60秒后未收到状态更新返回错误描述, 超时时间可在AutoChargeRequest中自定义配置
	AutoCharge(ctx context.Context, in *AutoChargeRequest, opts ...grpc.CallOption) (*AutoChargeResponse, error)
	// 原地旋转
	// 当旋转完成后返回STOPPED
	// 当用户使用NavStop中止时将返回CANCEL
	// 若超时30秒未执行完毕将返回超时错误
	Rotate(ctx context.Context, in *RotateRequest, opts ...grpc.CallOption) (*RotateResponse, error)
	// 导航事件监听
	// 监听导航模块中各类事件的变动更新
	OnNavEventChange(ctx context.Context, in *OnNavEventChangeRequest, opts ...grpc.CallOption) (NavController_OnNavEventChangeClient, error)
	// >=2.2.0
	// 重置当前定位
	// 用于发生定位异常/错误状态，重新初始化导航定位
	// 重定位错误：定位状态超时|无地图|UWB错误
	// 重定位超时判断: 默认3s，仅在非错误状态下重置
	// *目前仅支持无线导航版本，磁导航版本中将直接返回成功状态
	LocationReset(ctx context.Context, in *LocationResetRequest, opts ...grpc.CallOption) (*LocationResetResponse, error)
	// 新建线路
	NewRoute(ctx context.Context, in *NewRouteRequest, opts ...grpc.CallOption) (*NewRouteResponse, error)
	// 获取线路
	ListRoutes(ctx context.Context, in *ListRoutesRequest, opts ...grpc.CallOption) (*ListRoutesResponse, error)
	// 更新线路信息
	UpdateRoute(ctx context.Context, in *UpdateRouteRequest, opts ...grpc.CallOption) (*UpdateRouteResponse, error)
	// 删除线路
	DeleteRoutes(ctx context.Context, in *DeleteRoutesRequest, opts ...grpc.CallOption) (*DeleteRoutesResponse, error)
}

type navControllerClient struct {
	cc *grpc.ClientConn
}

func NewNavControllerClient(cc *grpc.ClientConn) NavControllerClient {
	return &navControllerClient{cc}
}

func (c *navControllerClient) Move(ctx context.Context, opts ...grpc.CallOption) (NavController_MoveClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NavController_serviceDesc.Streams[0], "/navService.NavController/Move", opts...)
	if err != nil {
		return nil, err
	}
	x := &navControllerMoveClient{stream}
	return x, nil
}

type NavController_MoveClient interface {
	Send(*MoveRequest) error
	Recv() (*MoveResponse, error)
	grpc.ClientStream
}

type navControllerMoveClient struct {
	grpc.ClientStream
}

func (x *navControllerMoveClient) Send(m *MoveRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *navControllerMoveClient) Recv() (*MoveResponse, error) {
	m := new(MoveResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *navControllerClient) NavTo(ctx context.Context, in *NavToRequest, opts ...grpc.CallOption) (*NavToResponse, error) {
	out := new(NavToResponse)
	err := c.cc.Invoke(ctx, "/navService.NavController/NavTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *navControllerClient) NavStop(ctx context.Context, in *NavStopRequest, opts ...grpc.CallOption) (*NavStopResponse, error) {
	out := new(NavStopResponse)
	err := c.cc.Invoke(ctx, "/navService.NavController/NavStop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *navControllerClient) AutoCharge(ctx context.Context, in *AutoChargeRequest, opts ...grpc.CallOption) (*AutoChargeResponse, error) {
	out := new(AutoChargeResponse)
	err := c.cc.Invoke(ctx, "/navService.NavController/AutoCharge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *navControllerClient) Rotate(ctx context.Context, in *RotateRequest, opts ...grpc.CallOption) (*RotateResponse, error) {
	out := new(RotateResponse)
	err := c.cc.Invoke(ctx, "/navService.NavController/Rotate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *navControllerClient) OnNavEventChange(ctx context.Context, in *OnNavEventChangeRequest, opts ...grpc.CallOption) (NavController_OnNavEventChangeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NavController_serviceDesc.Streams[1], "/navService.NavController/OnNavEventChange", opts...)
	if err != nil {
		return nil, err
	}
	x := &navControllerOnNavEventChangeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NavController_OnNavEventChangeClient interface {
	Recv() (*OnNavEventChangeResponse, error)
	grpc.ClientStream
}

type navControllerOnNavEventChangeClient struct {
	grpc.ClientStream
}

func (x *navControllerOnNavEventChangeClient) Recv() (*OnNavEventChangeResponse, error) {
	m := new(OnNavEventChangeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *navControllerClient) LocationReset(ctx context.Context, in *LocationResetRequest, opts ...grpc.CallOption) (*LocationResetResponse, error) {
	out := new(LocationResetResponse)
	err := c.cc.Invoke(ctx, "/navService.NavController/LocationReset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *navControllerClient) NewRoute(ctx context.Context, in *NewRouteRequest, opts ...grpc.CallOption) (*NewRouteResponse, error) {
	out := new(NewRouteResponse)
	err := c.cc.Invoke(ctx, "/navService.NavController/NewRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *navControllerClient) ListRoutes(ctx context.Context, in *ListRoutesRequest, opts ...grpc.CallOption) (*ListRoutesResponse, error) {
	out := new(ListRoutesResponse)
	err := c.cc.Invoke(ctx, "/navService.NavController/ListRoutes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *navControllerClient) UpdateRoute(ctx context.Context, in *UpdateRouteRequest, opts ...grpc.CallOption) (*UpdateRouteResponse, error) {
	out := new(UpdateRouteResponse)
	err := c.cc.Invoke(ctx, "/navService.NavController/UpdateRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *navControllerClient) DeleteRoutes(ctx context.Context, in *DeleteRoutesRequest, opts ...grpc.CallOption) (*DeleteRoutesResponse, error) {
	out := new(DeleteRoutesResponse)
	err := c.cc.Invoke(ctx, "/navService.NavController/DeleteRoutes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NavControllerServer is the server API for NavController service.
type NavControllerServer interface {
	// 遥控移动
	// 当机器人处于非空闲及遥控移动状态时， 当前链接将被强制关闭, 错误描述为: "[naving|charging|rotating] reject"
	// 当机器人处于 *其它用户* 的遥控移动状态时， *你* 将收到MoveStatusResponse状态码REJ_MOVING
	// 当机器人处于 *你* 的遥控移动状态时, 请在500ms内持续发送遥控指令， 超时将自动停止移动
	// 当机器人处于 *你* 的遥控移动状态时, 若5秒后无遥控指令的更新, *你* 将接收到MoveStatusResponse状态码RELEASED，
	// 此时遥控移动控制权交由抢占的 *其它用户* 或其它类型目标的操作
	Move(NavController_MoveServer) error
	// 导航
	// 当机器人处理遥控移动中|充电中|旋转中时, 错误描述为: "[moving|charging|rotating] reject"
	// 当机器人处理空闲或导航状态时, 将收到导航的目标NavTarget与导航或失败状态
	// 使用目标导航时支持同步异步模式, 参考NavToRequest.sync_mode的参数描述
	NavTo(context.Context, *NavToRequest) (*NavToResponse, error)
	// 停止
	// 静止: 立即返回STOPPED
	// 旋转中: 返回旋转状态, STOPPED或CANCEL, 超时3秒
	// 其它: 错误描述为: "[moving|charging] reject"
	NavStop(context.Context, *NavStopRequest) (*NavStopResponse, error)
	// 自动充电
	// 当前为充电中|充电连接中: 请求类型为charge|charge_preset等待状态为CHARGE_STATUS_CHARGING|CHARGE_STATUS_CONNECTING|CHARGE_STATUS_RELEASED后返回
	// 当前为充电中|充电连接中: 请求类型为cancel等待状态为CHARGE_STATUS_RELEASED后返回
	// 当前为已释放: 请求类型为cancel将直接返回CHARGE_STATUS_RELEASED
	// 当前为已释放: 请求类型为charge|charge_preset等待状态为CHARGE_STATUS_CHARGING后返回
	// 超时错误: 发送请求后默认60秒后未收到状态更新返回错误描述, 超时时间可在AutoChargeRequest中自定义配置
	AutoCharge(context.Context, *AutoChargeRequest) (*AutoChargeResponse, error)
	// 原地旋转
	// 当旋转完成后返回STOPPED
	// 当用户使用NavStop中止时将返回CANCEL
	// 若超时30秒未执行完毕将返回超时错误
	Rotate(context.Context, *RotateRequest) (*RotateResponse, error)
	// 导航事件监听
	// 监听导航模块中各类事件的变动更新
	OnNavEventChange(*OnNavEventChangeRequest, NavController_OnNavEventChangeServer) error
	// >=2.2.0
	// 重置当前定位
	// 用于发生定位异常/错误状态，重新初始化导航定位
	// 重定位错误：定位状态超时|无地图|UWB错误
	// 重定位超时判断: 默认3s，仅在非错误状态下重置
	// *目前仅支持无线导航版本，磁导航版本中将直接返回成功状态
	LocationReset(context.Context, *LocationResetRequest) (*LocationResetResponse, error)
	// 新建线路
	NewRoute(context.Context, *NewRouteRequest) (*NewRouteResponse, error)
	// 获取线路
	ListRoutes(context.Context, *ListRoutesRequest) (*ListRoutesResponse, error)
	// 更新线路信息
	UpdateRoute(context.Context, *UpdateRouteRequest) (*UpdateRouteResponse, error)
	// 删除线路
	DeleteRoutes(context.Context, *DeleteRoutesRequest) (*DeleteRoutesResponse, error)
}

// UnimplementedNavControllerServer can be embedded to have forward compatible implementations.
type UnimplementedNavControllerServer struct {
}

func (*UnimplementedNavControllerServer) Move(srv NavController_MoveServer) error {
	return status.Errorf(codes.Unimplemented, "method Move not implemented")
}
func (*UnimplementedNavControllerServer) NavTo(ctx context.Context, req *NavToRequest) (*NavToResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NavTo not implemented")
}
func (*UnimplementedNavControllerServer) NavStop(ctx context.Context, req *NavStopRequest) (*NavStopResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NavStop not implemented")
}
func (*UnimplementedNavControllerServer) AutoCharge(ctx context.Context, req *AutoChargeRequest) (*AutoChargeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AutoCharge not implemented")
}
func (*UnimplementedNavControllerServer) Rotate(ctx context.Context, req *RotateRequest) (*RotateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rotate not implemented")
}
func (*UnimplementedNavControllerServer) OnNavEventChange(req *OnNavEventChangeRequest, srv NavController_OnNavEventChangeServer) error {
	return status.Errorf(codes.Unimplemented, "method OnNavEventChange not implemented")
}
func (*UnimplementedNavControllerServer) LocationReset(ctx context.Context, req *LocationResetRequest) (*LocationResetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LocationReset not implemented")
}
func (*UnimplementedNavControllerServer) NewRoute(ctx context.Context, req *NewRouteRequest) (*NewRouteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewRoute not implemented")
}
func (*UnimplementedNavControllerServer) ListRoutes(ctx context.Context, req *ListRoutesRequest) (*ListRoutesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRoutes not implemented")
}
func (*UnimplementedNavControllerServer) UpdateRoute(ctx context.Context, req *UpdateRouteRequest) (*UpdateRouteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRoute not implemented")
}
func (*UnimplementedNavControllerServer) DeleteRoutes(ctx context.Context, req *DeleteRoutesRequest) (*DeleteRoutesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRoutes not implemented")
}

func RegisterNavControllerServer(s *grpc.Server, srv NavControllerServer) {
	s.RegisterService(&_NavController_serviceDesc, srv)
}

func _NavController_Move_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(NavControllerServer).Move(&navControllerMoveServer{stream})
}

type NavController_MoveServer interface {
	Send(*MoveResponse) error
	Recv() (*MoveRequest, error)
	grpc.ServerStream
}

type navControllerMoveServer struct {
	grpc.ServerStream
}

func (x *navControllerMoveServer) Send(m *MoveResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *navControllerMoveServer) Recv() (*MoveRequest, error) {
	m := new(MoveRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _NavController_NavTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NavToRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NavControllerServer).NavTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/navService.NavController/NavTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NavControllerServer).NavTo(ctx, req.(*NavToRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NavController_NavStop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NavStopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NavControllerServer).NavStop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/navService.NavController/NavStop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NavControllerServer).NavStop(ctx, req.(*NavStopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NavController_AutoCharge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AutoChargeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NavControllerServer).AutoCharge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/navService.NavController/AutoCharge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NavControllerServer).AutoCharge(ctx, req.(*AutoChargeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NavController_Rotate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RotateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NavControllerServer).Rotate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/navService.NavController/Rotate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NavControllerServer).Rotate(ctx, req.(*RotateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NavController_OnNavEventChange_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(OnNavEventChangeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NavControllerServer).OnNavEventChange(m, &navControllerOnNavEventChangeServer{stream})
}

type NavController_OnNavEventChangeServer interface {
	Send(*OnNavEventChangeResponse) error
	grpc.ServerStream
}

type navControllerOnNavEventChangeServer struct {
	grpc.ServerStream
}

func (x *navControllerOnNavEventChangeServer) Send(m *OnNavEventChangeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NavController_LocationReset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LocationResetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NavControllerServer).LocationReset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/navService.NavController/LocationReset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NavControllerServer).LocationReset(ctx, req.(*LocationResetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NavController_NewRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewRouteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NavControllerServer).NewRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/navService.NavController/NewRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NavControllerServer).NewRoute(ctx, req.(*NewRouteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NavController_ListRoutes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRoutesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NavControllerServer).ListRoutes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/navService.NavController/ListRoutes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NavControllerServer).ListRoutes(ctx, req.(*ListRoutesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NavController_UpdateRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRouteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NavControllerServer).UpdateRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/navService.NavController/UpdateRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NavControllerServer).UpdateRoute(ctx, req.(*UpdateRouteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NavController_DeleteRoutes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRoutesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NavControllerServer).DeleteRoutes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/navService.NavController/DeleteRoutes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NavControllerServer).DeleteRoutes(ctx, req.(*DeleteRoutesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NavController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "navService.NavController",
	HandlerType: (*NavControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NavTo",
			Handler:    _NavController_NavTo_Handler,
		},
		{
			MethodName: "NavStop",
			Handler:    _NavController_NavStop_Handler,
		},
		{
			MethodName: "AutoCharge",
			Handler:    _NavController_AutoCharge_Handler,
		},
		{
			MethodName: "Rotate",
			Handler:    _NavController_Rotate_Handler,
		},
		{
			MethodName: "LocationReset",
			Handler:    _NavController_LocationReset_Handler,
		},
		{
			MethodName: "NewRoute",
			Handler:    _NavController_NewRoute_Handler,
		},
		{
			MethodName: "ListRoutes",
			Handler:    _NavController_ListRoutes_Handler,
		},
		{
			MethodName: "UpdateRoute",
			Handler:    _NavController_UpdateRoute_Handler,
		},
		{
			MethodName: "DeleteRoutes",
			Handler:    _NavController_DeleteRoutes_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Move",
			Handler:       _NavController_Move_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "OnNavEventChange",
			Handler:       _NavController_OnNavEventChange_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "nav.proto",
}
