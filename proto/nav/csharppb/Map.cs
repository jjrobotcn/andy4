// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: map.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NavService {

  /// <summary>Holder for reflection information generated from map.proto</summary>
  public static partial class MapReflection {

    #region Descriptor
    /// <summary>File descriptor for map.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MapReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgltYXAucHJvdG8SCm5hdlNlcnZpY2UaHGdvb2dsZS9hcGkvYW5ub3RhdGlv",
            "bnMucHJvdG8iMgoLTWFwUG9zaXRpb24SCQoBeBgBIAEoDRIJCgF5GAIgASgN",
            "Eg0KBWFuZ2xlGAMgASgNIkAKEUdldE1hcEluZm9SZXF1ZXN0EhQKDG5vX21h",
            "cF9pbWFnZRgBIAEoCBIVCg1ub19tYXBfcG9pbnRzGAIgASgIIqYCChJHZXRN",
            "YXBJbmZvUmVzcG9uc2USCgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCRI6Cglt",
            "YXBfaW1hZ2UYAyABKAsyJy5uYXZTZXJ2aWNlLkdldE1hcEluZm9SZXNwb25z",
            "ZS5NYXBJbWFnZRI7CgptYXBfcG9pbnRzGAQgAygLMicubmF2U2VydmljZS5H",
            "ZXRNYXBJbmZvUmVzcG9uc2UuTWFwUG9pbnQaOAoITWFwSW1hZ2USDQoFd2lk",
            "dGgYASABKA0SDgoGaGVpZ2h0GAIgASgNEg0KBWltYWdlGAMgASgMGkMKCE1h",
            "cFBvaW50EgwKBG5hbWUYASABKAkSKQoIcG9zaXRpb24YAiABKAsyFy5uYXZT",
            "ZXJ2aWNlLk1hcFBvc2l0aW9uIhoKGE1hcFBvc2l0aW9uU3RyZWFtUmVxdWVz",
            "dCJGChlNYXBQb3NpdGlvblN0cmVhbVJlc3BvbnNlEikKCHBvc2l0aW9uGAEg",
            "ASgLMhcubmF2U2VydmljZS5NYXBQb3NpdGlvbiIWChRMb2NhdGlvblJlc2V0",
            "UmVxdWVzdCIXChVMb2NhdGlvblJlc2V0UmVzcG9uc2Uy/wIKA01hcBJtCgpH",
            "ZXRNYXBJbmZvEh0ubmF2U2VydmljZS5HZXRNYXBJbmZvUmVxdWVzdBoeLm5h",
            "dlNlcnZpY2UuR2V0TWFwSW5mb1Jlc3BvbnNlIiCC0+STAhoSGC9hcGkvdjIv",
            "bmF2L2dldF9tYXBfaW5mbxKLAQoRTWFwUG9zaXRpb25TdHJlYW0SJC5uYXZT",
            "ZXJ2aWNlLk1hcFBvc2l0aW9uU3RyZWFtUmVxdWVzdBolLm5hdlNlcnZpY2Uu",
            "TWFwUG9zaXRpb25TdHJlYW1SZXNwb25zZSIngtPkkwIhEh8vYXBpL3YyL25h",
            "di9tYXBfcG9zaXRpb25fc3RyZWFtMAESewoNTG9jYXRpb25SZXNldBIgLm5h",
            "dlNlcnZpY2UuTG9jYXRpb25SZXNldFJlcXVlc3QaIS5uYXZTZXJ2aWNlLkxv",
            "Y2F0aW9uUmVzZXRSZXNwb25zZSIlgtPkkwIfIhovYXBpL3YyL25hdi9sb2Nh",
            "dGlvbl9yZXNldDoBKmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NavService.MapPosition), global::NavService.MapPosition.Parser, new[]{ "X", "Y", "Angle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NavService.GetMapInfoRequest), global::NavService.GetMapInfoRequest.Parser, new[]{ "NoMapImage", "NoMapPoints" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NavService.GetMapInfoResponse), global::NavService.GetMapInfoResponse.Parser, new[]{ "Id", "Name", "MapImage", "MapPoints" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::NavService.GetMapInfoResponse.Types.MapImage), global::NavService.GetMapInfoResponse.Types.MapImage.Parser, new[]{ "Width", "Height", "Image" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NavService.GetMapInfoResponse.Types.MapPoint), global::NavService.GetMapInfoResponse.Types.MapPoint.Parser, new[]{ "Name", "Position" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::NavService.MapPositionStreamRequest), global::NavService.MapPositionStreamRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NavService.MapPositionStreamResponse), global::NavService.MapPositionStreamResponse.Parser, new[]{ "Position" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NavService.LocationResetRequest), global::NavService.LocationResetRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NavService.LocationResetResponse), global::NavService.LocationResetResponse.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MapPosition : pb::IMessage<MapPosition> {
    private static readonly pb::MessageParser<MapPosition> _parser = new pb::MessageParser<MapPosition>(() => new MapPosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NavService.MapReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapPosition(MapPosition other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      angle_ = other.angle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapPosition Clone() {
      return new MapPosition(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private uint x_;
    /// <summary>
    /// 水平坐标 [0: mapWidth]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private uint y_;
    /// <summary>
    /// 垂直坐标 [0: mapHeight]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 3;
    private uint angle_;
    /// <summary>
    /// 角度 水平右方向为0, 顺时针
    ///     270
    /// 180  ----0
    ///     90
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Angle != other.Angle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Angle != 0) hash ^= Angle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Y);
      }
      if (Angle != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Y);
      }
      if (Angle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Angle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapPosition other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Angle != 0) {
        Angle = other.Angle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadUInt32();
            break;
          }
          case 16: {
            Y = input.ReadUInt32();
            break;
          }
          case 24: {
            Angle = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMapInfoRequest : pb::IMessage<GetMapInfoRequest> {
    private static readonly pb::MessageParser<GetMapInfoRequest> _parser = new pb::MessageParser<GetMapInfoRequest>(() => new GetMapInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMapInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NavService.MapReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMapInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMapInfoRequest(GetMapInfoRequest other) : this() {
      noMapImage_ = other.noMapImage_;
      noMapPoints_ = other.noMapPoints_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMapInfoRequest Clone() {
      return new GetMapInfoRequest(this);
    }

    /// <summary>Field number for the "no_map_image" field.</summary>
    public const int NoMapImageFieldNumber = 1;
    private bool noMapImage_;
    /// <summary>
    /// true: 不返回map_image信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NoMapImage {
      get { return noMapImage_; }
      set {
        noMapImage_ = value;
      }
    }

    /// <summary>Field number for the "no_map_points" field.</summary>
    public const int NoMapPointsFieldNumber = 2;
    private bool noMapPoints_;
    /// <summary>
    /// true: 不返回map_points信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NoMapPoints {
      get { return noMapPoints_; }
      set {
        noMapPoints_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMapInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMapInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NoMapImage != other.NoMapImage) return false;
      if (NoMapPoints != other.NoMapPoints) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NoMapImage != false) hash ^= NoMapImage.GetHashCode();
      if (NoMapPoints != false) hash ^= NoMapPoints.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NoMapImage != false) {
        output.WriteRawTag(8);
        output.WriteBool(NoMapImage);
      }
      if (NoMapPoints != false) {
        output.WriteRawTag(16);
        output.WriteBool(NoMapPoints);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NoMapImage != false) {
        size += 1 + 1;
      }
      if (NoMapPoints != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMapInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.NoMapImage != false) {
        NoMapImage = other.NoMapImage;
      }
      if (other.NoMapPoints != false) {
        NoMapPoints = other.NoMapPoints;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NoMapImage = input.ReadBool();
            break;
          }
          case 16: {
            NoMapPoints = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMapInfoResponse : pb::IMessage<GetMapInfoResponse> {
    private static readonly pb::MessageParser<GetMapInfoResponse> _parser = new pb::MessageParser<GetMapInfoResponse>(() => new GetMapInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMapInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NavService.MapReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMapInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMapInfoResponse(GetMapInfoResponse other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      mapImage_ = other.mapImage_ != null ? other.mapImage_.Clone() : null;
      mapPoints_ = other.mapPoints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMapInfoResponse Clone() {
      return new GetMapInfoResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// 地图id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 地图名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "map_image" field.</summary>
    public const int MapImageFieldNumber = 3;
    private global::NavService.GetMapInfoResponse.Types.MapImage mapImage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NavService.GetMapInfoResponse.Types.MapImage MapImage {
      get { return mapImage_; }
      set {
        mapImage_ = value;
      }
    }

    /// <summary>Field number for the "map_points" field.</summary>
    public const int MapPointsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::NavService.GetMapInfoResponse.Types.MapPoint> _repeated_mapPoints_codec
        = pb::FieldCodec.ForMessage(34, global::NavService.GetMapInfoResponse.Types.MapPoint.Parser);
    private readonly pbc::RepeatedField<global::NavService.GetMapInfoResponse.Types.MapPoint> mapPoints_ = new pbc::RepeatedField<global::NavService.GetMapInfoResponse.Types.MapPoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NavService.GetMapInfoResponse.Types.MapPoint> MapPoints {
      get { return mapPoints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMapInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMapInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(MapImage, other.MapImage)) return false;
      if(!mapPoints_.Equals(other.mapPoints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (mapImage_ != null) hash ^= MapImage.GetHashCode();
      hash ^= mapPoints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (mapImage_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MapImage);
      }
      mapPoints_.WriteTo(output, _repeated_mapPoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (mapImage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapImage);
      }
      size += mapPoints_.CalculateSize(_repeated_mapPoints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMapInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.mapImage_ != null) {
        if (mapImage_ == null) {
          MapImage = new global::NavService.GetMapInfoResponse.Types.MapImage();
        }
        MapImage.MergeFrom(other.MapImage);
      }
      mapPoints_.Add(other.mapPoints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (mapImage_ == null) {
              MapImage = new global::NavService.GetMapInfoResponse.Types.MapImage();
            }
            input.ReadMessage(MapImage);
            break;
          }
          case 34: {
            mapPoints_.AddEntriesFrom(input, _repeated_mapPoints_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetMapInfoResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// 地图图片信息
      /// </summary>
      public sealed partial class MapImage : pb::IMessage<MapImage> {
        private static readonly pb::MessageParser<MapImage> _parser = new pb::MessageParser<MapImage>(() => new MapImage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MapImage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::NavService.GetMapInfoResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapImage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapImage(MapImage other) : this() {
          width_ = other.width_;
          height_ = other.height_;
          image_ = other.image_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapImage Clone() {
          return new MapImage(this);
        }

        /// <summary>Field number for the "width" field.</summary>
        public const int WidthFieldNumber = 1;
        private uint width_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Width {
          get { return width_; }
          set {
            width_ = value;
          }
        }

        /// <summary>Field number for the "height" field.</summary>
        public const int HeightFieldNumber = 2;
        private uint height_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Height {
          get { return height_; }
          set {
            height_ = value;
          }
        }

        /// <summary>Field number for the "image" field.</summary>
        public const int ImageFieldNumber = 3;
        private pb::ByteString image_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Image {
          get { return image_; }
          set {
            image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MapImage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MapImage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Width != other.Width) return false;
          if (Height != other.Height) return false;
          if (Image != other.Image) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Width != 0) hash ^= Width.GetHashCode();
          if (Height != 0) hash ^= Height.GetHashCode();
          if (Image.Length != 0) hash ^= Image.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Width != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Width);
          }
          if (Height != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Height);
          }
          if (Image.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Image);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Width != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
          }
          if (Height != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
          }
          if (Image.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Image);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MapImage other) {
          if (other == null) {
            return;
          }
          if (other.Width != 0) {
            Width = other.Width;
          }
          if (other.Height != 0) {
            Height = other.Height;
          }
          if (other.Image.Length != 0) {
            Image = other.Image;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Width = input.ReadUInt32();
                break;
              }
              case 16: {
                Height = input.ReadUInt32();
                break;
              }
              case 26: {
                Image = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// 地图点数据
      /// 与nav.RoutePoint信息一致，
      /// 区别为包含地图坐标信息
      /// </summary>
      public sealed partial class MapPoint : pb::IMessage<MapPoint> {
        private static readonly pb::MessageParser<MapPoint> _parser = new pb::MessageParser<MapPoint>(() => new MapPoint());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MapPoint> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::NavService.GetMapInfoResponse.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapPoint() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapPoint(MapPoint other) : this() {
          name_ = other.name_;
          position_ = other.position_ != null ? other.position_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapPoint Clone() {
          return new MapPoint(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "position" field.</summary>
        public const int PositionFieldNumber = 2;
        private global::NavService.MapPosition position_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::NavService.MapPosition Position {
          get { return position_; }
          set {
            position_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MapPoint);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MapPoint other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (!object.Equals(Position, other.Position)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (position_ != null) hash ^= Position.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (position_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Position);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (position_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MapPoint other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.position_ != null) {
            if (position_ == null) {
              Position = new global::NavService.MapPosition();
            }
            Position.MergeFrom(other.Position);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                if (position_ == null) {
                  Position = new global::NavService.MapPosition();
                }
                input.ReadMessage(Position);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class MapPositionStreamRequest : pb::IMessage<MapPositionStreamRequest> {
    private static readonly pb::MessageParser<MapPositionStreamRequest> _parser = new pb::MessageParser<MapPositionStreamRequest>(() => new MapPositionStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapPositionStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NavService.MapReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapPositionStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapPositionStreamRequest(MapPositionStreamRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapPositionStreamRequest Clone() {
      return new MapPositionStreamRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapPositionStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapPositionStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapPositionStreamRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class MapPositionStreamResponse : pb::IMessage<MapPositionStreamResponse> {
    private static readonly pb::MessageParser<MapPositionStreamResponse> _parser = new pb::MessageParser<MapPositionStreamResponse>(() => new MapPositionStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapPositionStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NavService.MapReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapPositionStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapPositionStreamResponse(MapPositionStreamResponse other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapPositionStreamResponse Clone() {
      return new MapPositionStreamResponse(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::NavService.MapPosition position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NavService.MapPosition Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapPositionStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapPositionStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapPositionStreamResponse other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::NavService.MapPosition();
        }
        Position.MergeFrom(other.Position);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::NavService.MapPosition();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LocationResetRequest : pb::IMessage<LocationResetRequest> {
    private static readonly pb::MessageParser<LocationResetRequest> _parser = new pb::MessageParser<LocationResetRequest>(() => new LocationResetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationResetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NavService.MapReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationResetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationResetRequest(LocationResetRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationResetRequest Clone() {
      return new LocationResetRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationResetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationResetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationResetRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class LocationResetResponse : pb::IMessage<LocationResetResponse> {
    private static readonly pb::MessageParser<LocationResetResponse> _parser = new pb::MessageParser<LocationResetResponse>(() => new LocationResetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationResetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NavService.MapReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationResetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationResetResponse(LocationResetResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationResetResponse Clone() {
      return new LocationResetResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationResetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationResetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationResetResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
