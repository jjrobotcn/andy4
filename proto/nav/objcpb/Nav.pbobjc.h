// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nav.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AutoChargeEvent;
@class MapPosition;
@class MoveEvent;
@class NavEvent;
@class NavRoaming;
@class NavTarget;
@class RotateEvent;
@class Route;
@class RoutePoint;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum StatusCode

typedef GPB_ENUM(StatusCode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  StatusCode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 状态零值, 不使用 */
  StatusCode_Unknown = 0,

  /**
   * 停止状态
   * 遥控移动状态: 已停止
   * 导航状态: 导航结束
   * 旋转状态: 旋转结束
   **/
  StatusCode_Stopped = 1,

  /**
   * 移动中状态
   * 遥控移动状态: 遥控移动中
   * 导航状态: 导航移动中
   * 旋转状态: 旋转中
   **/
  StatusCode_Moving = 2,

  /**
   * 准备状态
   * 导航状态: 导航准备中
   * 旋转状态: 旋转准备中
   **/
  StatusCode_Preparing = 3,

  /**
   * 用户取消状态
   * 导航状态: 导航被中止
   * 旋转状态: 旋转被中止
   **/
  StatusCode_Cancel = 4,

  /**
   * 遥控控制权释放状态
   * 遥控移动状态: 遥控权限超时释放,
   * 其它遥控端可接管遥控控制权,
   * 其它类型操作可接管
   **/
  StatusCode_Released = 5,

  /**
   * 遇到障碍物
   * 遥控移动状态: 遥控移动遇到障碍物
   * 导航状态: 导航过程中遇到障碍(自动导航方式支持自动避障)
   **/
  StatusCode_ErrObstacle = 10,

  /** 未就绪状态 */
  StatusCode_ErrNotReady = 11,

  /** 电机错误 */
  StatusCode_ErrMotorFail = 12,

  /** 导航目标错误 */
  StatusCode_ErrWrongTarget = 13,

  /** 操作被拒绝， 当前遥控移动中 */
  StatusCode_RejMoving = 20,

  /** 操作被拒绝， 当前导航中 */
  StatusCode_RejNaving = 21,

  /** 操作被拒绝， 当前充电中 */
  StatusCode_RejCharging = 22,

  /** 操作被拒绝， 当前旋转中 */
  StatusCode_RejRotating = 23,
};

GPBEnumDescriptor *StatusCode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL StatusCode_IsValidValue(int32_t value);

#pragma mark - Enum MoveDirection

/** 移动方向 */
typedef GPB_ENUM(MoveDirection) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MoveDirection_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 释放方向, 空值 */
  MoveDirection_Release = 0,
  MoveDirection_Forward = 1,
  MoveDirection_Backward = 2,
  MoveDirection_Left = 3,
  MoveDirection_Right = 4,
  MoveDirection_LeftForward = 5,
  MoveDirection_RightForward = 6,
  MoveDirection_LeftBackward = 7,
  MoveDirection_RightBackward = 8,
};

GPBEnumDescriptor *MoveDirection_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MoveDirection_IsValidValue(int32_t value);

#pragma mark - Enum RoamingType

/** 导航漫游方式 */
typedef GPB_ENUM(RoamingType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RoamingType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 继续上次NavStop中断的漫游 */
  RoamingType_RoamingTypeContinue = 0,

  /** 有序漫游 */
  RoamingType_RoamingTypeOrder = 1,

  /** 随机漫游 */
  RoamingType_RoamingTypeRandom = 2,
};

GPBEnumDescriptor *RoamingType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RoamingType_IsValidValue(int32_t value);

#pragma mark - Enum ChargeStatusCode

/** 充电状态码 */
typedef GPB_ENUM(ChargeStatusCode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ChargeStatusCode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 状态零值 */
  ChargeStatusCode_ChargeStatusUnknown = 0,

  /**
   * 准备中
   * 充电导航: 导航开始/CHARGE_STATUS_NAV_OBSTACLE导航恢复
   **/
  ChargeStatusCode_ChargeStatusPreparing = 1,

  /**
   * 已释放
   * 充电断开结束完成与未充电时为此状态
   **/
  ChargeStatusCode_ChargeStatusReleased = 2,

  /** 充电连接中 */
  ChargeStatusCode_ChargeStatusConnecting = 3,

  /** 充电中 */
  ChargeStatusCode_ChargeStatusCharging = 4,

  /** 充电断开中 */
  ChargeStatusCode_ChargeStatusDisconnecting = 5,

  /** 连接失败 */
  ChargeStatusCode_ChargeConnectFail = 6,

  /**
   * 充电导航过程遇到障碍
   * 2.2.7新增
   **/
  ChargeStatusCode_ChargeStatusNavObstacle = 7,
};

GPBEnumDescriptor *ChargeStatusCode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ChargeStatusCode_IsValidValue(int32_t value);

#pragma mark - Enum NavEventType

/** 导航事件 */
typedef GPB_ENUM(NavEventType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  NavEventType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 事件零值(不使用) */
  NavEventType_NavEventReversed = 0,

  /** 移动事件 */
  NavEventType_MoveEvent = 1,

  /** 导航事件 */
  NavEventType_NavEvent = 2,

  /** 自动充电事件 */
  NavEventType_AutoChargeEvent = 3,

  /** 旋转状态事件 */
  NavEventType_RotateEvent = 4,
};

GPBEnumDescriptor *NavEventType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL NavEventType_IsValidValue(int32_t value);

#pragma mark - NavRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface NavRoot : GPBRootObject
@end

#pragma mark - MoveRequest

typedef GPB_ENUM(MoveRequest_FieldNumber) {
  MoveRequest_FieldNumber_Speed = 1,
  MoveRequest_FieldNumber_Rspeed = 2,
  MoveRequest_FieldNumber_Direction = 3,
  MoveRequest_FieldNumber_Mode = 4,
};

@interface MoveRequest : GPBMessage

/** 移动速度 0-100 */
@property(nonatomic, readwrite) uint32_t speed;

/** 旋转速度 0-10 默认3* 仅前后方向时此数值无效 */
@property(nonatomic, readwrite) uint32_t rspeed;

/** 移动方向 */
@property(nonatomic, readwrite) MoveDirection direction;

/** 移动模式(safe*|force) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mode;

@end

/**
 * Fetches the raw value of a @c MoveRequest's @c direction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MoveRequest_Direction_RawValue(MoveRequest *message);
/**
 * Sets the raw value of an @c MoveRequest's @c direction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMoveRequest_Direction_RawValue(MoveRequest *message, int32_t value);

#pragma mark - MoveResponse

typedef GPB_ENUM(MoveResponse_FieldNumber) {
  MoveResponse_FieldNumber_StatusCode = 1,
};

@interface MoveResponse : GPBMessage

@property(nonatomic, readwrite) StatusCode statusCode;

@end

/**
 * Fetches the raw value of a @c MoveResponse's @c statusCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MoveResponse_StatusCode_RawValue(MoveResponse *message);
/**
 * Sets the raw value of an @c MoveResponse's @c statusCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMoveResponse_StatusCode_RawValue(MoveResponse *message, int32_t value);

#pragma mark - NavTarget

typedef GPB_ENUM(NavTarget_FieldNumber) {
  NavTarget_FieldNumber_Index = 1,
  NavTarget_FieldNumber_Name = 2,
};

/**
 * 导航目标信息
 * 判断顺序为index>name
 **/
@interface NavTarget : GPBMessage

/** 激活线路中线路点序号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *index;

/** 激活线路中线路点名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - NavRoaming

typedef GPB_ENUM(NavRoaming_FieldNumber) {
  NavRoaming_FieldNumber_NavRoamingType = 1,
  NavRoaming_FieldNumber_WaitSec = 2,
  NavRoaming_FieldNumber_RoamingTargetIndexesArray = 3,
  NavRoaming_FieldNumber_OrderLoop = 4,
};

@interface NavRoaming : GPBMessage

@property(nonatomic, readwrite) RoamingType navRoamingType;

/** 到达漫游点后等待时间， -1为无限等待可通过ROAMING_TYPE_CONTINUE继续， 0为不等待(默认) */
@property(nonatomic, readwrite) int32_t waitSec;

/** 漫游点索引， 为空时将漫游全部点 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *roamingTargetIndexesArray;
/** The number of items in @c roamingTargetIndexesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roamingTargetIndexesArray_Count;

/** 是否循环(仅有序巡航) */
@property(nonatomic, readwrite) BOOL orderLoop;

@end

/**
 * Fetches the raw value of a @c NavRoaming's @c navRoamingType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t NavRoaming_NavRoamingType_RawValue(NavRoaming *message);
/**
 * Sets the raw value of an @c NavRoaming's @c navRoamingType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetNavRoaming_NavRoamingType_RawValue(NavRoaming *message, int32_t value);

#pragma mark - NavToRequest

typedef GPB_ENUM(NavToRequest_FieldNumber) {
  NavToRequest_FieldNumber_Target = 1,
  NavToRequest_FieldNumber_Speed = 2,
  NavToRequest_FieldNumber_Roaming = 3,
  NavToRequest_FieldNumber_SyncMode = 4,
  NavToRequest_FieldNumber_MapPosition = 5,
};

typedef GPB_ENUM(NavToRequest_TargetOneof_OneOfCase) {
  NavToRequest_TargetOneof_OneOfCase_GPBUnsetOneOfCase = 0,
  NavToRequest_TargetOneof_OneOfCase_Target = 1,
  NavToRequest_TargetOneof_OneOfCase_Roaming = 3,
  NavToRequest_TargetOneof_OneOfCase_MapPosition = 5,
};

/**
 * 导航请求
 **/
@interface NavToRequest : GPBMessage

@property(nonatomic, readonly) NavToRequest_TargetOneof_OneOfCase targetOneofOneOfCase;

/** 导航请求目标 */
@property(nonatomic, readwrite, strong, null_resettable) NavTarget *target;

/** 导航漫游(需底盘类型支持) */
@property(nonatomic, readwrite, strong, null_resettable) NavRoaming *roaming;

/** 导航地图坐标(仅支持无线导航类型) */
@property(nonatomic, readwrite, strong, null_resettable) MapPosition *mapPosition;

/** 导航移动速度(需底盘类型支持) */
@property(nonatomic, readwrite) uint32_t speed;

/**
 * 同步模式标识
 * *false: 当导航开始时立即返回PREPARING, 漫游模式强制为异步
 * true: 目标模式下当导航STOPPED|CANCEL|ERR*时返回
 **/
@property(nonatomic, readwrite) BOOL syncMode;

@end

/**
 * Clears whatever value was set for the oneof 'targetOneof'.
 **/
void NavToRequest_ClearTargetOneofOneOfCase(NavToRequest *message);

#pragma mark - NavToResponse

typedef GPB_ENUM(NavToResponse_FieldNumber) {
  NavToResponse_FieldNumber_StatusCode = 1,
  NavToResponse_FieldNumber_Target = 2,
  NavToResponse_FieldNumber_IsRoaming = 3,
  NavToResponse_FieldNumber_MapPosition = 4,
};

typedef GPB_ENUM(NavToResponse_TargetOneof_OneOfCase) {
  NavToResponse_TargetOneof_OneOfCase_GPBUnsetOneOfCase = 0,
  NavToResponse_TargetOneof_OneOfCase_Target = 2,
  NavToResponse_TargetOneof_OneOfCase_IsRoaming = 3,
  NavToResponse_TargetOneof_OneOfCase_MapPosition = 4,
};

/**
 * 导航状态
 **/
@interface NavToResponse : GPBMessage

@property(nonatomic, readwrite) StatusCode statusCode;

@property(nonatomic, readonly) NavToResponse_TargetOneof_OneOfCase targetOneofOneOfCase;

/** 导航请求目标 */
@property(nonatomic, readwrite, strong, null_resettable) NavTarget *target;

/** 漫游模式 */
@property(nonatomic, readwrite) BOOL isRoaming;

/** 地图位置目标 */
@property(nonatomic, readwrite, strong, null_resettable) MapPosition *mapPosition;

@end

/**
 * Fetches the raw value of a @c NavToResponse's @c statusCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t NavToResponse_StatusCode_RawValue(NavToResponse *message);
/**
 * Sets the raw value of an @c NavToResponse's @c statusCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetNavToResponse_StatusCode_RawValue(NavToResponse *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'targetOneof'.
 **/
void NavToResponse_ClearTargetOneofOneOfCase(NavToResponse *message);

#pragma mark - NavStopRequest

/**
 * 导航停止请求
 **/
@interface NavStopRequest : GPBMessage

@end

#pragma mark - NavStopResponse

typedef GPB_ENUM(NavStopResponse_FieldNumber) {
  NavStopResponse_FieldNumber_StatusCode = 1,
};

/**
 * 导航停止状态
 **/
@interface NavStopResponse : GPBMessage

@property(nonatomic, readwrite) StatusCode statusCode;

@end

/**
 * Fetches the raw value of a @c NavStopResponse's @c statusCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t NavStopResponse_StatusCode_RawValue(NavStopResponse *message);
/**
 * Sets the raw value of an @c NavStopResponse's @c statusCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetNavStopResponse_StatusCode_RawValue(NavStopResponse *message, int32_t value);

#pragma mark - AutoChargeRequest

typedef GPB_ENUM(AutoChargeRequest_FieldNumber) {
  AutoChargeRequest_FieldNumber_Charge = 1,
  AutoChargeRequest_FieldNumber_Cancel = 2,
  AutoChargeRequest_FieldNumber_ChargePreset = 3,
  AutoChargeRequest_FieldNumber_TimeoutSec = 4,
};

typedef GPB_ENUM(AutoChargeRequest_ChargeOptionOneof_OneOfCase) {
  AutoChargeRequest_ChargeOptionOneof_OneOfCase_GPBUnsetOneOfCase = 0,
  AutoChargeRequest_ChargeOptionOneof_OneOfCase_Charge = 1,
  AutoChargeRequest_ChargeOptionOneof_OneOfCase_Cancel = 2,
  AutoChargeRequest_ChargeOptionOneof_OneOfCase_ChargePreset = 3,
};

/**
 * 充电请求
 **/
@interface AutoChargeRequest : GPBMessage

@property(nonatomic, readonly) AutoChargeRequest_ChargeOptionOneof_OneOfCase chargeOptionOneofOneOfCase;

/** 当前已在充电桩附近, 直接开始充电 */
@property(nonatomic, readwrite) BOOL charge;

/** 取消充电 */
@property(nonatomic, readwrite) BOOL cancel;

/** 至设置的第一个预设充电点充电 */
@property(nonatomic, readwrite) BOOL chargePreset;

/** 等待充电状态为CHARGE_STATUS_CHARGING的超时配置(秒), 默认60s */
@property(nonatomic, readwrite) uint32_t timeoutSec;

@end

/**
 * Clears whatever value was set for the oneof 'chargeOptionOneof'.
 **/
void AutoChargeRequest_ClearChargeOptionOneofOneOfCase(AutoChargeRequest *message);

#pragma mark - AutoChargeResponse

typedef GPB_ENUM(AutoChargeResponse_FieldNumber) {
  AutoChargeResponse_FieldNumber_ChargeStatusCode = 1,
};

/**
 * 充电状态反馈
 **/
@interface AutoChargeResponse : GPBMessage

@property(nonatomic, readwrite) ChargeStatusCode chargeStatusCode;

@end

/**
 * Fetches the raw value of a @c AutoChargeResponse's @c chargeStatusCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AutoChargeResponse_ChargeStatusCode_RawValue(AutoChargeResponse *message);
/**
 * Sets the raw value of an @c AutoChargeResponse's @c chargeStatusCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAutoChargeResponse_ChargeStatusCode_RawValue(AutoChargeResponse *message, int32_t value);

#pragma mark - RotateRequest

typedef GPB_ENUM(RotateRequest_FieldNumber) {
  RotateRequest_FieldNumber_Angle = 1,
  RotateRequest_FieldNumber_Rollback = 2,
};

typedef GPB_ENUM(RotateRequest_RotateOneof_OneOfCase) {
  RotateRequest_RotateOneof_OneOfCase_GPBUnsetOneOfCase = 0,
  RotateRequest_RotateOneof_OneOfCase_Angle = 1,
  RotateRequest_RotateOneof_OneOfCase_Rollback = 2,
};

/**
 * 原地旋转请求
 **/
@interface RotateRequest : GPBMessage

@property(nonatomic, readonly) RotateRequest_RotateOneof_OneOfCase rotateOneofOneOfCase;

/** 基于当前角度的旋转角度参数 左:-180 ~ 右:180 */
@property(nonatomic, readwrite) int32_t angle;

/**
 * 回滚旋转角度
 * 回滚角度的记录为更新angle角度值时的当前角度，
 * 若在旋转过程中更新新角度或再次回滚， 下次回滚角度将记录为当前角度
 **/
@property(nonatomic, readwrite) BOOL rollback;

@end

/**
 * Clears whatever value was set for the oneof 'rotateOneof'.
 **/
void RotateRequest_ClearRotateOneofOneOfCase(RotateRequest *message);

#pragma mark - RotateResponse

typedef GPB_ENUM(RotateResponse_FieldNumber) {
  RotateResponse_FieldNumber_StatusCode = 1,
};

@interface RotateResponse : GPBMessage

@property(nonatomic, readwrite) StatusCode statusCode;

@end

/**
 * Fetches the raw value of a @c RotateResponse's @c statusCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RotateResponse_StatusCode_RawValue(RotateResponse *message);
/**
 * Sets the raw value of an @c RotateResponse's @c statusCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRotateResponse_StatusCode_RawValue(RotateResponse *message, int32_t value);

#pragma mark - OnNavEventChangeRequest

@interface OnNavEventChangeRequest : GPBMessage

@end

#pragma mark - MoveEvent

typedef GPB_ENUM(MoveEvent_FieldNumber) {
  MoveEvent_FieldNumber_StatusCode = 1,
};

@interface MoveEvent : GPBMessage

@property(nonatomic, readwrite) StatusCode statusCode;

@end

/**
 * Fetches the raw value of a @c MoveEvent's @c statusCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MoveEvent_StatusCode_RawValue(MoveEvent *message);
/**
 * Sets the raw value of an @c MoveEvent's @c statusCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMoveEvent_StatusCode_RawValue(MoveEvent *message, int32_t value);

#pragma mark - NavEvent

typedef GPB_ENUM(NavEvent_FieldNumber) {
  NavEvent_FieldNumber_StatusCode = 1,
  NavEvent_FieldNumber_NavTarget = 2,
};

@interface NavEvent : GPBMessage

@property(nonatomic, readwrite) StatusCode statusCode;

@property(nonatomic, readwrite, strong, null_resettable) NavTarget *navTarget;
/** Test to see if @c navTarget has been set. */
@property(nonatomic, readwrite) BOOL hasNavTarget;

@end

/**
 * Fetches the raw value of a @c NavEvent's @c statusCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t NavEvent_StatusCode_RawValue(NavEvent *message);
/**
 * Sets the raw value of an @c NavEvent's @c statusCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetNavEvent_StatusCode_RawValue(NavEvent *message, int32_t value);

#pragma mark - AutoChargeEvent

typedef GPB_ENUM(AutoChargeEvent_FieldNumber) {
  AutoChargeEvent_FieldNumber_ChargeStatusCode = 1,
};

@interface AutoChargeEvent : GPBMessage

@property(nonatomic, readwrite) ChargeStatusCode chargeStatusCode;

@end

/**
 * Fetches the raw value of a @c AutoChargeEvent's @c chargeStatusCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AutoChargeEvent_ChargeStatusCode_RawValue(AutoChargeEvent *message);
/**
 * Sets the raw value of an @c AutoChargeEvent's @c chargeStatusCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAutoChargeEvent_ChargeStatusCode_RawValue(AutoChargeEvent *message, int32_t value);

#pragma mark - RotateEvent

typedef GPB_ENUM(RotateEvent_FieldNumber) {
  RotateEvent_FieldNumber_StatusCode = 1,
};

@interface RotateEvent : GPBMessage

@property(nonatomic, readwrite) StatusCode statusCode;

@end

/**
 * Fetches the raw value of a @c RotateEvent's @c statusCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RotateEvent_StatusCode_RawValue(RotateEvent *message);
/**
 * Sets the raw value of an @c RotateEvent's @c statusCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRotateEvent_StatusCode_RawValue(RotateEvent *message, int32_t value);

#pragma mark - OnNavEventChangeResponse

typedef GPB_ENUM(OnNavEventChangeResponse_FieldNumber) {
  OnNavEventChangeResponse_FieldNumber_NavEventType = 1,
  OnNavEventChangeResponse_FieldNumber_MoveEvent = 2,
  OnNavEventChangeResponse_FieldNumber_NavEvent = 3,
  OnNavEventChangeResponse_FieldNumber_RotateEvent = 4,
  OnNavEventChangeResponse_FieldNumber_AutoChargeEvent = 5,
};

typedef GPB_ENUM(OnNavEventChangeResponse_ChangeOneof_OneOfCase) {
  OnNavEventChangeResponse_ChangeOneof_OneOfCase_GPBUnsetOneOfCase = 0,
  OnNavEventChangeResponse_ChangeOneof_OneOfCase_MoveEvent = 2,
  OnNavEventChangeResponse_ChangeOneof_OneOfCase_NavEvent = 3,
  OnNavEventChangeResponse_ChangeOneof_OneOfCase_RotateEvent = 4,
  OnNavEventChangeResponse_ChangeOneof_OneOfCase_AutoChargeEvent = 5,
};

@interface OnNavEventChangeResponse : GPBMessage

@property(nonatomic, readwrite) NavEventType navEventType;

@property(nonatomic, readonly) OnNavEventChangeResponse_ChangeOneof_OneOfCase changeOneofOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) MoveEvent *moveEvent;

@property(nonatomic, readwrite, strong, null_resettable) NavEvent *navEvent;

@property(nonatomic, readwrite, strong, null_resettable) RotateEvent *rotateEvent;

@property(nonatomic, readwrite, strong, null_resettable) AutoChargeEvent *autoChargeEvent;

@end

/**
 * Fetches the raw value of a @c OnNavEventChangeResponse's @c navEventType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OnNavEventChangeResponse_NavEventType_RawValue(OnNavEventChangeResponse *message);
/**
 * Sets the raw value of an @c OnNavEventChangeResponse's @c navEventType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOnNavEventChangeResponse_NavEventType_RawValue(OnNavEventChangeResponse *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'changeOneof'.
 **/
void OnNavEventChangeResponse_ClearChangeOneofOneOfCase(OnNavEventChangeResponse *message);

#pragma mark - Route

typedef GPB_ENUM(Route_FieldNumber) {
  Route_FieldNumber_Id_p = 1,
  Route_FieldNumber_Name = 2,
  Route_FieldNumber_IsActive = 3,
  Route_FieldNumber_RoutePointsArray = 4,
};

/**
 * 线路数据
 **/
@interface Route : GPBMessage

/** 线路id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 线路名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 当前线路被激活, 导航功能需要匹配激活线路使用 */
@property(nonatomic, readwrite) BOOL isActive;

/** 线路点 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RoutePoint*> *routePointsArray;
/** The number of items in @c routePointsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger routePointsArray_Count;

@end

#pragma mark - RoutePoint

typedef GPB_ENUM(RoutePoint_FieldNumber) {
  RoutePoint_FieldNumber_Name = 1,
  RoutePoint_FieldNumber_Rotate = 2,
};

/**
 * 线路点数据
 **/
@interface RoutePoint : GPBMessage

/** 线路点名 创建时若为空将生成随机名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 线路点角度 */
@property(nonatomic, readwrite) uint32_t rotate;

@end

#pragma mark - NewRouteRequest

typedef GPB_ENUM(NewRouteRequest_FieldNumber) {
  NewRouteRequest_FieldNumber_Route = 1,
};

/**
 * 创建线路请求
 * route.name为空时将创建随机名
 * route.is_active仅允许唯一激活, 若创建线路指定为激活将自动设置此线路为激活
 * route.route_points若为空将自动创建默认数量线路点
 **/
@interface NewRouteRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Route *route;
/** Test to see if @c route has been set. */
@property(nonatomic, readwrite) BOOL hasRoute;

@end

#pragma mark - NewRouteResponse

typedef GPB_ENUM(NewRouteResponse_FieldNumber) {
  NewRouteResponse_FieldNumber_Route = 1,
};

@interface NewRouteResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Route *route;
/** Test to see if @c route has been set. */
@property(nonatomic, readwrite) BOOL hasRoute;

@end

#pragma mark - ListRoutesRequest

@interface ListRoutesRequest : GPBMessage

@end

#pragma mark - ListRoutesResponse

typedef GPB_ENUM(ListRoutesResponse_FieldNumber) {
  ListRoutesResponse_FieldNumber_RoutesArray = 1,
};

@interface ListRoutesResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Route*> *routesArray;
/** The number of items in @c routesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger routesArray_Count;

@end

#pragma mark - GetRouteRequest

typedef GPB_ENUM(GetRouteRequest_FieldNumber) {
  GetRouteRequest_FieldNumber_Id_p = 1,
};

@interface GetRouteRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@end

#pragma mark - GetRouteResponse

typedef GPB_ENUM(GetRouteResponse_FieldNumber) {
  GetRouteResponse_FieldNumber_Route = 1,
};

@interface GetRouteResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Route *route;
/** Test to see if @c route has been set. */
@property(nonatomic, readwrite) BOOL hasRoute;

@end

#pragma mark - UpdateRouteRequest

typedef GPB_ENUM(UpdateRouteRequest_FieldNumber) {
  UpdateRouteRequest_FieldNumber_Route = 1,
};

/**
 * 更新线路请求
 * route.id根据此id获取线路
 * route.name不可为空
 * route.route_points不可为空
 **/
@interface UpdateRouteRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Route *route;
/** Test to see if @c route has been set. */
@property(nonatomic, readwrite) BOOL hasRoute;

@end

#pragma mark - UpdateRouteResponse

typedef GPB_ENUM(UpdateRouteResponse_FieldNumber) {
  UpdateRouteResponse_FieldNumber_Route = 1,
};

@interface UpdateRouteResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Route *route;
/** Test to see if @c route has been set. */
@property(nonatomic, readwrite) BOOL hasRoute;

@end

#pragma mark - DeleteRoutesRequest

typedef GPB_ENUM(DeleteRoutesRequest_FieldNumber) {
  DeleteRoutesRequest_FieldNumber_RoutesIdArray = 1,
};

@interface DeleteRoutesRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *routesIdArray;
/** The number of items in @c routesIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger routesIdArray_Count;

@end

#pragma mark - DeleteRoutesResponse

@interface DeleteRoutesResponse : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
