// Code generated by protoc-gen-go. DO NOT EDIT.
// source: expression.proto

package expressionService

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 表情对象
type ExpressionInfo struct {
	// 表情id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 表情名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 预览图
	PreviewB64           string   `protobuf:"bytes,3,opt,name=preview_b64,json=previewB64,proto3" json:"preview_b64,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExpressionInfo) Reset()         { *m = ExpressionInfo{} }
func (m *ExpressionInfo) String() string { return proto.CompactTextString(m) }
func (*ExpressionInfo) ProtoMessage()    {}
func (*ExpressionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcc7550768b3bd34, []int{0}
}

func (m *ExpressionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpressionInfo.Unmarshal(m, b)
}
func (m *ExpressionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpressionInfo.Marshal(b, m, deterministic)
}
func (m *ExpressionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpressionInfo.Merge(m, src)
}
func (m *ExpressionInfo) XXX_Size() int {
	return xxx_messageInfo_ExpressionInfo.Size(m)
}
func (m *ExpressionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpressionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ExpressionInfo proto.InternalMessageInfo

func (m *ExpressionInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ExpressionInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExpressionInfo) GetPreviewB64() string {
	if m != nil {
		return m.PreviewB64
	}
	return ""
}

// 播放表情请求
type PlayExpressionsRequest struct {
	// 播放的表情对象列表
	// 可仅填入id项或表情名
	ExpressionsInfo []*ExpressionInfo `protobuf:"bytes,1,rep,name=expressions_info,json=expressionsInfo,proto3" json:"expressions_info,omitempty"`
	// 循环播放
	// 0: 持续循环
	LoopTimes uint32 `protobuf:"varint,2,opt,name=loop_times,json=loopTimes,proto3" json:"loop_times,omitempty"`
	// 切换间隔ms
	// 每套表情间的间隔
	Duration             uint32   `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayExpressionsRequest) Reset()         { *m = PlayExpressionsRequest{} }
func (m *PlayExpressionsRequest) String() string { return proto.CompactTextString(m) }
func (*PlayExpressionsRequest) ProtoMessage()    {}
func (*PlayExpressionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcc7550768b3bd34, []int{1}
}

func (m *PlayExpressionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayExpressionsRequest.Unmarshal(m, b)
}
func (m *PlayExpressionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayExpressionsRequest.Marshal(b, m, deterministic)
}
func (m *PlayExpressionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayExpressionsRequest.Merge(m, src)
}
func (m *PlayExpressionsRequest) XXX_Size() int {
	return xxx_messageInfo_PlayExpressionsRequest.Size(m)
}
func (m *PlayExpressionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayExpressionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayExpressionsRequest proto.InternalMessageInfo

func (m *PlayExpressionsRequest) GetExpressionsInfo() []*ExpressionInfo {
	if m != nil {
		return m.ExpressionsInfo
	}
	return nil
}

func (m *PlayExpressionsRequest) GetLoopTimes() uint32 {
	if m != nil {
		return m.LoopTimes
	}
	return 0
}

func (m *PlayExpressionsRequest) GetDuration() uint32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

// 播放表情结果
type PlayExpressionsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayExpressionsResponse) Reset()         { *m = PlayExpressionsResponse{} }
func (m *PlayExpressionsResponse) String() string { return proto.CompactTextString(m) }
func (*PlayExpressionsResponse) ProtoMessage()    {}
func (*PlayExpressionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcc7550768b3bd34, []int{2}
}

func (m *PlayExpressionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayExpressionsResponse.Unmarshal(m, b)
}
func (m *PlayExpressionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayExpressionsResponse.Marshal(b, m, deterministic)
}
func (m *PlayExpressionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayExpressionsResponse.Merge(m, src)
}
func (m *PlayExpressionsResponse) XXX_Size() int {
	return xxx_messageInfo_PlayExpressionsResponse.Size(m)
}
func (m *PlayExpressionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayExpressionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlayExpressionsResponse proto.InternalMessageInfo

// 停止表情请求
type StopExpressionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopExpressionRequest) Reset()         { *m = StopExpressionRequest{} }
func (m *StopExpressionRequest) String() string { return proto.CompactTextString(m) }
func (*StopExpressionRequest) ProtoMessage()    {}
func (*StopExpressionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcc7550768b3bd34, []int{3}
}

func (m *StopExpressionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopExpressionRequest.Unmarshal(m, b)
}
func (m *StopExpressionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopExpressionRequest.Marshal(b, m, deterministic)
}
func (m *StopExpressionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopExpressionRequest.Merge(m, src)
}
func (m *StopExpressionRequest) XXX_Size() int {
	return xxx_messageInfo_StopExpressionRequest.Size(m)
}
func (m *StopExpressionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopExpressionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopExpressionRequest proto.InternalMessageInfo

// 停止表情结果
type StopExpressionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopExpressionResponse) Reset()         { *m = StopExpressionResponse{} }
func (m *StopExpressionResponse) String() string { return proto.CompactTextString(m) }
func (*StopExpressionResponse) ProtoMessage()    {}
func (*StopExpressionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcc7550768b3bd34, []int{4}
}

func (m *StopExpressionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopExpressionResponse.Unmarshal(m, b)
}
func (m *StopExpressionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopExpressionResponse.Marshal(b, m, deterministic)
}
func (m *StopExpressionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopExpressionResponse.Merge(m, src)
}
func (m *StopExpressionResponse) XXX_Size() int {
	return xxx_messageInfo_StopExpressionResponse.Size(m)
}
func (m *StopExpressionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopExpressionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopExpressionResponse proto.InternalMessageInfo

// 上传表情请求
type UploadExpressionFileRequest struct {
	// 表情名
	// 为空时将产生随机表情名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 表情zip文件
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadExpressionFileRequest) Reset()         { *m = UploadExpressionFileRequest{} }
func (m *UploadExpressionFileRequest) String() string { return proto.CompactTextString(m) }
func (*UploadExpressionFileRequest) ProtoMessage()    {}
func (*UploadExpressionFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcc7550768b3bd34, []int{5}
}

func (m *UploadExpressionFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadExpressionFileRequest.Unmarshal(m, b)
}
func (m *UploadExpressionFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadExpressionFileRequest.Marshal(b, m, deterministic)
}
func (m *UploadExpressionFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadExpressionFileRequest.Merge(m, src)
}
func (m *UploadExpressionFileRequest) XXX_Size() int {
	return xxx_messageInfo_UploadExpressionFileRequest.Size(m)
}
func (m *UploadExpressionFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadExpressionFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadExpressionFileRequest proto.InternalMessageInfo

func (m *UploadExpressionFileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UploadExpressionFileRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 上传表情结果
type UploadExpressionFileResponse struct {
	// 表情对象
	ExpressionInfo       *ExpressionInfo `protobuf:"bytes,1,opt,name=expression_info,json=expressionInfo,proto3" json:"expression_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UploadExpressionFileResponse) Reset()         { *m = UploadExpressionFileResponse{} }
func (m *UploadExpressionFileResponse) String() string { return proto.CompactTextString(m) }
func (*UploadExpressionFileResponse) ProtoMessage()    {}
func (*UploadExpressionFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcc7550768b3bd34, []int{6}
}

func (m *UploadExpressionFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadExpressionFileResponse.Unmarshal(m, b)
}
func (m *UploadExpressionFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadExpressionFileResponse.Marshal(b, m, deterministic)
}
func (m *UploadExpressionFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadExpressionFileResponse.Merge(m, src)
}
func (m *UploadExpressionFileResponse) XXX_Size() int {
	return xxx_messageInfo_UploadExpressionFileResponse.Size(m)
}
func (m *UploadExpressionFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadExpressionFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadExpressionFileResponse proto.InternalMessageInfo

func (m *UploadExpressionFileResponse) GetExpressionInfo() *ExpressionInfo {
	if m != nil {
		return m.ExpressionInfo
	}
	return nil
}

// 获取表情数据请求
type ListExpressionsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListExpressionsRequest) Reset()         { *m = ListExpressionsRequest{} }
func (m *ListExpressionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListExpressionsRequest) ProtoMessage()    {}
func (*ListExpressionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcc7550768b3bd34, []int{7}
}

func (m *ListExpressionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListExpressionsRequest.Unmarshal(m, b)
}
func (m *ListExpressionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListExpressionsRequest.Marshal(b, m, deterministic)
}
func (m *ListExpressionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListExpressionsRequest.Merge(m, src)
}
func (m *ListExpressionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListExpressionsRequest.Size(m)
}
func (m *ListExpressionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListExpressionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListExpressionsRequest proto.InternalMessageInfo

// 获取表情数据结果
type ListExpressionsResponse struct {
	// 表情对象列表
	ExpressionsInfo      []*ExpressionInfo `protobuf:"bytes,1,rep,name=expressions_info,json=expressionsInfo,proto3" json:"expressions_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListExpressionsResponse) Reset()         { *m = ListExpressionsResponse{} }
func (m *ListExpressionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListExpressionsResponse) ProtoMessage()    {}
func (*ListExpressionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcc7550768b3bd34, []int{8}
}

func (m *ListExpressionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListExpressionsResponse.Unmarshal(m, b)
}
func (m *ListExpressionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListExpressionsResponse.Marshal(b, m, deterministic)
}
func (m *ListExpressionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListExpressionsResponse.Merge(m, src)
}
func (m *ListExpressionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListExpressionsResponse.Size(m)
}
func (m *ListExpressionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListExpressionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListExpressionsResponse proto.InternalMessageInfo

func (m *ListExpressionsResponse) GetExpressionsInfo() []*ExpressionInfo {
	if m != nil {
		return m.ExpressionsInfo
	}
	return nil
}

// 删除表情请求
type DeleteExpressionsRequest struct {
	// 删除表情id列表
	ExpressionsId        []string `protobuf:"bytes,1,rep,name=expressions_id,json=expressionsId,proto3" json:"expressions_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteExpressionsRequest) Reset()         { *m = DeleteExpressionsRequest{} }
func (m *DeleteExpressionsRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteExpressionsRequest) ProtoMessage()    {}
func (*DeleteExpressionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcc7550768b3bd34, []int{9}
}

func (m *DeleteExpressionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteExpressionsRequest.Unmarshal(m, b)
}
func (m *DeleteExpressionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteExpressionsRequest.Marshal(b, m, deterministic)
}
func (m *DeleteExpressionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteExpressionsRequest.Merge(m, src)
}
func (m *DeleteExpressionsRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteExpressionsRequest.Size(m)
}
func (m *DeleteExpressionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteExpressionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteExpressionsRequest proto.InternalMessageInfo

func (m *DeleteExpressionsRequest) GetExpressionsId() []string {
	if m != nil {
		return m.ExpressionsId
	}
	return nil
}

// 删除表情结果
type DeleteExpressionsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteExpressionsResponse) Reset()         { *m = DeleteExpressionsResponse{} }
func (m *DeleteExpressionsResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteExpressionsResponse) ProtoMessage()    {}
func (*DeleteExpressionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcc7550768b3bd34, []int{10}
}

func (m *DeleteExpressionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteExpressionsResponse.Unmarshal(m, b)
}
func (m *DeleteExpressionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteExpressionsResponse.Marshal(b, m, deterministic)
}
func (m *DeleteExpressionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteExpressionsResponse.Merge(m, src)
}
func (m *DeleteExpressionsResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteExpressionsResponse.Size(m)
}
func (m *DeleteExpressionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteExpressionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteExpressionsResponse proto.InternalMessageInfo

// 表情重命名请求
type RenameRequest struct {
	// 表情id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 新表情名
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenameRequest) Reset()         { *m = RenameRequest{} }
func (m *RenameRequest) String() string { return proto.CompactTextString(m) }
func (*RenameRequest) ProtoMessage()    {}
func (*RenameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcc7550768b3bd34, []int{11}
}

func (m *RenameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenameRequest.Unmarshal(m, b)
}
func (m *RenameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenameRequest.Marshal(b, m, deterministic)
}
func (m *RenameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenameRequest.Merge(m, src)
}
func (m *RenameRequest) XXX_Size() int {
	return xxx_messageInfo_RenameRequest.Size(m)
}
func (m *RenameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenameRequest proto.InternalMessageInfo

func (m *RenameRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RenameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 表情重命名结果
type RenameResponse struct {
	// 表情id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 表情名
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenameResponse) Reset()         { *m = RenameResponse{} }
func (m *RenameResponse) String() string { return proto.CompactTextString(m) }
func (*RenameResponse) ProtoMessage()    {}
func (*RenameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcc7550768b3bd34, []int{12}
}

func (m *RenameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenameResponse.Unmarshal(m, b)
}
func (m *RenameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenameResponse.Marshal(b, m, deterministic)
}
func (m *RenameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenameResponse.Merge(m, src)
}
func (m *RenameResponse) XXX_Size() int {
	return xxx_messageInfo_RenameResponse.Size(m)
}
func (m *RenameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RenameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RenameResponse proto.InternalMessageInfo

func (m *RenameResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RenameResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*ExpressionInfo)(nil), "expressionService.ExpressionInfo")
	proto.RegisterType((*PlayExpressionsRequest)(nil), "expressionService.PlayExpressionsRequest")
	proto.RegisterType((*PlayExpressionsResponse)(nil), "expressionService.PlayExpressionsResponse")
	proto.RegisterType((*StopExpressionRequest)(nil), "expressionService.StopExpressionRequest")
	proto.RegisterType((*StopExpressionResponse)(nil), "expressionService.StopExpressionResponse")
	proto.RegisterType((*UploadExpressionFileRequest)(nil), "expressionService.UploadExpressionFileRequest")
	proto.RegisterType((*UploadExpressionFileResponse)(nil), "expressionService.UploadExpressionFileResponse")
	proto.RegisterType((*ListExpressionsRequest)(nil), "expressionService.ListExpressionsRequest")
	proto.RegisterType((*ListExpressionsResponse)(nil), "expressionService.ListExpressionsResponse")
	proto.RegisterType((*DeleteExpressionsRequest)(nil), "expressionService.DeleteExpressionsRequest")
	proto.RegisterType((*DeleteExpressionsResponse)(nil), "expressionService.DeleteExpressionsResponse")
	proto.RegisterType((*RenameRequest)(nil), "expressionService.RenameRequest")
	proto.RegisterType((*RenameResponse)(nil), "expressionService.RenameResponse")
}

func init() { proto.RegisterFile("expression.proto", fileDescriptor_fcc7550768b3bd34) }

var fileDescriptor_fcc7550768b3bd34 = []byte{
	// 587 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0x71, 0x37, 0x55, 0xf4, 0x1d, 0xcd, 0xa8, 0x05, 0x6b, 0x9a, 0x0d, 0xe8, 0x0c, 0x13,
	0x5d, 0x81, 0x16, 0x75, 0xd5, 0x0e, 0xdc, 0x40, 0x14, 0x09, 0xb4, 0x03, 0xca, 0xd8, 0xb9, 0xca,
	0x88, 0x57, 0x19, 0x65, 0xb1, 0x89, 0xbd, 0x42, 0xaf, 0x7c, 0x05, 0x38, 0x70, 0x84, 0xcf, 0xc4,
	0x57, 0xe0, 0x1b, 0xf0, 0x05, 0x50, 0x5c, 0x77, 0x4d, 0x53, 0xaf, 0xca, 0x61, 0xb7, 0xc6, 0x7e,
	0xff, 0xfc, 0xde, 0xd7, 0xcf, 0xa3, 0xc2, 0x6d, 0xfa, 0x55, 0x24, 0x54, 0x4a, 0xc6, 0xe3, 0x8e,
	0x48, 0xb8, 0xe2, 0xb8, 0x36, 0x3f, 0x39, 0xa6, 0xc9, 0x98, 0x7d, 0xa4, 0xde, 0xce, 0x88, 0xf3,
	0x51, 0x44, 0xbb, 0x81, 0x60, 0xdd, 0x20, 0x8e, 0xb9, 0x0a, 0x14, 0xe3, 0xb1, 0x9c, 0x26, 0x90,
	0x13, 0x70, 0x06, 0x97, 0x29, 0x6f, 0xe3, 0x33, 0x8e, 0x1d, 0x28, 0xb1, 0xd0, 0x45, 0x4d, 0xd4,
	0xaa, 0xf8, 0x25, 0x16, 0x62, 0x0c, 0xeb, 0x71, 0x70, 0x4e, 0xdd, 0x92, 0x3e, 0xd1, 0xbf, 0xf1,
	0x03, 0xd8, 0x10, 0x09, 0x1d, 0x33, 0xfa, 0x65, 0x78, 0x7a, 0xd8, 0x77, 0xd7, 0xf4, 0x15, 0x98,
	0xa3, 0x57, 0x87, 0x7d, 0xf2, 0x1b, 0xc1, 0xd6, 0xfb, 0x28, 0x98, 0xcc, 0x6b, 0x4b, 0x9f, 0x7e,
	0xbe, 0xa0, 0x52, 0xe1, 0xa3, 0x2c, 0xb6, 0x1c, 0xb2, 0xf8, 0x8c, 0xbb, 0xa8, 0xb9, 0xd6, 0xda,
	0xe8, 0xed, 0x76, 0x96, 0xe8, 0x3b, 0x8b, 0x70, 0xfe, 0x66, 0x26, 0x55, 0xd3, 0xde, 0x03, 0x88,
	0x38, 0x17, 0x43, 0xc5, 0xce, 0xa9, 0xd4, 0x8c, 0x55, 0xbf, 0x92, 0x9e, 0x7c, 0x48, 0x0f, 0xb0,
	0x07, 0x37, 0xc3, 0x8b, 0x44, 0x4f, 0xac, 0x29, 0xab, 0xfe, 0xe5, 0x37, 0x69, 0x40, 0x7d, 0x09,
	0x51, 0x0a, 0x1e, 0x4b, 0x4a, 0xea, 0x70, 0xf7, 0x58, 0x71, 0x31, 0xbf, 0x32, 0xf0, 0xc4, 0x85,
	0xad, 0xfc, 0x85, 0x49, 0x19, 0xc0, 0xf6, 0x89, 0x88, 0x78, 0x10, 0xce, 0xef, 0xde, 0xb0, 0x88,
	0xce, 0xa6, 0x9e, 0x6d, 0x11, 0x65, 0xb6, 0x88, 0x61, 0x3d, 0x0c, 0x54, 0xa0, 0xa9, 0x6f, 0xf9,
	0xfa, 0x37, 0xf9, 0x04, 0x3b, 0xf6, 0x32, 0xd3, 0x36, 0xf8, 0x1d, 0x64, 0x56, 0x30, 0x5b, 0x1e,
	0x2a, 0xb6, 0x3c, 0x87, 0x2e, 0x7c, 0xa7, 0xc3, 0x1c, 0x31, 0xa9, 0x96, 0xdf, 0x88, 0x8c, 0xa0,
	0xbe, 0x74, 0x63, 0x00, 0xae, 0xf5, 0xf9, 0xc8, 0x4b, 0x70, 0x5f, 0xd3, 0x88, 0x2a, 0x6a, 0x11,
	0xca, 0x1e, 0x38, 0x0b, 0x9d, 0x42, 0xdd, 0xa7, 0xe2, 0x57, 0xb3, 0x45, 0x42, 0xb2, 0x0d, 0x0d,
	0x4b, 0x09, 0xf3, 0x2a, 0x07, 0x50, 0xf5, 0x69, 0xba, 0xec, 0x59, 0xd1, 0x02, 0xea, 0x26, 0x7d,
	0x70, 0x66, 0x49, 0x66, 0xe8, 0x02, 0x59, 0xbd, 0x7f, 0x65, 0xa8, 0x0d, 0xf2, 0x0b, 0xc0, 0x3f,
	0x11, 0x6c, 0xe6, 0x54, 0x86, 0xf7, 0x2d, 0x8b, 0xb2, 0x9b, 0xc5, 0x6b, 0x17, 0x09, 0x35, 0xb3,
	0x76, 0xbe, 0xfd, 0xf9, 0xfb, 0xbd, 0xd4, 0x22, 0x0f, 0xb5, 0xd5, 0xc7, 0xbd, 0xee, 0x3c, 0xb5,
	0x2b, 0xa2, 0x60, 0x32, 0xcc, 0xec, 0xed, 0x05, 0x6a, 0xe3, 0x1f, 0x08, 0x9c, 0x45, 0x31, 0xe3,
	0x96, 0xa5, 0x9d, 0xd5, 0x08, 0xde, 0x7e, 0x81, 0x48, 0xc3, 0xf5, 0x4c, 0x73, 0x3d, 0x26, 0xc4,
	0xc2, 0x25, 0x15, 0x17, 0x19, 0xae, 0x14, 0x6b, 0x02, 0x77, 0x6c, 0x0e, 0xc0, 0x1d, 0x4b, 0xc7,
	0x15, 0x8e, 0xf3, 0xba, 0x85, 0xe3, 0x0d, 0xe7, 0x0d, 0x2c, 0xa1, 0x3c, 0x7d, 0x78, 0xdc, 0xb4,
	0x24, 0x2f, 0x08, 0xc9, 0xdb, 0x5d, 0x11, 0x61, 0x0a, 0x3e, 0xd2, 0x83, 0xdf, 0x27, 0x0d, 0xcb,
	0xe0, 0x89, 0x0e, 0x4d, 0xe7, 0x4d, 0x15, 0x92, 0x33, 0x9b, 0x55, 0x21, 0x76, 0xab, 0x5a, 0x15,
	0x72, 0x85, 0x77, 0x57, 0x2a, 0x24, 0x62, 0x52, 0xe5, 0x15, 0xf2, 0x0b, 0x41, 0x6d, 0xc9, 0x5b,
	0xf8, 0x89, 0xa5, 0xe3, 0x55, 0x26, 0xf6, 0x9e, 0x16, 0x0b, 0x36, 0x80, 0xcf, 0x35, 0x60, 0x9b,
	0xec, 0x59, 0x00, 0x43, 0x9d, 0x95, 0x43, 0x3c, 0x2d, 0xeb, 0xbf, 0xb1, 0x83, 0xff, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x67, 0x49, 0xb9, 0x1a, 0x0b, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExpressionServiceClient is the client API for ExpressionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExpressionServiceClient interface {
	// 播放表情
	PlayExpressions(ctx context.Context, in *PlayExpressionsRequest, opts ...grpc.CallOption) (*PlayExpressionsResponse, error)
	// 停止表情
	StopExpression(ctx context.Context, in *StopExpressionRequest, opts ...grpc.CallOption) (*StopExpressionResponse, error)
	// 上传表情
	UploadExpressionFile(ctx context.Context, in *UploadExpressionFileRequest, opts ...grpc.CallOption) (*UploadExpressionFileResponse, error)
	// 表情重命名
	// >= v1.1.0
	Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*RenameResponse, error)
	// 获取表情数据
	ListExpressions(ctx context.Context, in *ListExpressionsRequest, opts ...grpc.CallOption) (*ListExpressionsResponse, error)
	// 删除表情
	DeleteExpressions(ctx context.Context, in *DeleteExpressionsRequest, opts ...grpc.CallOption) (*DeleteExpressionsResponse, error)
}

type expressionServiceClient struct {
	cc *grpc.ClientConn
}

func NewExpressionServiceClient(cc *grpc.ClientConn) ExpressionServiceClient {
	return &expressionServiceClient{cc}
}

func (c *expressionServiceClient) PlayExpressions(ctx context.Context, in *PlayExpressionsRequest, opts ...grpc.CallOption) (*PlayExpressionsResponse, error) {
	out := new(PlayExpressionsResponse)
	err := c.cc.Invoke(ctx, "/expressionService.ExpressionService/PlayExpressions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *expressionServiceClient) StopExpression(ctx context.Context, in *StopExpressionRequest, opts ...grpc.CallOption) (*StopExpressionResponse, error) {
	out := new(StopExpressionResponse)
	err := c.cc.Invoke(ctx, "/expressionService.ExpressionService/StopExpression", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *expressionServiceClient) UploadExpressionFile(ctx context.Context, in *UploadExpressionFileRequest, opts ...grpc.CallOption) (*UploadExpressionFileResponse, error) {
	out := new(UploadExpressionFileResponse)
	err := c.cc.Invoke(ctx, "/expressionService.ExpressionService/UploadExpressionFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *expressionServiceClient) Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*RenameResponse, error) {
	out := new(RenameResponse)
	err := c.cc.Invoke(ctx, "/expressionService.ExpressionService/Rename", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *expressionServiceClient) ListExpressions(ctx context.Context, in *ListExpressionsRequest, opts ...grpc.CallOption) (*ListExpressionsResponse, error) {
	out := new(ListExpressionsResponse)
	err := c.cc.Invoke(ctx, "/expressionService.ExpressionService/ListExpressions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *expressionServiceClient) DeleteExpressions(ctx context.Context, in *DeleteExpressionsRequest, opts ...grpc.CallOption) (*DeleteExpressionsResponse, error) {
	out := new(DeleteExpressionsResponse)
	err := c.cc.Invoke(ctx, "/expressionService.ExpressionService/DeleteExpressions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExpressionServiceServer is the server API for ExpressionService service.
type ExpressionServiceServer interface {
	// 播放表情
	PlayExpressions(context.Context, *PlayExpressionsRequest) (*PlayExpressionsResponse, error)
	// 停止表情
	StopExpression(context.Context, *StopExpressionRequest) (*StopExpressionResponse, error)
	// 上传表情
	UploadExpressionFile(context.Context, *UploadExpressionFileRequest) (*UploadExpressionFileResponse, error)
	// 表情重命名
	// >= v1.1.0
	Rename(context.Context, *RenameRequest) (*RenameResponse, error)
	// 获取表情数据
	ListExpressions(context.Context, *ListExpressionsRequest) (*ListExpressionsResponse, error)
	// 删除表情
	DeleteExpressions(context.Context, *DeleteExpressionsRequest) (*DeleteExpressionsResponse, error)
}

// UnimplementedExpressionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedExpressionServiceServer struct {
}

func (*UnimplementedExpressionServiceServer) PlayExpressions(ctx context.Context, req *PlayExpressionsRequest) (*PlayExpressionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayExpressions not implemented")
}
func (*UnimplementedExpressionServiceServer) StopExpression(ctx context.Context, req *StopExpressionRequest) (*StopExpressionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopExpression not implemented")
}
func (*UnimplementedExpressionServiceServer) UploadExpressionFile(ctx context.Context, req *UploadExpressionFileRequest) (*UploadExpressionFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadExpressionFile not implemented")
}
func (*UnimplementedExpressionServiceServer) Rename(ctx context.Context, req *RenameRequest) (*RenameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rename not implemented")
}
func (*UnimplementedExpressionServiceServer) ListExpressions(ctx context.Context, req *ListExpressionsRequest) (*ListExpressionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListExpressions not implemented")
}
func (*UnimplementedExpressionServiceServer) DeleteExpressions(ctx context.Context, req *DeleteExpressionsRequest) (*DeleteExpressionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteExpressions not implemented")
}

func RegisterExpressionServiceServer(s *grpc.Server, srv ExpressionServiceServer) {
	s.RegisterService(&_ExpressionService_serviceDesc, srv)
}

func _ExpressionService_PlayExpressions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayExpressionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExpressionServiceServer).PlayExpressions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/expressionService.ExpressionService/PlayExpressions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExpressionServiceServer).PlayExpressions(ctx, req.(*PlayExpressionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExpressionService_StopExpression_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopExpressionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExpressionServiceServer).StopExpression(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/expressionService.ExpressionService/StopExpression",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExpressionServiceServer).StopExpression(ctx, req.(*StopExpressionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExpressionService_UploadExpressionFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadExpressionFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExpressionServiceServer).UploadExpressionFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/expressionService.ExpressionService/UploadExpressionFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExpressionServiceServer).UploadExpressionFile(ctx, req.(*UploadExpressionFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExpressionService_Rename_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExpressionServiceServer).Rename(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/expressionService.ExpressionService/Rename",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExpressionServiceServer).Rename(ctx, req.(*RenameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExpressionService_ListExpressions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListExpressionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExpressionServiceServer).ListExpressions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/expressionService.ExpressionService/ListExpressions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExpressionServiceServer).ListExpressions(ctx, req.(*ListExpressionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExpressionService_DeleteExpressions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteExpressionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExpressionServiceServer).DeleteExpressions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/expressionService.ExpressionService/DeleteExpressions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExpressionServiceServer).DeleteExpressions(ctx, req.(*DeleteExpressionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExpressionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "expressionService.ExpressionService",
	HandlerType: (*ExpressionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PlayExpressions",
			Handler:    _ExpressionService_PlayExpressions_Handler,
		},
		{
			MethodName: "StopExpression",
			Handler:    _ExpressionService_StopExpression_Handler,
		},
		{
			MethodName: "UploadExpressionFile",
			Handler:    _ExpressionService_UploadExpressionFile_Handler,
		},
		{
			MethodName: "Rename",
			Handler:    _ExpressionService_Rename_Handler,
		},
		{
			MethodName: "ListExpressions",
			Handler:    _ExpressionService_ListExpressions_Handler,
		},
		{
			MethodName: "DeleteExpressions",
			Handler:    _ExpressionService_DeleteExpressions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "expression.proto",
}
