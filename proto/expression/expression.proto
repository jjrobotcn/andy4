syntax = "proto3";

package expressionService;

option go_package = "expressionpb";

option java_package = "com.jjrobot.andy4.expressionpb";
option java_outer_classname = "ExpressionServicePB";

// expressionService.ExpressionService 表情管理
//
// 开发管理平台功能参考: http://10.10.10.2/expression/
service ExpressionService {
    // PlayExpressions 播放表情组合
    //
    // 单套表情限制请参考UploadExpressionFile方法，
    // 更为复杂的表情设计可基于多个最小化表情进行组合
    rpc PlayExpressions (PlayExpressionsRequest) returns (PlayExpressionsResponse) {}

    // StopExpression 停止表情播放
    //
    // 此方法将表现为播放至当前帧终止，不会恢复为当前表情的首帧
    rpc StopExpression (StopExpressionRequest) returns (StopExpressionResponse) {}

    // UploadExpressionFile 上传表情文件
    //
    // 上传表情图片zip文件，用于构建新的表情
    //
    // 表情文件为zip格式数据，如Example.zip文件上传后该表情将命名为"Example"，命名可通过Rename方法进行更改
    //
    // windows用户请在表情目录中选中preview.png, left目录，right目录，直接压缩为zip文件，不支持包含父目录
    //
    // 表情包目录示例：
    // left与right目录图片数量最大限制为各10张
    //├── preview.png # 表情预览文件，与表情数据无关，仅作为预览图用
    //│
    //├── left # 左眼表情数据
    //│   ├── 1.png
    //│   ├── 2.png
    //│   ├── 3.png
    //│   ├── 4.png
    //│   └── 5.png
    //│
    //└── right # 右眼表情数据
    //    ├── 1.png
    //    ├── 2.png
    //    ├── 3.png
    //    ├── 4.png
    //    └── 5.png
    //
    // 网关不包含当前方法，HTTP上传请使用以下接口
    // POST /api/v2/expression/upload_expression_file
    // Content-Type: application/x-www-form-urlencoded
    // Body:
    //   - name: String
    //   - e: File, e.g. Example.zip
    rpc UploadExpressionFile (UploadExpressionFileRequest) returns (UploadExpressionFileResponse) {}

    // Rename 对已上传的表情进行重命名
    rpc Rename (RenameRequest) returns (RenameResponse) {}

    // ListExpressions 获取表情列表
    rpc ListExpressions (ListExpressionsRequest) returns (ListExpressionsResponse) {}

    // DeleteExpressions 删除表情列表
    rpc DeleteExpressions (DeleteExpressionsRequest) returns (DeleteExpressionsResponse) {}

    // State 获取当前表情模块状态
    rpc State(StateRequest) returns (StateResponse) {}

    // Switch 控制表情的开关
    // 关闭时将表现为黑屏
    rpc Switch(SwitchRequest) returns (SwitchResponse) {}
}

// 表情对象
message ExpressionInfo {
    // 表情id
    string id = 1;

    // 表情名
    string name = 2;

    // 预览图
    string preview_b64 = 3;
}

// 播放表情请求
message PlayExpressionsRequest {
    // 播放的表情对象列表
    // 可仅填入id项或表情名
    repeated ExpressionInfo expressions_info = 1;

    // 循环播放
    // 0: 持续循环
    uint32 loop_times = 2;

    // 切换间隔ms
    // 每套表情间的间隔
    uint32 duration = 3;
}

// 播放表情结果
message PlayExpressionsResponse {}

// 停止表情请求
message StopExpressionRequest {}

// 停止表情结果
message StopExpressionResponse {}

// 上传表情请求
message UploadExpressionFileRequest {
    // 表情名
    // 为空时将产生随机表情名
    string name = 1;

    // 表情zip文件
    bytes data = 2;
}

// 上传表情结果
message UploadExpressionFileResponse {
    // 表情对象
    ExpressionInfo expression_info = 1;
}

// 获取表情数据请求
message ListExpressionsRequest {}

// 获取表情数据结果
message ListExpressionsResponse {
    // 表情对象列表
    repeated ExpressionInfo expressions_info = 1;
}

// 删除表情请求
message DeleteExpressionsRequest {
    // 删除表情id列表
    repeated string expressions_id = 1;
}

// 删除表情结果
message DeleteExpressionsResponse {}

// 表情重命名请求
message RenameRequest {
    // 表情id
    string id = 1;

    // 新表情名
    string name = 2;
}

// 表情重命名结果
message RenameResponse {
    // 表情id
    string id = 1;

    // 表情名
    string name = 2;
}

message StateRequest {}

message StateResponse {
    // 当前是否启用
    bool is_active = 1;
    // 当前是否在播放中
    bool is_playing = 2;
}

message SwitchRequest {
    // 启用与关闭
    bool active = 1;
}

message SwitchResponse {
    // 当前是否启用
    bool is_active = 1;
}
