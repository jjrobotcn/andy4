// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging.proto

#include "messaging.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_messaging_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MessagePublish_messaging_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Subscribe_messaging_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Unsubscribe_messaging_2eproto;
namespace messaging {
class SubscribeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Subscribe> _instance;
} _Subscribe_default_instance_;
class UnsubscribeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Unsubscribe> _instance;
} _Unsubscribe_default_instance_;
class MessagePublishDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessagePublish> _instance;
} _MessagePublish_default_instance_;
class MessagingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessagingRequest> _instance;
  const ::messaging::Subscribe* subscribe_;
  const ::messaging::Unsubscribe* unsubscribe_;
  const ::messaging::MessagePublish* message_publish_;
} _MessagingRequest_default_instance_;
class MessagingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessagingResponse> _instance;
} _MessagingResponse_default_instance_;
}  // namespace messaging
static void InitDefaultsSubscribe_messaging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messaging::_Subscribe_default_instance_;
    new (ptr) ::messaging::Subscribe();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messaging::Subscribe::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Subscribe_messaging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSubscribe_messaging_2eproto}, {}};

static void InitDefaultsUnsubscribe_messaging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messaging::_Unsubscribe_default_instance_;
    new (ptr) ::messaging::Unsubscribe();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messaging::Unsubscribe::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Unsubscribe_messaging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnsubscribe_messaging_2eproto}, {}};

static void InitDefaultsMessagePublish_messaging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messaging::_MessagePublish_default_instance_;
    new (ptr) ::messaging::MessagePublish();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messaging::MessagePublish::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessagePublish_messaging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessagePublish_messaging_2eproto}, {}};

static void InitDefaultsMessagingRequest_messaging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messaging::_MessagingRequest_default_instance_;
    new (ptr) ::messaging::MessagingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messaging::MessagingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_MessagingRequest_messaging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMessagingRequest_messaging_2eproto}, {
      &scc_info_Subscribe_messaging_2eproto.base,
      &scc_info_Unsubscribe_messaging_2eproto.base,
      &scc_info_MessagePublish_messaging_2eproto.base,}};

static void InitDefaultsMessagingResponse_messaging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messaging::_MessagingResponse_default_instance_;
    new (ptr) ::messaging::MessagingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messaging::MessagingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessagingResponse_messaging_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessagingResponse_messaging_2eproto}, {}};

void InitDefaults_messaging_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Subscribe_messaging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Unsubscribe_messaging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessagePublish_messaging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessagingRequest_messaging_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessagingResponse_messaging_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_messaging_2eproto[5];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_messaging_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_messaging_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_messaging_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messaging::Subscribe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messaging::Subscribe, topics_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messaging::Unsubscribe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messaging::Unsubscribe, topics_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messaging::MessagePublish, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messaging::MessagePublish, topics_),
  PROTOBUF_FIELD_OFFSET(::messaging::MessagePublish, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messaging::MessagingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::messaging::MessagingRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::messaging::MessagingRequestDefaultTypeInternal, subscribe_),
  offsetof(::messaging::MessagingRequestDefaultTypeInternal, unsubscribe_),
  offsetof(::messaging::MessagingRequestDefaultTypeInternal, message_publish_),
  PROTOBUF_FIELD_OFFSET(::messaging::MessagingRequest, messaging_oneof_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messaging::MessagingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messaging::MessagingResponse, topic_),
  PROTOBUF_FIELD_OFFSET(::messaging::MessagingResponse, payload_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::messaging::Subscribe)},
  { 6, -1, sizeof(::messaging::Unsubscribe)},
  { 12, -1, sizeof(::messaging::MessagePublish)},
  { 19, -1, sizeof(::messaging::MessagingRequest)},
  { 28, -1, sizeof(::messaging::MessagingResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::messaging::_Subscribe_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::messaging::_Unsubscribe_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::messaging::_MessagePublish_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::messaging::_MessagingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::messaging::_MessagingResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_messaging_2eproto = {
  {}, AddDescriptors_messaging_2eproto, "messaging.proto", schemas,
  file_default_instances, TableStruct_messaging_2eproto::offsets,
  file_level_metadata_messaging_2eproto, 5, file_level_enum_descriptors_messaging_2eproto, file_level_service_descriptors_messaging_2eproto,
};

const char descriptor_table_protodef_messaging_2eproto[] =
  "\n\017messaging.proto\022\tmessaging\"\033\n\tSubscrib"
  "e\022\016\n\006topics\030\001 \003(\t\"\035\n\013Unsubscribe\022\016\n\006topi"
  "cs\030\001 \003(\t\"1\n\016MessagePublish\022\016\n\006topics\030\001 \003"
  "(\t\022\017\n\007payload\030\002 \001(\014\"\265\001\n\020MessagingRequest"
  "\022)\n\tsubscribe\030\001 \001(\0132\024.messaging.Subscrib"
  "eH\000\022-\n\013unsubscribe\030\002 \001(\0132\026.messaging.Uns"
  "ubscribeH\000\0224\n\017message_publish\030\003 \001(\0132\031.me"
  "ssaging.MessagePublishH\000B\021\n\017messaging_on"
  "eof\"3\n\021MessagingResponse\022\r\n\005topic\030\001 \001(\t\022"
  "\017\n\007payload\030\002 \001(\0142`\n\020MessagingService\022L\n\t"
  "Messaging\022\033.messaging.MessagingRequest\032\034"
  ".messaging.MessagingResponse\"\000(\0010\001B!\n\037co"
  "m.jj-robot.andy4srv.messagingb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_messaging_2eproto = {
  false, InitDefaults_messaging_2eproto, 
  descriptor_table_protodef_messaging_2eproto,
  "messaging.proto", &assign_descriptors_table_messaging_2eproto, 517,
};

void AddDescriptors_messaging_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_messaging_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_messaging_2eproto = []() { AddDescriptors_messaging_2eproto(); return true; }();
namespace messaging {

// ===================================================================

void Subscribe::InitAsDefaultInstance() {
}
class Subscribe::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Subscribe::kTopicsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Subscribe::Subscribe()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:messaging.Subscribe)
}
Subscribe::Subscribe(const Subscribe& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      topics_(from.topics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:messaging.Subscribe)
}

void Subscribe::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Subscribe_messaging_2eproto.base);
}

Subscribe::~Subscribe() {
  // @@protoc_insertion_point(destructor:messaging.Subscribe)
  SharedDtor();
}

void Subscribe::SharedDtor() {
}

void Subscribe::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Subscribe& Subscribe::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Subscribe_messaging_2eproto.base);
  return *internal_default_instance();
}


void Subscribe::Clear() {
// @@protoc_insertion_point(message_clear_start:messaging.Subscribe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topics_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Subscribe::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Subscribe*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string topics = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("messaging.Subscribe.topics");
          object = msg->add_topics();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Subscribe::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:messaging.Subscribe)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string topics = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_topics()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topics(this->topics_size() - 1).data(),
            static_cast<int>(this->topics(this->topics_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "messaging.Subscribe.topics"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:messaging.Subscribe)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:messaging.Subscribe)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Subscribe::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:messaging.Subscribe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string topics = 1;
  for (int i = 0, n = this->topics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topics(i).data(), static_cast<int>(this->topics(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "messaging.Subscribe.topics");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->topics(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:messaging.Subscribe)
}

::google::protobuf::uint8* Subscribe::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:messaging.Subscribe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string topics = 1;
  for (int i = 0, n = this->topics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topics(i).data(), static_cast<int>(this->topics(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "messaging.Subscribe.topics");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->topics(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messaging.Subscribe)
  return target;
}

size_t Subscribe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messaging.Subscribe)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string topics = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->topics_size());
  for (int i = 0, n = this->topics_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->topics(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Subscribe::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messaging.Subscribe)
  GOOGLE_DCHECK_NE(&from, this);
  const Subscribe* source =
      ::google::protobuf::DynamicCastToGenerated<Subscribe>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messaging.Subscribe)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messaging.Subscribe)
    MergeFrom(*source);
  }
}

void Subscribe::MergeFrom(const Subscribe& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messaging.Subscribe)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  topics_.MergeFrom(from.topics_);
}

void Subscribe::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messaging.Subscribe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Subscribe::CopyFrom(const Subscribe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messaging.Subscribe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Subscribe::IsInitialized() const {
  return true;
}

void Subscribe::Swap(Subscribe* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Subscribe::InternalSwap(Subscribe* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  topics_.InternalSwap(CastToBase(&other->topics_));
}

::google::protobuf::Metadata Subscribe::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messaging_2eproto);
  return ::file_level_metadata_messaging_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Unsubscribe::InitAsDefaultInstance() {
}
class Unsubscribe::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Unsubscribe::kTopicsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Unsubscribe::Unsubscribe()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:messaging.Unsubscribe)
}
Unsubscribe::Unsubscribe(const Unsubscribe& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      topics_(from.topics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:messaging.Unsubscribe)
}

void Unsubscribe::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Unsubscribe_messaging_2eproto.base);
}

Unsubscribe::~Unsubscribe() {
  // @@protoc_insertion_point(destructor:messaging.Unsubscribe)
  SharedDtor();
}

void Unsubscribe::SharedDtor() {
}

void Unsubscribe::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Unsubscribe& Unsubscribe::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Unsubscribe_messaging_2eproto.base);
  return *internal_default_instance();
}


void Unsubscribe::Clear() {
// @@protoc_insertion_point(message_clear_start:messaging.Unsubscribe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topics_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Unsubscribe::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Unsubscribe*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string topics = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("messaging.Unsubscribe.topics");
          object = msg->add_topics();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Unsubscribe::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:messaging.Unsubscribe)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string topics = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_topics()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topics(this->topics_size() - 1).data(),
            static_cast<int>(this->topics(this->topics_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "messaging.Unsubscribe.topics"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:messaging.Unsubscribe)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:messaging.Unsubscribe)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Unsubscribe::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:messaging.Unsubscribe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string topics = 1;
  for (int i = 0, n = this->topics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topics(i).data(), static_cast<int>(this->topics(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "messaging.Unsubscribe.topics");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->topics(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:messaging.Unsubscribe)
}

::google::protobuf::uint8* Unsubscribe::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:messaging.Unsubscribe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string topics = 1;
  for (int i = 0, n = this->topics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topics(i).data(), static_cast<int>(this->topics(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "messaging.Unsubscribe.topics");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->topics(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messaging.Unsubscribe)
  return target;
}

size_t Unsubscribe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messaging.Unsubscribe)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string topics = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->topics_size());
  for (int i = 0, n = this->topics_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->topics(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Unsubscribe::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messaging.Unsubscribe)
  GOOGLE_DCHECK_NE(&from, this);
  const Unsubscribe* source =
      ::google::protobuf::DynamicCastToGenerated<Unsubscribe>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messaging.Unsubscribe)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messaging.Unsubscribe)
    MergeFrom(*source);
  }
}

void Unsubscribe::MergeFrom(const Unsubscribe& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messaging.Unsubscribe)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  topics_.MergeFrom(from.topics_);
}

void Unsubscribe::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messaging.Unsubscribe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Unsubscribe::CopyFrom(const Unsubscribe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messaging.Unsubscribe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Unsubscribe::IsInitialized() const {
  return true;
}

void Unsubscribe::Swap(Unsubscribe* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Unsubscribe::InternalSwap(Unsubscribe* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  topics_.InternalSwap(CastToBase(&other->topics_));
}

::google::protobuf::Metadata Unsubscribe::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messaging_2eproto);
  return ::file_level_metadata_messaging_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MessagePublish::InitAsDefaultInstance() {
}
class MessagePublish::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessagePublish::kTopicsFieldNumber;
const int MessagePublish::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessagePublish::MessagePublish()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:messaging.MessagePublish)
}
MessagePublish::MessagePublish(const MessagePublish& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      topics_(from.topics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  // @@protoc_insertion_point(copy_constructor:messaging.MessagePublish)
}

void MessagePublish::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MessagePublish_messaging_2eproto.base);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MessagePublish::~MessagePublish() {
  // @@protoc_insertion_point(destructor:messaging.MessagePublish)
  SharedDtor();
}

void MessagePublish::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessagePublish::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessagePublish& MessagePublish::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MessagePublish_messaging_2eproto.base);
  return *internal_default_instance();
}


void MessagePublish::Clear() {
// @@protoc_insertion_point(message_clear_start:messaging.MessagePublish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topics_.Clear();
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MessagePublish::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MessagePublish*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string topics = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("messaging.MessagePublish.topics");
          object = msg->add_topics();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // bytes payload = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_payload();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MessagePublish::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:messaging.MessagePublish)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string topics = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_topics()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topics(this->topics_size() - 1).data(),
            static_cast<int>(this->topics(this->topics_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "messaging.MessagePublish.topics"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes payload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:messaging.MessagePublish)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:messaging.MessagePublish)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MessagePublish::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:messaging.MessagePublish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string topics = 1;
  for (int i = 0, n = this->topics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topics(i).data(), static_cast<int>(this->topics(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "messaging.MessagePublish.topics");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->topics(i), output);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->payload(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:messaging.MessagePublish)
}

::google::protobuf::uint8* MessagePublish::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:messaging.MessagePublish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string topics = 1;
  for (int i = 0, n = this->topics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topics(i).data(), static_cast<int>(this->topics(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "messaging.MessagePublish.topics");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->topics(i), target);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->payload(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messaging.MessagePublish)
  return target;
}

size_t MessagePublish::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messaging.MessagePublish)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string topics = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->topics_size());
  for (int i = 0, n = this->topics_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->topics(i));
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessagePublish::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messaging.MessagePublish)
  GOOGLE_DCHECK_NE(&from, this);
  const MessagePublish* source =
      ::google::protobuf::DynamicCastToGenerated<MessagePublish>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messaging.MessagePublish)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messaging.MessagePublish)
    MergeFrom(*source);
  }
}

void MessagePublish::MergeFrom(const MessagePublish& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messaging.MessagePublish)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  topics_.MergeFrom(from.topics_);
  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
}

void MessagePublish::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messaging.MessagePublish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessagePublish::CopyFrom(const MessagePublish& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messaging.MessagePublish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessagePublish::IsInitialized() const {
  return true;
}

void MessagePublish::Swap(MessagePublish* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessagePublish::InternalSwap(MessagePublish* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  topics_.InternalSwap(CastToBase(&other->topics_));
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MessagePublish::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messaging_2eproto);
  return ::file_level_metadata_messaging_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MessagingRequest::InitAsDefaultInstance() {
  ::messaging::_MessagingRequest_default_instance_.subscribe_ = const_cast< ::messaging::Subscribe*>(
      ::messaging::Subscribe::internal_default_instance());
  ::messaging::_MessagingRequest_default_instance_.unsubscribe_ = const_cast< ::messaging::Unsubscribe*>(
      ::messaging::Unsubscribe::internal_default_instance());
  ::messaging::_MessagingRequest_default_instance_.message_publish_ = const_cast< ::messaging::MessagePublish*>(
      ::messaging::MessagePublish::internal_default_instance());
}
class MessagingRequest::HasBitSetters {
 public:
  static const ::messaging::Subscribe& subscribe(const MessagingRequest* msg);
  static const ::messaging::Unsubscribe& unsubscribe(const MessagingRequest* msg);
  static const ::messaging::MessagePublish& message_publish(const MessagingRequest* msg);
};

const ::messaging::Subscribe&
MessagingRequest::HasBitSetters::subscribe(const MessagingRequest* msg) {
  return *msg->messaging_oneof_.subscribe_;
}
const ::messaging::Unsubscribe&
MessagingRequest::HasBitSetters::unsubscribe(const MessagingRequest* msg) {
  return *msg->messaging_oneof_.unsubscribe_;
}
const ::messaging::MessagePublish&
MessagingRequest::HasBitSetters::message_publish(const MessagingRequest* msg) {
  return *msg->messaging_oneof_.message_publish_;
}
void MessagingRequest::set_allocated_subscribe(::messaging::Subscribe* subscribe) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_messaging_oneof();
  if (subscribe) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      subscribe = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subscribe, submessage_arena);
    }
    set_has_subscribe();
    messaging_oneof_.subscribe_ = subscribe;
  }
  // @@protoc_insertion_point(field_set_allocated:messaging.MessagingRequest.subscribe)
}
void MessagingRequest::set_allocated_unsubscribe(::messaging::Unsubscribe* unsubscribe) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_messaging_oneof();
  if (unsubscribe) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      unsubscribe = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unsubscribe, submessage_arena);
    }
    set_has_unsubscribe();
    messaging_oneof_.unsubscribe_ = unsubscribe;
  }
  // @@protoc_insertion_point(field_set_allocated:messaging.MessagingRequest.unsubscribe)
}
void MessagingRequest::set_allocated_message_publish(::messaging::MessagePublish* message_publish) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_messaging_oneof();
  if (message_publish) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      message_publish = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message_publish, submessage_arena);
    }
    set_has_message_publish();
    messaging_oneof_.message_publish_ = message_publish;
  }
  // @@protoc_insertion_point(field_set_allocated:messaging.MessagingRequest.message_publish)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessagingRequest::kSubscribeFieldNumber;
const int MessagingRequest::kUnsubscribeFieldNumber;
const int MessagingRequest::kMessagePublishFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessagingRequest::MessagingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:messaging.MessagingRequest)
}
MessagingRequest::MessagingRequest(const MessagingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_messaging_oneof();
  switch (from.messaging_oneof_case()) {
    case kSubscribe: {
      mutable_subscribe()->::messaging::Subscribe::MergeFrom(from.subscribe());
      break;
    }
    case kUnsubscribe: {
      mutable_unsubscribe()->::messaging::Unsubscribe::MergeFrom(from.unsubscribe());
      break;
    }
    case kMessagePublish: {
      mutable_message_publish()->::messaging::MessagePublish::MergeFrom(from.message_publish());
      break;
    }
    case MESSAGING_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:messaging.MessagingRequest)
}

void MessagingRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MessagingRequest_messaging_2eproto.base);
  clear_has_messaging_oneof();
}

MessagingRequest::~MessagingRequest() {
  // @@protoc_insertion_point(destructor:messaging.MessagingRequest)
  SharedDtor();
}

void MessagingRequest::SharedDtor() {
  if (has_messaging_oneof()) {
    clear_messaging_oneof();
  }
}

void MessagingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessagingRequest& MessagingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MessagingRequest_messaging_2eproto.base);
  return *internal_default_instance();
}


void MessagingRequest::clear_messaging_oneof() {
// @@protoc_insertion_point(one_of_clear_start:messaging.MessagingRequest)
  switch (messaging_oneof_case()) {
    case kSubscribe: {
      delete messaging_oneof_.subscribe_;
      break;
    }
    case kUnsubscribe: {
      delete messaging_oneof_.unsubscribe_;
      break;
    }
    case kMessagePublish: {
      delete messaging_oneof_.message_publish_;
      break;
    }
    case MESSAGING_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGING_ONEOF_NOT_SET;
}


void MessagingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:messaging.MessagingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_messaging_oneof();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MessagingRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MessagingRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .messaging.Subscribe subscribe = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::messaging::Subscribe::_InternalParse;
        object = msg->mutable_subscribe();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .messaging.Unsubscribe unsubscribe = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::messaging::Unsubscribe::_InternalParse;
        object = msg->mutable_unsubscribe();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .messaging.MessagePublish message_publish = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::messaging::MessagePublish::_InternalParse;
        object = msg->mutable_message_publish();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MessagingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:messaging.MessagingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .messaging.Subscribe subscribe = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subscribe()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .messaging.Unsubscribe unsubscribe = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unsubscribe()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .messaging.MessagePublish message_publish = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message_publish()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:messaging.MessagingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:messaging.MessagingRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MessagingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:messaging.MessagingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .messaging.Subscribe subscribe = 1;
  if (has_subscribe()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::subscribe(this), output);
  }

  // .messaging.Unsubscribe unsubscribe = 2;
  if (has_unsubscribe()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::unsubscribe(this), output);
  }

  // .messaging.MessagePublish message_publish = 3;
  if (has_message_publish()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::message_publish(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:messaging.MessagingRequest)
}

::google::protobuf::uint8* MessagingRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:messaging.MessagingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .messaging.Subscribe subscribe = 1;
  if (has_subscribe()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::subscribe(this), target);
  }

  // .messaging.Unsubscribe unsubscribe = 2;
  if (has_unsubscribe()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::unsubscribe(this), target);
  }

  // .messaging.MessagePublish message_publish = 3;
  if (has_message_publish()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::message_publish(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messaging.MessagingRequest)
  return target;
}

size_t MessagingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messaging.MessagingRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (messaging_oneof_case()) {
    // .messaging.Subscribe subscribe = 1;
    case kSubscribe: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *messaging_oneof_.subscribe_);
      break;
    }
    // .messaging.Unsubscribe unsubscribe = 2;
    case kUnsubscribe: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *messaging_oneof_.unsubscribe_);
      break;
    }
    // .messaging.MessagePublish message_publish = 3;
    case kMessagePublish: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *messaging_oneof_.message_publish_);
      break;
    }
    case MESSAGING_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessagingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messaging.MessagingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MessagingRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MessagingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messaging.MessagingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messaging.MessagingRequest)
    MergeFrom(*source);
  }
}

void MessagingRequest::MergeFrom(const MessagingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messaging.MessagingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.messaging_oneof_case()) {
    case kSubscribe: {
      mutable_subscribe()->::messaging::Subscribe::MergeFrom(from.subscribe());
      break;
    }
    case kUnsubscribe: {
      mutable_unsubscribe()->::messaging::Unsubscribe::MergeFrom(from.unsubscribe());
      break;
    }
    case kMessagePublish: {
      mutable_message_publish()->::messaging::MessagePublish::MergeFrom(from.message_publish());
      break;
    }
    case MESSAGING_ONEOF_NOT_SET: {
      break;
    }
  }
}

void MessagingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messaging.MessagingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessagingRequest::CopyFrom(const MessagingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messaging.MessagingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessagingRequest::IsInitialized() const {
  return true;
}

void MessagingRequest::Swap(MessagingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessagingRequest::InternalSwap(MessagingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(messaging_oneof_, other->messaging_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata MessagingRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messaging_2eproto);
  return ::file_level_metadata_messaging_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MessagingResponse::InitAsDefaultInstance() {
}
class MessagingResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessagingResponse::kTopicFieldNumber;
const int MessagingResponse::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessagingResponse::MessagingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:messaging.MessagingResponse)
}
MessagingResponse::MessagingResponse(const MessagingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  // @@protoc_insertion_point(copy_constructor:messaging.MessagingResponse)
}

void MessagingResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MessagingResponse_messaging_2eproto.base);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MessagingResponse::~MessagingResponse() {
  // @@protoc_insertion_point(destructor:messaging.MessagingResponse)
  SharedDtor();
}

void MessagingResponse::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessagingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessagingResponse& MessagingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MessagingResponse_messaging_2eproto.base);
  return *internal_default_instance();
}


void MessagingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:messaging.MessagingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MessagingResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MessagingResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string topic = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("messaging.MessagingResponse.topic");
        object = msg->mutable_topic();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes payload = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_payload();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MessagingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:messaging.MessagingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "messaging.MessagingResponse.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes payload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:messaging.MessagingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:messaging.MessagingResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MessagingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:messaging.MessagingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "messaging.MessagingResponse.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->payload(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:messaging.MessagingResponse)
}

::google::protobuf::uint8* MessagingResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:messaging.MessagingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "messaging.MessagingResponse.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->payload(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messaging.MessagingResponse)
  return target;
}

size_t MessagingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messaging.MessagingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessagingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messaging.MessagingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MessagingResponse* source =
      ::google::protobuf::DynamicCastToGenerated<MessagingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messaging.MessagingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messaging.MessagingResponse)
    MergeFrom(*source);
  }
}

void MessagingResponse::MergeFrom(const MessagingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messaging.MessagingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
}

void MessagingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messaging.MessagingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessagingResponse::CopyFrom(const MessagingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messaging.MessagingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessagingResponse::IsInitialized() const {
  return true;
}

void MessagingResponse::Swap(MessagingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessagingResponse::InternalSwap(MessagingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MessagingResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messaging_2eproto);
  return ::file_level_metadata_messaging_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace messaging
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::messaging::Subscribe* Arena::CreateMaybeMessage< ::messaging::Subscribe >(Arena* arena) {
  return Arena::CreateInternal< ::messaging::Subscribe >(arena);
}
template<> PROTOBUF_NOINLINE ::messaging::Unsubscribe* Arena::CreateMaybeMessage< ::messaging::Unsubscribe >(Arena* arena) {
  return Arena::CreateInternal< ::messaging::Unsubscribe >(arena);
}
template<> PROTOBUF_NOINLINE ::messaging::MessagePublish* Arena::CreateMaybeMessage< ::messaging::MessagePublish >(Arena* arena) {
  return Arena::CreateInternal< ::messaging::MessagePublish >(arena);
}
template<> PROTOBUF_NOINLINE ::messaging::MessagingRequest* Arena::CreateMaybeMessage< ::messaging::MessagingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::messaging::MessagingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::messaging::MessagingResponse* Arena::CreateMaybeMessage< ::messaging::MessagingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::messaging::MessagingResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
