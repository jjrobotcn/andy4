// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messaging.proto

package messagingService

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 订阅消息类型
type Subscribe struct {
	// 订阅的主题列表
	Topics               []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subscribe) Reset()         { *m = Subscribe{} }
func (m *Subscribe) String() string { return proto.CompactTextString(m) }
func (*Subscribe) ProtoMessage()    {}
func (*Subscribe) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{0}
}

func (m *Subscribe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscribe.Unmarshal(m, b)
}
func (m *Subscribe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscribe.Marshal(b, m, deterministic)
}
func (m *Subscribe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscribe.Merge(m, src)
}
func (m *Subscribe) XXX_Size() int {
	return xxx_messageInfo_Subscribe.Size(m)
}
func (m *Subscribe) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscribe.DiscardUnknown(m)
}

var xxx_messageInfo_Subscribe proto.InternalMessageInfo

func (m *Subscribe) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

// 取消订阅消息类型
type Unsubscribe struct {
	// 取消订阅的主题列表
	Topics               []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Unsubscribe) Reset()         { *m = Unsubscribe{} }
func (m *Unsubscribe) String() string { return proto.CompactTextString(m) }
func (*Unsubscribe) ProtoMessage()    {}
func (*Unsubscribe) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{1}
}

func (m *Unsubscribe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Unsubscribe.Unmarshal(m, b)
}
func (m *Unsubscribe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Unsubscribe.Marshal(b, m, deterministic)
}
func (m *Unsubscribe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Unsubscribe.Merge(m, src)
}
func (m *Unsubscribe) XXX_Size() int {
	return xxx_messageInfo_Unsubscribe.Size(m)
}
func (m *Unsubscribe) XXX_DiscardUnknown() {
	xxx_messageInfo_Unsubscribe.DiscardUnknown(m)
}

var xxx_messageInfo_Unsubscribe proto.InternalMessageInfo

func (m *Unsubscribe) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

// 消息类型
type MessagePublish struct {
	// 数据发布的主题列表
	Topics []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	// 消息内容
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessagePublish) Reset()         { *m = MessagePublish{} }
func (m *MessagePublish) String() string { return proto.CompactTextString(m) }
func (*MessagePublish) ProtoMessage()    {}
func (*MessagePublish) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{2}
}

func (m *MessagePublish) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessagePublish.Unmarshal(m, b)
}
func (m *MessagePublish) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessagePublish.Marshal(b, m, deterministic)
}
func (m *MessagePublish) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagePublish.Merge(m, src)
}
func (m *MessagePublish) XXX_Size() int {
	return xxx_messageInfo_MessagePublish.Size(m)
}
func (m *MessagePublish) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagePublish.DiscardUnknown(m)
}

var xxx_messageInfo_MessagePublish proto.InternalMessageInfo

func (m *MessagePublish) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *MessagePublish) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type MessagingRequest struct {
	// 消息类型oneof
	//
	// Types that are valid to be assigned to MessagingOneof:
	//	*MessagingRequest_Subscribe
	//	*MessagingRequest_Unsubscribe
	//	*MessagingRequest_MessagePublish
	MessagingOneof       isMessagingRequest_MessagingOneof `protobuf_oneof:"messaging_oneof"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *MessagingRequest) Reset()         { *m = MessagingRequest{} }
func (m *MessagingRequest) String() string { return proto.CompactTextString(m) }
func (*MessagingRequest) ProtoMessage()    {}
func (*MessagingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{3}
}

func (m *MessagingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessagingRequest.Unmarshal(m, b)
}
func (m *MessagingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessagingRequest.Marshal(b, m, deterministic)
}
func (m *MessagingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagingRequest.Merge(m, src)
}
func (m *MessagingRequest) XXX_Size() int {
	return xxx_messageInfo_MessagingRequest.Size(m)
}
func (m *MessagingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MessagingRequest proto.InternalMessageInfo

type isMessagingRequest_MessagingOneof interface {
	isMessagingRequest_MessagingOneof()
}

type MessagingRequest_Subscribe struct {
	Subscribe *Subscribe `protobuf:"bytes,1,opt,name=subscribe,proto3,oneof"`
}

type MessagingRequest_Unsubscribe struct {
	Unsubscribe *Unsubscribe `protobuf:"bytes,2,opt,name=unsubscribe,proto3,oneof"`
}

type MessagingRequest_MessagePublish struct {
	MessagePublish *MessagePublish `protobuf:"bytes,3,opt,name=message_publish,json=messagePublish,proto3,oneof"`
}

func (*MessagingRequest_Subscribe) isMessagingRequest_MessagingOneof() {}

func (*MessagingRequest_Unsubscribe) isMessagingRequest_MessagingOneof() {}

func (*MessagingRequest_MessagePublish) isMessagingRequest_MessagingOneof() {}

func (m *MessagingRequest) GetMessagingOneof() isMessagingRequest_MessagingOneof {
	if m != nil {
		return m.MessagingOneof
	}
	return nil
}

func (m *MessagingRequest) GetSubscribe() *Subscribe {
	if x, ok := m.GetMessagingOneof().(*MessagingRequest_Subscribe); ok {
		return x.Subscribe
	}
	return nil
}

func (m *MessagingRequest) GetUnsubscribe() *Unsubscribe {
	if x, ok := m.GetMessagingOneof().(*MessagingRequest_Unsubscribe); ok {
		return x.Unsubscribe
	}
	return nil
}

func (m *MessagingRequest) GetMessagePublish() *MessagePublish {
	if x, ok := m.GetMessagingOneof().(*MessagingRequest_MessagePublish); ok {
		return x.MessagePublish
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MessagingRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MessagingRequest_Subscribe)(nil),
		(*MessagingRequest_Unsubscribe)(nil),
		(*MessagingRequest_MessagePublish)(nil),
	}
}

type MessagingResponse struct {
	// 消息主题
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// 消息内容
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessagingResponse) Reset()         { *m = MessagingResponse{} }
func (m *MessagingResponse) String() string { return proto.CompactTextString(m) }
func (*MessagingResponse) ProtoMessage()    {}
func (*MessagingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{4}
}

func (m *MessagingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessagingResponse.Unmarshal(m, b)
}
func (m *MessagingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessagingResponse.Marshal(b, m, deterministic)
}
func (m *MessagingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagingResponse.Merge(m, src)
}
func (m *MessagingResponse) XXX_Size() int {
	return xxx_messageInfo_MessagingResponse.Size(m)
}
func (m *MessagingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MessagingResponse proto.InternalMessageInfo

func (m *MessagingResponse) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *MessagingResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*Subscribe)(nil), "messagingService.Subscribe")
	proto.RegisterType((*Unsubscribe)(nil), "messagingService.Unsubscribe")
	proto.RegisterType((*MessagePublish)(nil), "messagingService.MessagePublish")
	proto.RegisterType((*MessagingRequest)(nil), "messagingService.MessagingRequest")
	proto.RegisterType((*MessagingResponse)(nil), "messagingService.MessagingResponse")
}

func init() { proto.RegisterFile("messaging.proto", fileDescriptor_42a1718997f046ec) }

var fileDescriptor_42a1718997f046ec = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x4d, 0x4b, 0xc3, 0x40,
	0x14, 0xcc, 0x5a, 0xac, 0xe4, 0x45, 0x6a, 0xbb, 0x88, 0x04, 0x45, 0x8c, 0x5b, 0x84, 0x5c, 0x0c,
	0x12, 0xbd, 0x79, 0x32, 0x5e, 0x02, 0x52, 0x90, 0x2d, 0x5e, 0xbc, 0x94, 0x24, 0x5d, 0x6b, 0x4a,
	0xb3, 0x1b, 0xb3, 0x49, 0xa1, 0x7f, 0xdb, 0x5f, 0x20, 0x6c, 0x9a, 0x8f, 0x5a, 0xa2, 0xc7, 0x37,
	0xcc, 0x9b, 0x37, 0x33, 0xbb, 0x70, 0x92, 0x30, 0x29, 0x83, 0x45, 0xcc, 0x17, 0x4e, 0x9a, 0x89,
	0x5c, 0xe0, 0x61, 0x0d, 0x4c, 0x59, 0xb6, 0x8e, 0x23, 0x46, 0xc6, 0xa0, 0x4f, 0x8b, 0x50, 0x46,
	0x59, 0x1c, 0x32, 0x7c, 0x06, 0xfd, 0x5c, 0xa4, 0x71, 0x24, 0x4d, 0x64, 0xf5, 0x6c, 0x9d, 0x6e,
	0x27, 0x72, 0x03, 0xc6, 0x1b, 0x97, 0xff, 0xd2, 0x3c, 0x18, 0x4c, 0x94, 0x3e, 0x7b, 0x2d, 0xc2,
	0x55, 0x2c, 0x3f, 0xbb, 0x98, 0xd8, 0x84, 0xa3, 0x34, 0xd8, 0xac, 0x44, 0x30, 0x37, 0x0f, 0x2c,
	0x64, 0x1f, 0xd3, 0x6a, 0x24, 0xdf, 0x08, 0x86, 0x93, 0xca, 0x24, 0x65, 0x5f, 0x05, 0x93, 0x39,
	0x7e, 0x04, 0xbd, 0xbe, 0x6e, 0x22, 0x0b, 0xd9, 0x86, 0x7b, 0xe1, 0xfc, 0x8e, 0xe2, 0xd4, 0x39,
	0x7c, 0x8d, 0x36, 0x7c, 0xfc, 0x04, 0x46, 0xd1, 0x98, 0x57, 0xf7, 0x0c, 0xf7, 0x72, 0x7f, 0xbd,
	0x95, 0xd0, 0xd7, 0x68, 0x7b, 0x07, 0xbf, 0x54, 0x4d, 0xb2, 0x59, 0x5a, 0x26, 0x33, 0x7b, 0x4a,
	0xc6, 0xda, 0x97, 0xd9, 0x6d, 0xc0, 0xd7, 0xe8, 0x20, 0xd9, 0x41, 0xbc, 0x51, 0xeb, 0x59, 0x66,
	0x82, 0x33, 0xf1, 0x41, 0x9e, 0x61, 0xd4, 0xca, 0x2c, 0x53, 0xc1, 0x25, 0xc3, 0xa7, 0x70, 0xa8,
	0xda, 0x52, 0x81, 0x75, 0x5a, 0x0e, 0xdd, 0xcd, 0xb9, 0xbc, 0x55, 0xdc, 0xd6, 0x0c, 0x7e, 0x07,
	0xbd, 0xc6, 0x30, 0xe9, 0x32, 0xdb, 0x34, 0x7d, 0x3e, 0xfe, 0x93, 0x53, 0x3a, 0x23, 0x9a, 0x8d,
	0xee, 0x90, 0x77, 0x0d, 0x57, 0x91, 0x48, 0x9c, 0xe5, 0xf2, 0x36, 0x13, 0xa1, 0xc8, 0x9d, 0x80,
	0xcf, 0x37, 0x0f, 0x32, 0x5b, 0x37, 0x0a, 0x61, 0x5f, 0xfd, 0xba, 0xfb, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x49, 0xec, 0xd9, 0x17, 0x88, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessagingServiceClient is the client API for MessagingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessagingServiceClient interface {
	// Messaging为消息发布订阅方法
	Messaging(ctx context.Context, opts ...grpc.CallOption) (MessagingService_MessagingClient, error)
}

type messagingServiceClient struct {
	cc *grpc.ClientConn
}

func NewMessagingServiceClient(cc *grpc.ClientConn) MessagingServiceClient {
	return &messagingServiceClient{cc}
}

func (c *messagingServiceClient) Messaging(ctx context.Context, opts ...grpc.CallOption) (MessagingService_MessagingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessagingService_serviceDesc.Streams[0], "/messagingService.MessagingService/Messaging", opts...)
	if err != nil {
		return nil, err
	}
	x := &messagingServiceMessagingClient{stream}
	return x, nil
}

type MessagingService_MessagingClient interface {
	Send(*MessagingRequest) error
	Recv() (*MessagingResponse, error)
	grpc.ClientStream
}

type messagingServiceMessagingClient struct {
	grpc.ClientStream
}

func (x *messagingServiceMessagingClient) Send(m *MessagingRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *messagingServiceMessagingClient) Recv() (*MessagingResponse, error) {
	m := new(MessagingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MessagingServiceServer is the server API for MessagingService service.
type MessagingServiceServer interface {
	// Messaging为消息发布订阅方法
	Messaging(MessagingService_MessagingServer) error
}

// UnimplementedMessagingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMessagingServiceServer struct {
}

func (*UnimplementedMessagingServiceServer) Messaging(srv MessagingService_MessagingServer) error {
	return status.Errorf(codes.Unimplemented, "method Messaging not implemented")
}

func RegisterMessagingServiceServer(s *grpc.Server, srv MessagingServiceServer) {
	s.RegisterService(&_MessagingService_serviceDesc, srv)
}

func _MessagingService_Messaging_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MessagingServiceServer).Messaging(&messagingServiceMessagingServer{stream})
}

type MessagingService_MessagingServer interface {
	Send(*MessagingResponse) error
	Recv() (*MessagingRequest, error)
	grpc.ServerStream
}

type messagingServiceMessagingServer struct {
	grpc.ServerStream
}

func (x *messagingServiceMessagingServer) Send(m *MessagingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *messagingServiceMessagingServer) Recv() (*MessagingRequest, error) {
	m := new(MessagingRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MessagingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "messagingService.MessagingService",
	HandlerType: (*MessagingServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Messaging",
			Handler:       _MessagingService_Messaging_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "messaging.proto",
}
