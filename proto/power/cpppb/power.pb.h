// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: power.proto

#ifndef PROTOBUF_INCLUDED_power_2eproto
#define PROTOBUF_INCLUDED_power_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_power_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_power_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_power_2eproto();
namespace powerService {
class GetPowerStatusRequest;
class GetPowerStatusRequestDefaultTypeInternal;
extern GetPowerStatusRequestDefaultTypeInternal _GetPowerStatusRequest_default_instance_;
class GetPowerStatusResponse;
class GetPowerStatusResponseDefaultTypeInternal;
extern GetPowerStatusResponseDefaultTypeInternal _GetPowerStatusResponse_default_instance_;
class PowerStatus;
class PowerStatusDefaultTypeInternal;
extern PowerStatusDefaultTypeInternal _PowerStatus_default_instance_;
class PowerStatus_DevicesEntry_DoNotUse;
class PowerStatus_DevicesEntry_DoNotUseDefaultTypeInternal;
extern PowerStatus_DevicesEntry_DoNotUseDefaultTypeInternal _PowerStatus_DevicesEntry_DoNotUse_default_instance_;
}  // namespace powerService
namespace google {
namespace protobuf {
template<> ::powerService::GetPowerStatusRequest* Arena::CreateMaybeMessage<::powerService::GetPowerStatusRequest>(Arena*);
template<> ::powerService::GetPowerStatusResponse* Arena::CreateMaybeMessage<::powerService::GetPowerStatusResponse>(Arena*);
template<> ::powerService::PowerStatus* Arena::CreateMaybeMessage<::powerService::PowerStatus>(Arena*);
template<> ::powerService::PowerStatus_DevicesEntry_DoNotUse* Arena::CreateMaybeMessage<::powerService::PowerStatus_DevicesEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace powerService {

// ===================================================================

class PowerStatus_DevicesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PowerStatus_DevicesEntry_DoNotUse, 
    ::std::string, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<PowerStatus_DevicesEntry_DoNotUse, 
    ::std::string, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > SuperType;
  PowerStatus_DevicesEntry_DoNotUse();
  PowerStatus_DevicesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PowerStatus_DevicesEntry_DoNotUse& other);
  static const PowerStatus_DevicesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PowerStatus_DevicesEntry_DoNotUse*>(&_PowerStatus_DevicesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PowerStatus final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:powerService.PowerStatus) */ {
 public:
  PowerStatus();
  virtual ~PowerStatus();

  PowerStatus(const PowerStatus& from);

  inline PowerStatus& operator=(const PowerStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PowerStatus(PowerStatus&& from) noexcept
    : PowerStatus() {
    *this = ::std::move(from);
  }

  inline PowerStatus& operator=(PowerStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PowerStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PowerStatus* internal_default_instance() {
    return reinterpret_cast<const PowerStatus*>(
               &_PowerStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PowerStatus* other);
  friend void swap(PowerStatus& a, PowerStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PowerStatus* New() const final {
    return CreateMaybeMessage<PowerStatus>(nullptr);
  }

  PowerStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PowerStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PowerStatus& from);
  void MergeFrom(const PowerStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PowerStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bool> devices = 3;
  int devices_size() const;
  void clear_devices();
  static const int kDevicesFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, bool >&
      devices() const;
  ::google::protobuf::Map< ::std::string, bool >*
      mutable_devices();

  // uint32 level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // bool is_charging = 2;
  void clear_is_charging();
  static const int kIsChargingFieldNumber = 2;
  bool is_charging() const;
  void set_is_charging(bool value);

  // @@protoc_insertion_point(class_scope:powerService.PowerStatus)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PowerStatus_DevicesEntry_DoNotUse,
      ::std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > devices_;
  ::google::protobuf::uint32 level_;
  bool is_charging_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_power_2eproto;
};
// -------------------------------------------------------------------

class GetPowerStatusRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:powerService.GetPowerStatusRequest) */ {
 public:
  GetPowerStatusRequest();
  virtual ~GetPowerStatusRequest();

  GetPowerStatusRequest(const GetPowerStatusRequest& from);

  inline GetPowerStatusRequest& operator=(const GetPowerStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPowerStatusRequest(GetPowerStatusRequest&& from) noexcept
    : GetPowerStatusRequest() {
    *this = ::std::move(from);
  }

  inline GetPowerStatusRequest& operator=(GetPowerStatusRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetPowerStatusRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetPowerStatusRequest* internal_default_instance() {
    return reinterpret_cast<const GetPowerStatusRequest*>(
               &_GetPowerStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetPowerStatusRequest* other);
  friend void swap(GetPowerStatusRequest& a, GetPowerStatusRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPowerStatusRequest* New() const final {
    return CreateMaybeMessage<GetPowerStatusRequest>(nullptr);
  }

  GetPowerStatusRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetPowerStatusRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetPowerStatusRequest& from);
  void MergeFrom(const GetPowerStatusRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPowerStatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:powerService.GetPowerStatusRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_power_2eproto;
};
// -------------------------------------------------------------------

class GetPowerStatusResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:powerService.GetPowerStatusResponse) */ {
 public:
  GetPowerStatusResponse();
  virtual ~GetPowerStatusResponse();

  GetPowerStatusResponse(const GetPowerStatusResponse& from);

  inline GetPowerStatusResponse& operator=(const GetPowerStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPowerStatusResponse(GetPowerStatusResponse&& from) noexcept
    : GetPowerStatusResponse() {
    *this = ::std::move(from);
  }

  inline GetPowerStatusResponse& operator=(GetPowerStatusResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetPowerStatusResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetPowerStatusResponse* internal_default_instance() {
    return reinterpret_cast<const GetPowerStatusResponse*>(
               &_GetPowerStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GetPowerStatusResponse* other);
  friend void swap(GetPowerStatusResponse& a, GetPowerStatusResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPowerStatusResponse* New() const final {
    return CreateMaybeMessage<GetPowerStatusResponse>(nullptr);
  }

  GetPowerStatusResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetPowerStatusResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetPowerStatusResponse& from);
  void MergeFrom(const GetPowerStatusResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPowerStatusResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .powerService.PowerStatus power_status = 1;
  bool has_power_status() const;
  void clear_power_status();
  static const int kPowerStatusFieldNumber = 1;
  const ::powerService::PowerStatus& power_status() const;
  ::powerService::PowerStatus* release_power_status();
  ::powerService::PowerStatus* mutable_power_status();
  void set_allocated_power_status(::powerService::PowerStatus* power_status);

  // @@protoc_insertion_point(class_scope:powerService.GetPowerStatusResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::powerService::PowerStatus* power_status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_power_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PowerStatus

// uint32 level = 1;
inline void PowerStatus::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 PowerStatus::level() const {
  // @@protoc_insertion_point(field_get:powerService.PowerStatus.level)
  return level_;
}
inline void PowerStatus::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:powerService.PowerStatus.level)
}

// bool is_charging = 2;
inline void PowerStatus::clear_is_charging() {
  is_charging_ = false;
}
inline bool PowerStatus::is_charging() const {
  // @@protoc_insertion_point(field_get:powerService.PowerStatus.is_charging)
  return is_charging_;
}
inline void PowerStatus::set_is_charging(bool value) {
  
  is_charging_ = value;
  // @@protoc_insertion_point(field_set:powerService.PowerStatus.is_charging)
}

// map<string, bool> devices = 3;
inline int PowerStatus::devices_size() const {
  return devices_.size();
}
inline void PowerStatus::clear_devices() {
  devices_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, bool >&
PowerStatus::devices() const {
  // @@protoc_insertion_point(field_map:powerService.PowerStatus.devices)
  return devices_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, bool >*
PowerStatus::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_map:powerService.PowerStatus.devices)
  return devices_.MutableMap();
}

// -------------------------------------------------------------------

// GetPowerStatusRequest

// -------------------------------------------------------------------

// GetPowerStatusResponse

// .powerService.PowerStatus power_status = 1;
inline bool GetPowerStatusResponse::has_power_status() const {
  return this != internal_default_instance() && power_status_ != nullptr;
}
inline void GetPowerStatusResponse::clear_power_status() {
  if (GetArenaNoVirtual() == nullptr && power_status_ != nullptr) {
    delete power_status_;
  }
  power_status_ = nullptr;
}
inline const ::powerService::PowerStatus& GetPowerStatusResponse::power_status() const {
  const ::powerService::PowerStatus* p = power_status_;
  // @@protoc_insertion_point(field_get:powerService.GetPowerStatusResponse.power_status)
  return p != nullptr ? *p : *reinterpret_cast<const ::powerService::PowerStatus*>(
      &::powerService::_PowerStatus_default_instance_);
}
inline ::powerService::PowerStatus* GetPowerStatusResponse::release_power_status() {
  // @@protoc_insertion_point(field_release:powerService.GetPowerStatusResponse.power_status)
  
  ::powerService::PowerStatus* temp = power_status_;
  power_status_ = nullptr;
  return temp;
}
inline ::powerService::PowerStatus* GetPowerStatusResponse::mutable_power_status() {
  
  if (power_status_ == nullptr) {
    auto* p = CreateMaybeMessage<::powerService::PowerStatus>(GetArenaNoVirtual());
    power_status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:powerService.GetPowerStatusResponse.power_status)
  return power_status_;
}
inline void GetPowerStatusResponse::set_allocated_power_status(::powerService::PowerStatus* power_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete power_status_;
  }
  if (power_status) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      power_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, power_status, submessage_arena);
    }
    
  } else {
    
  }
  power_status_ = power_status;
  // @@protoc_insertion_point(field_set_allocated:powerService.GetPowerStatusResponse.power_status)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace powerService

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_power_2eproto
