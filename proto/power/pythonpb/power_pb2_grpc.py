# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import power_pb2 as power__pb2


class PowerServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetPowerStatus = channel.unary_stream(
        '/powerService.PowerService/GetPowerStatus',
        request_serializer=power__pb2.GetPowerStatusRequest.SerializeToString,
        response_deserializer=power__pb2.GetPowerStatusResponse.FromString,
        )
    self.Reboot = channel.unary_unary(
        '/powerService.PowerService/Reboot',
        request_serializer=power__pb2.RebootRequest.SerializeToString,
        response_deserializer=power__pb2.RebootResponse.FromString,
        )
    self.States = channel.unary_unary(
        '/powerService.PowerService/States',
        request_serializer=power__pb2.StatesRequest.SerializeToString,
        response_deserializer=power__pb2.StatesResponse.FromString,
        )
    self.Switch = channel.unary_unary(
        '/powerService.PowerService/Switch',
        request_serializer=power__pb2.SwitchRequest.SerializeToString,
        response_deserializer=power__pb2.SwitchResponse.FromString,
        )


class PowerServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetPowerStatus(self, request, context):
    """获取电源状态数据流
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Reboot(self, request, context):
    """对各模块的电源进行断电方式重启
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def States(self, request, context):
    """获取所有电源模块状态
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Switch(self, request, context):
    """控制模块供电开关
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PowerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetPowerStatus': grpc.unary_stream_rpc_method_handler(
          servicer.GetPowerStatus,
          request_deserializer=power__pb2.GetPowerStatusRequest.FromString,
          response_serializer=power__pb2.GetPowerStatusResponse.SerializeToString,
      ),
      'Reboot': grpc.unary_unary_rpc_method_handler(
          servicer.Reboot,
          request_deserializer=power__pb2.RebootRequest.FromString,
          response_serializer=power__pb2.RebootResponse.SerializeToString,
      ),
      'States': grpc.unary_unary_rpc_method_handler(
          servicer.States,
          request_deserializer=power__pb2.StatesRequest.FromString,
          response_serializer=power__pb2.StatesResponse.SerializeToString,
      ),
      'Switch': grpc.unary_unary_rpc_method_handler(
          servicer.Switch,
          request_deserializer=power__pb2.SwitchRequest.FromString,
          response_serializer=power__pb2.SwitchResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'powerService.PowerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
