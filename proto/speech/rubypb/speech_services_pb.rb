# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: speech.proto for package 'speechService'

require 'grpc'
require 'speech_pb'

module SpeechService
  module SpeechService
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'speechService.SpeechService'

      # ListenSpeechEvent方法为监听语音事件变更状态流, 具体类型参考: SpeechEvent
      # ListenSpeechEventRequest中可配置相关状态消息过滤,
      rpc :ListenSpeechEvent, ListenSpeechEventRequest, stream(ListenSpeechEventResponse)
      # TextToSpeech(TTS)方法实现文本输入语音合成自动音频输出
      rpc :TextToSpeech, TextToSpeechRequest, TextToSpeechResponse
      # SpeechStop方法实现打断语音功能
      rpc :SpeechStop, SpeechStopRequest, SpeechStopResponse
      # 唤醒
      rpc :WakeUp, WakeUpRequest, WakeUpResponse
      # 休眠
      rpc :Hibernate, HibernateRequest, HibernateResponse
      # 设置语音音量
      # v2.1.0
      rpc :SetVoiceVolume, SetVoiceVolumeRequest, SetVoiceVolumeResponse
      # 查询语音音量
      # v2.1.0
      rpc :GetVoiceVolume, GetVoiceVolumeRequest, GetVoiceVolumeResponse
      # 配置参数(当前仅支持AIUI模块)
      # v2.1.0
      # AIUI模块参数配置参考: https://aiui.xfyun.cn/docs/access_docs (开发-评估板/量产板 => AIUI SDK => 参数配置)
      rpc :SetParams, SetParamsRequest, SetParamsResponse
    end

    Stub = Service.rpc_stub_class
  end
end
