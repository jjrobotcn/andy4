<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: speech.proto

namespace SpeechService;

use UnexpectedValueException;

/**
 * 语音检测
 *
 * Protobuf type <code>speechService.VadType</code>
 */
class VadType
{
    /**
     * Generated from protobuf enum <code>UNKNOWM_VAD_TYPE = 0;</code>
     */
    const UNKNOWM_VAD_TYPE = 0;
    /**
     * 开始
     *
     * Generated from protobuf enum <code>START = 1;</code>
     */
    const START = 1;
    /**
     * 结束
     *
     * Generated from protobuf enum <code>END = 2;</code>
     */
    const END = 2;
    /**
     * 检测超时
     *
     * Generated from protobuf enum <code>TIMEOUT = 3;</code>
     */
    const TIMEOUT = 3;
    /**
     * 音量改变
     *
     * Generated from protobuf enum <code>VOLUME_CHANGE = 4;</code>
     */
    const VOLUME_CHANGE = 4;

    private static $valueToName = [
        self::UNKNOWM_VAD_TYPE => 'UNKNOWM_VAD_TYPE',
        self::START => 'START',
        self::END => 'END',
        self::TIMEOUT => 'TIMEOUT',
        self::VOLUME_CHANGE => 'VOLUME_CHANGE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

