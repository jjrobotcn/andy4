// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: headmotion.proto

#ifndef PROTOBUF_INCLUDED_headmotion_2eproto
#define PROTOBUF_INCLUDED_headmotion_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_headmotion_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_headmotion_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[26]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_headmotion_2eproto();
namespace motionService {
class DeleteGroupsRequest;
class DeleteGroupsRequestDefaultTypeInternal;
extern DeleteGroupsRequestDefaultTypeInternal _DeleteGroupsRequest_default_instance_;
class DeleteGroupsResponse;
class DeleteGroupsResponseDefaultTypeInternal;
extern DeleteGroupsResponseDefaultTypeInternal _DeleteGroupsResponse_default_instance_;
class GetPositionRequest;
class GetPositionRequestDefaultTypeInternal;
extern GetPositionRequestDefaultTypeInternal _GetPositionRequest_default_instance_;
class GetPositionResponse;
class GetPositionResponseDefaultTypeInternal;
extern GetPositionResponseDefaultTypeInternal _GetPositionResponse_default_instance_;
class Group;
class GroupDefaultTypeInternal;
extern GroupDefaultTypeInternal _Group_default_instance_;
class GroupInfo;
class GroupInfoDefaultTypeInternal;
extern GroupInfoDefaultTypeInternal _GroupInfo_default_instance_;
class GroupTargetRequest;
class GroupTargetRequestDefaultTypeInternal;
extern GroupTargetRequestDefaultTypeInternal _GroupTargetRequest_default_instance_;
class GroupsTargetRequest;
class GroupsTargetRequestDefaultTypeInternal;
extern GroupsTargetRequestDefaultTypeInternal _GroupsTargetRequest_default_instance_;
class ListGroupTargetsRequest;
class ListGroupTargetsRequestDefaultTypeInternal;
extern ListGroupTargetsRequestDefaultTypeInternal _ListGroupTargetsRequest_default_instance_;
class ListGroupTargetsResponse;
class ListGroupTargetsResponseDefaultTypeInternal;
extern ListGroupTargetsResponseDefaultTypeInternal _ListGroupTargetsResponse_default_instance_;
class ListGroupsRequest;
class ListGroupsRequestDefaultTypeInternal;
extern ListGroupsRequestDefaultTypeInternal _ListGroupsRequest_default_instance_;
class ListGroupsResponse;
class ListGroupsResponseDefaultTypeInternal;
extern ListGroupsResponseDefaultTypeInternal _ListGroupsResponse_default_instance_;
class MotionConfig;
class MotionConfigDefaultTypeInternal;
extern MotionConfigDefaultTypeInternal _MotionConfig_default_instance_;
class MoveToRequest;
class MoveToRequestDefaultTypeInternal;
extern MoveToRequestDefaultTypeInternal _MoveToRequest_default_instance_;
class MoveToResponse;
class MoveToResponseDefaultTypeInternal;
extern MoveToResponseDefaultTypeInternal _MoveToResponse_default_instance_;
class NewGroupRequest;
class NewGroupRequestDefaultTypeInternal;
extern NewGroupRequestDefaultTypeInternal _NewGroupRequest_default_instance_;
class NewGroupResponse;
class NewGroupResponseDefaultTypeInternal;
extern NewGroupResponseDefaultTypeInternal _NewGroupResponse_default_instance_;
class Position;
class PositionDefaultTypeInternal;
extern PositionDefaultTypeInternal _Position_default_instance_;
class PositionTargetRequest;
class PositionTargetRequestDefaultTypeInternal;
extern PositionTargetRequestDefaultTypeInternal _PositionTargetRequest_default_instance_;
class PositioningDataRequest;
class PositioningDataRequestDefaultTypeInternal;
extern PositioningDataRequestDefaultTypeInternal _PositioningDataRequest_default_instance_;
class PositioningDataResponse;
class PositioningDataResponseDefaultTypeInternal;
extern PositioningDataResponseDefaultTypeInternal _PositioningDataResponse_default_instance_;
class Target;
class TargetDefaultTypeInternal;
extern TargetDefaultTypeInternal _Target_default_instance_;
class UpdateGroupRequest;
class UpdateGroupRequestDefaultTypeInternal;
extern UpdateGroupRequestDefaultTypeInternal _UpdateGroupRequest_default_instance_;
class UpdateGroupResponse;
class UpdateGroupResponseDefaultTypeInternal;
extern UpdateGroupResponseDefaultTypeInternal _UpdateGroupResponse_default_instance_;
class UpdateGroupTargetsRequest;
class UpdateGroupTargetsRequestDefaultTypeInternal;
extern UpdateGroupTargetsRequestDefaultTypeInternal _UpdateGroupTargetsRequest_default_instance_;
class UpdateGroupTargetsResponse;
class UpdateGroupTargetsResponseDefaultTypeInternal;
extern UpdateGroupTargetsResponseDefaultTypeInternal _UpdateGroupTargetsResponse_default_instance_;
}  // namespace motionService
namespace google {
namespace protobuf {
template<> ::motionService::DeleteGroupsRequest* Arena::CreateMaybeMessage<::motionService::DeleteGroupsRequest>(Arena*);
template<> ::motionService::DeleteGroupsResponse* Arena::CreateMaybeMessage<::motionService::DeleteGroupsResponse>(Arena*);
template<> ::motionService::GetPositionRequest* Arena::CreateMaybeMessage<::motionService::GetPositionRequest>(Arena*);
template<> ::motionService::GetPositionResponse* Arena::CreateMaybeMessage<::motionService::GetPositionResponse>(Arena*);
template<> ::motionService::Group* Arena::CreateMaybeMessage<::motionService::Group>(Arena*);
template<> ::motionService::GroupInfo* Arena::CreateMaybeMessage<::motionService::GroupInfo>(Arena*);
template<> ::motionService::GroupTargetRequest* Arena::CreateMaybeMessage<::motionService::GroupTargetRequest>(Arena*);
template<> ::motionService::GroupsTargetRequest* Arena::CreateMaybeMessage<::motionService::GroupsTargetRequest>(Arena*);
template<> ::motionService::ListGroupTargetsRequest* Arena::CreateMaybeMessage<::motionService::ListGroupTargetsRequest>(Arena*);
template<> ::motionService::ListGroupTargetsResponse* Arena::CreateMaybeMessage<::motionService::ListGroupTargetsResponse>(Arena*);
template<> ::motionService::ListGroupsRequest* Arena::CreateMaybeMessage<::motionService::ListGroupsRequest>(Arena*);
template<> ::motionService::ListGroupsResponse* Arena::CreateMaybeMessage<::motionService::ListGroupsResponse>(Arena*);
template<> ::motionService::MotionConfig* Arena::CreateMaybeMessage<::motionService::MotionConfig>(Arena*);
template<> ::motionService::MoveToRequest* Arena::CreateMaybeMessage<::motionService::MoveToRequest>(Arena*);
template<> ::motionService::MoveToResponse* Arena::CreateMaybeMessage<::motionService::MoveToResponse>(Arena*);
template<> ::motionService::NewGroupRequest* Arena::CreateMaybeMessage<::motionService::NewGroupRequest>(Arena*);
template<> ::motionService::NewGroupResponse* Arena::CreateMaybeMessage<::motionService::NewGroupResponse>(Arena*);
template<> ::motionService::Position* Arena::CreateMaybeMessage<::motionService::Position>(Arena*);
template<> ::motionService::PositionTargetRequest* Arena::CreateMaybeMessage<::motionService::PositionTargetRequest>(Arena*);
template<> ::motionService::PositioningDataRequest* Arena::CreateMaybeMessage<::motionService::PositioningDataRequest>(Arena*);
template<> ::motionService::PositioningDataResponse* Arena::CreateMaybeMessage<::motionService::PositioningDataResponse>(Arena*);
template<> ::motionService::Target* Arena::CreateMaybeMessage<::motionService::Target>(Arena*);
template<> ::motionService::UpdateGroupRequest* Arena::CreateMaybeMessage<::motionService::UpdateGroupRequest>(Arena*);
template<> ::motionService::UpdateGroupResponse* Arena::CreateMaybeMessage<::motionService::UpdateGroupResponse>(Arena*);
template<> ::motionService::UpdateGroupTargetsRequest* Arena::CreateMaybeMessage<::motionService::UpdateGroupTargetsRequest>(Arena*);
template<> ::motionService::UpdateGroupTargetsResponse* Arena::CreateMaybeMessage<::motionService::UpdateGroupTargetsResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace motionService {

enum MotionType {
  UNKNOWN_MOTION_TYPE = 0,
  HEAD = 1,
  MotionType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  MotionType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool MotionType_IsValid(int value);
const MotionType MotionType_MIN = UNKNOWN_MOTION_TYPE;
const MotionType MotionType_MAX = HEAD;
const int MotionType_ARRAYSIZE = MotionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MotionType_descriptor();
inline const ::std::string& MotionType_Name(MotionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MotionType_descriptor(), value);
}
inline bool MotionType_Parse(
    const ::std::string& name, MotionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MotionType>(
    MotionType_descriptor(), name, value);
}
// ===================================================================

class Position final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.Position) */ {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Position(Position&& from) noexcept
    : Position() {
    *this = ::std::move(from);
  }

  inline Position& operator=(Position&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Position& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Position* internal_default_instance() {
    return reinterpret_cast<const Position*>(
               &_Position_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Position* other);
  friend void swap(Position& a, Position& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Position* New() const final {
    return CreateMaybeMessage<Position>(nullptr);
  }

  Position* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Position>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Position* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x_axis = 1;
  void clear_x_axis();
  static const int kXAxisFieldNumber = 1;
  ::google::protobuf::int32 x_axis() const;
  void set_x_axis(::google::protobuf::int32 value);

  // int32 y_axis = 2;
  void clear_y_axis();
  static const int kYAxisFieldNumber = 2;
  ::google::protobuf::int32 y_axis() const;
  void set_y_axis(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:motionService.Position)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 x_axis_;
  ::google::protobuf::int32 y_axis_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class MotionConfig final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.MotionConfig) */ {
 public:
  MotionConfig();
  virtual ~MotionConfig();

  MotionConfig(const MotionConfig& from);

  inline MotionConfig& operator=(const MotionConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MotionConfig(MotionConfig&& from) noexcept
    : MotionConfig() {
    *this = ::std::move(from);
  }

  inline MotionConfig& operator=(MotionConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MotionConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MotionConfig* internal_default_instance() {
    return reinterpret_cast<const MotionConfig*>(
               &_MotionConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MotionConfig* other);
  friend void swap(MotionConfig& a, MotionConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MotionConfig* New() const final {
    return CreateMaybeMessage<MotionConfig>(nullptr);
  }

  MotionConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MotionConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MotionConfig& from);
  void MergeFrom(const MotionConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MotionConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 speed = 1;
  void clear_speed();
  static const int kSpeedFieldNumber = 1;
  ::google::protobuf::uint32 speed() const;
  void set_speed(::google::protobuf::uint32 value);

  // uint32 wait_millisecond = 2;
  void clear_wait_millisecond();
  static const int kWaitMillisecondFieldNumber = 2;
  ::google::protobuf::uint32 wait_millisecond() const;
  void set_wait_millisecond(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:motionService.MotionConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 wait_millisecond_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class Group final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.Group) */ {
 public:
  Group();
  virtual ~Group();

  Group(const Group& from);

  inline Group& operator=(const Group& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Group(Group&& from) noexcept
    : Group() {
    *this = ::std::move(from);
  }

  inline Group& operator=(Group&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Group& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Group* internal_default_instance() {
    return reinterpret_cast<const Group*>(
               &_Group_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Group* other);
  friend void swap(Group& a, Group& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Group* New() const final {
    return CreateMaybeMessage<Group>(nullptr);
  }

  Group* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Group>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Group& from);
  void MergeFrom(const Group& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Group* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .motionService.Target targets = 2;
  int targets_size() const;
  void clear_targets();
  static const int kTargetsFieldNumber = 2;
  ::motionService::Target* mutable_targets(int index);
  ::google::protobuf::RepeatedPtrField< ::motionService::Target >*
      mutable_targets();
  const ::motionService::Target& targets(int index) const;
  ::motionService::Target* add_targets();
  const ::google::protobuf::RepeatedPtrField< ::motionService::Target >&
      targets() const;

  // .motionService.GroupInfo group_info = 1;
  bool has_group_info() const;
  void clear_group_info();
  static const int kGroupInfoFieldNumber = 1;
  const ::motionService::GroupInfo& group_info() const;
  ::motionService::GroupInfo* release_group_info();
  ::motionService::GroupInfo* mutable_group_info();
  void set_allocated_group_info(::motionService::GroupInfo* group_info);

  // @@protoc_insertion_point(class_scope:motionService.Group)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::motionService::Target > targets_;
  ::motionService::GroupInfo* group_info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class GroupInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.GroupInfo) */ {
 public:
  GroupInfo();
  virtual ~GroupInfo();

  GroupInfo(const GroupInfo& from);

  inline GroupInfo& operator=(const GroupInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupInfo(GroupInfo&& from) noexcept
    : GroupInfo() {
    *this = ::std::move(from);
  }

  inline GroupInfo& operator=(GroupInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GroupInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupInfo* internal_default_instance() {
    return reinterpret_cast<const GroupInfo*>(
               &_GroupInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GroupInfo* other);
  friend void swap(GroupInfo& a, GroupInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupInfo* New() const final {
    return CreateMaybeMessage<GroupInfo>(nullptr);
  }

  GroupInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GroupInfo& from);
  void MergeFrom(const GroupInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GroupInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .motionService.MotionType motion_type = 3;
  void clear_motion_type();
  static const int kMotionTypeFieldNumber = 3;
  ::motionService::MotionType motion_type() const;
  void set_motion_type(::motionService::MotionType value);

  // @@protoc_insertion_point(class_scope:motionService.GroupInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int motion_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class Target final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.Target) */ {
 public:
  Target();
  virtual ~Target();

  Target(const Target& from);

  inline Target& operator=(const Target& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Target(Target&& from) noexcept
    : Target() {
    *this = ::std::move(from);
  }

  inline Target& operator=(Target&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Target& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Target* internal_default_instance() {
    return reinterpret_cast<const Target*>(
               &_Target_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Target* other);
  friend void swap(Target& a, Target& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Target* New() const final {
    return CreateMaybeMessage<Target>(nullptr);
  }

  Target* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Target>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Target& from);
  void MergeFrom(const Target& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Target* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .motionService.Position position = 1;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  const ::motionService::Position& position() const;
  ::motionService::Position* release_position();
  ::motionService::Position* mutable_position();
  void set_allocated_position(::motionService::Position* position);

  // .motionService.MotionConfig motion_config = 2;
  bool has_motion_config() const;
  void clear_motion_config();
  static const int kMotionConfigFieldNumber = 2;
  const ::motionService::MotionConfig& motion_config() const;
  ::motionService::MotionConfig* release_motion_config();
  ::motionService::MotionConfig* mutable_motion_config();
  void set_allocated_motion_config(::motionService::MotionConfig* motion_config);

  // @@protoc_insertion_point(class_scope:motionService.Target)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::motionService::Position* position_;
  ::motionService::MotionConfig* motion_config_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class GroupTargetRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.GroupTargetRequest) */ {
 public:
  GroupTargetRequest();
  virtual ~GroupTargetRequest();

  GroupTargetRequest(const GroupTargetRequest& from);

  inline GroupTargetRequest& operator=(const GroupTargetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupTargetRequest(GroupTargetRequest&& from) noexcept
    : GroupTargetRequest() {
    *this = ::std::move(from);
  }

  inline GroupTargetRequest& operator=(GroupTargetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GroupTargetRequest& default_instance();

  enum GroupIdNameOneofCase {
    kId = 1,
    kName = 2,
    GROUP_ID_NAME_ONEOF_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupTargetRequest* internal_default_instance() {
    return reinterpret_cast<const GroupTargetRequest*>(
               &_GroupTargetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(GroupTargetRequest* other);
  friend void swap(GroupTargetRequest& a, GroupTargetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupTargetRequest* New() const final {
    return CreateMaybeMessage<GroupTargetRequest>(nullptr);
  }

  GroupTargetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupTargetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GroupTargetRequest& from);
  void MergeFrom(const GroupTargetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GroupTargetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  private:
  bool has_id() const;
  public:
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string name = 2;
  private:
  bool has_name() const;
  public:
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  void clear_group_id_name_oneof();
  GroupIdNameOneofCase group_id_name_oneof_case() const;
  // @@protoc_insertion_point(class_scope:motionService.GroupTargetRequest)
 private:
  class HasBitSetters;
  void set_has_id();
  void set_has_name();

  inline bool has_group_id_name_oneof() const;
  inline void clear_has_group_id_name_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union GroupIdNameOneofUnion {
    GroupIdNameOneofUnion() {}
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
  } group_id_name_oneof_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class GroupsTargetRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.GroupsTargetRequest) */ {
 public:
  GroupsTargetRequest();
  virtual ~GroupsTargetRequest();

  GroupsTargetRequest(const GroupsTargetRequest& from);

  inline GroupsTargetRequest& operator=(const GroupsTargetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupsTargetRequest(GroupsTargetRequest&& from) noexcept
    : GroupsTargetRequest() {
    *this = ::std::move(from);
  }

  inline GroupsTargetRequest& operator=(GroupsTargetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GroupsTargetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupsTargetRequest* internal_default_instance() {
    return reinterpret_cast<const GroupsTargetRequest*>(
               &_GroupsTargetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(GroupsTargetRequest* other);
  friend void swap(GroupsTargetRequest& a, GroupsTargetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupsTargetRequest* New() const final {
    return CreateMaybeMessage<GroupsTargetRequest>(nullptr);
  }

  GroupsTargetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupsTargetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GroupsTargetRequest& from);
  void MergeFrom(const GroupsTargetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GroupsTargetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .motionService.GroupTargetRequest groups = 1;
  int groups_size() const;
  void clear_groups();
  static const int kGroupsFieldNumber = 1;
  ::motionService::GroupTargetRequest* mutable_groups(int index);
  ::google::protobuf::RepeatedPtrField< ::motionService::GroupTargetRequest >*
      mutable_groups();
  const ::motionService::GroupTargetRequest& groups(int index) const;
  ::motionService::GroupTargetRequest* add_groups();
  const ::google::protobuf::RepeatedPtrField< ::motionService::GroupTargetRequest >&
      groups() const;

  // @@protoc_insertion_point(class_scope:motionService.GroupsTargetRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::motionService::GroupTargetRequest > groups_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class PositionTargetRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.PositionTargetRequest) */ {
 public:
  PositionTargetRequest();
  virtual ~PositionTargetRequest();

  PositionTargetRequest(const PositionTargetRequest& from);

  inline PositionTargetRequest& operator=(const PositionTargetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PositionTargetRequest(PositionTargetRequest&& from) noexcept
    : PositionTargetRequest() {
    *this = ::std::move(from);
  }

  inline PositionTargetRequest& operator=(PositionTargetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PositionTargetRequest& default_instance();

  enum PositionTargetOneofCase {
    kAbsoluteTarget = 1,
    kRelativeTarget = 2,
    POSITION_TARGET_ONEOF_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PositionTargetRequest* internal_default_instance() {
    return reinterpret_cast<const PositionTargetRequest*>(
               &_PositionTargetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(PositionTargetRequest* other);
  friend void swap(PositionTargetRequest& a, PositionTargetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PositionTargetRequest* New() const final {
    return CreateMaybeMessage<PositionTargetRequest>(nullptr);
  }

  PositionTargetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PositionTargetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PositionTargetRequest& from);
  void MergeFrom(const PositionTargetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PositionTargetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .motionService.Target absolute_target = 1;
  bool has_absolute_target() const;
  void clear_absolute_target();
  static const int kAbsoluteTargetFieldNumber = 1;
  const ::motionService::Target& absolute_target() const;
  ::motionService::Target* release_absolute_target();
  ::motionService::Target* mutable_absolute_target();
  void set_allocated_absolute_target(::motionService::Target* absolute_target);

  // .motionService.Target relative_target = 2;
  bool has_relative_target() const;
  void clear_relative_target();
  static const int kRelativeTargetFieldNumber = 2;
  const ::motionService::Target& relative_target() const;
  ::motionService::Target* release_relative_target();
  ::motionService::Target* mutable_relative_target();
  void set_allocated_relative_target(::motionService::Target* relative_target);

  void clear_position_target_oneof();
  PositionTargetOneofCase position_target_oneof_case() const;
  // @@protoc_insertion_point(class_scope:motionService.PositionTargetRequest)
 private:
  class HasBitSetters;
  void set_has_absolute_target();
  void set_has_relative_target();

  inline bool has_position_target_oneof() const;
  inline void clear_has_position_target_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union PositionTargetOneofUnion {
    PositionTargetOneofUnion() {}
    ::motionService::Target* absolute_target_;
    ::motionService::Target* relative_target_;
  } position_target_oneof_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class MoveToRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.MoveToRequest) */ {
 public:
  MoveToRequest();
  virtual ~MoveToRequest();

  MoveToRequest(const MoveToRequest& from);

  inline MoveToRequest& operator=(const MoveToRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MoveToRequest(MoveToRequest&& from) noexcept
    : MoveToRequest() {
    *this = ::std::move(from);
  }

  inline MoveToRequest& operator=(MoveToRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MoveToRequest& default_instance();

  enum TargetRequestOneofCase {
    kGroupsTargetRequest = 2,
    kPositionTargetRequest = 3,
    TARGET_REQUEST_ONEOF_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MoveToRequest* internal_default_instance() {
    return reinterpret_cast<const MoveToRequest*>(
               &_MoveToRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(MoveToRequest* other);
  friend void swap(MoveToRequest& a, MoveToRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MoveToRequest* New() const final {
    return CreateMaybeMessage<MoveToRequest>(nullptr);
  }

  MoveToRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MoveToRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MoveToRequest& from);
  void MergeFrom(const MoveToRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MoveToRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .motionService.MotionType motion_type = 1;
  void clear_motion_type();
  static const int kMotionTypeFieldNumber = 1;
  ::motionService::MotionType motion_type() const;
  void set_motion_type(::motionService::MotionType value);

  // bool immediately = 4;
  void clear_immediately();
  static const int kImmediatelyFieldNumber = 4;
  bool immediately() const;
  void set_immediately(bool value);

  // .motionService.GroupsTargetRequest groups_target_request = 2;
  bool has_groups_target_request() const;
  void clear_groups_target_request();
  static const int kGroupsTargetRequestFieldNumber = 2;
  const ::motionService::GroupsTargetRequest& groups_target_request() const;
  ::motionService::GroupsTargetRequest* release_groups_target_request();
  ::motionService::GroupsTargetRequest* mutable_groups_target_request();
  void set_allocated_groups_target_request(::motionService::GroupsTargetRequest* groups_target_request);

  // .motionService.PositionTargetRequest position_target_request = 3;
  bool has_position_target_request() const;
  void clear_position_target_request();
  static const int kPositionTargetRequestFieldNumber = 3;
  const ::motionService::PositionTargetRequest& position_target_request() const;
  ::motionService::PositionTargetRequest* release_position_target_request();
  ::motionService::PositionTargetRequest* mutable_position_target_request();
  void set_allocated_position_target_request(::motionService::PositionTargetRequest* position_target_request);

  void clear_target_request_oneof();
  TargetRequestOneofCase target_request_oneof_case() const;
  // @@protoc_insertion_point(class_scope:motionService.MoveToRequest)
 private:
  class HasBitSetters;
  void set_has_groups_target_request();
  void set_has_position_target_request();

  inline bool has_target_request_oneof() const;
  inline void clear_has_target_request_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int motion_type_;
  bool immediately_;
  union TargetRequestOneofUnion {
    TargetRequestOneofUnion() {}
    ::motionService::GroupsTargetRequest* groups_target_request_;
    ::motionService::PositionTargetRequest* position_target_request_;
  } target_request_oneof_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class MoveToResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.MoveToResponse) */ {
 public:
  MoveToResponse();
  virtual ~MoveToResponse();

  MoveToResponse(const MoveToResponse& from);

  inline MoveToResponse& operator=(const MoveToResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MoveToResponse(MoveToResponse&& from) noexcept
    : MoveToResponse() {
    *this = ::std::move(from);
  }

  inline MoveToResponse& operator=(MoveToResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MoveToResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MoveToResponse* internal_default_instance() {
    return reinterpret_cast<const MoveToResponse*>(
               &_MoveToResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(MoveToResponse* other);
  friend void swap(MoveToResponse& a, MoveToResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MoveToResponse* New() const final {
    return CreateMaybeMessage<MoveToResponse>(nullptr);
  }

  MoveToResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MoveToResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MoveToResponse& from);
  void MergeFrom(const MoveToResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MoveToResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:motionService.MoveToResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class GetPositionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.GetPositionRequest) */ {
 public:
  GetPositionRequest();
  virtual ~GetPositionRequest();

  GetPositionRequest(const GetPositionRequest& from);

  inline GetPositionRequest& operator=(const GetPositionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPositionRequest(GetPositionRequest&& from) noexcept
    : GetPositionRequest() {
    *this = ::std::move(from);
  }

  inline GetPositionRequest& operator=(GetPositionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetPositionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetPositionRequest* internal_default_instance() {
    return reinterpret_cast<const GetPositionRequest*>(
               &_GetPositionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(GetPositionRequest* other);
  friend void swap(GetPositionRequest& a, GetPositionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPositionRequest* New() const final {
    return CreateMaybeMessage<GetPositionRequest>(nullptr);
  }

  GetPositionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetPositionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetPositionRequest& from);
  void MergeFrom(const GetPositionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPositionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .motionService.MotionType motion_type = 1;
  void clear_motion_type();
  static const int kMotionTypeFieldNumber = 1;
  ::motionService::MotionType motion_type() const;
  void set_motion_type(::motionService::MotionType value);

  // @@protoc_insertion_point(class_scope:motionService.GetPositionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int motion_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class GetPositionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.GetPositionResponse) */ {
 public:
  GetPositionResponse();
  virtual ~GetPositionResponse();

  GetPositionResponse(const GetPositionResponse& from);

  inline GetPositionResponse& operator=(const GetPositionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPositionResponse(GetPositionResponse&& from) noexcept
    : GetPositionResponse() {
    *this = ::std::move(from);
  }

  inline GetPositionResponse& operator=(GetPositionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetPositionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetPositionResponse* internal_default_instance() {
    return reinterpret_cast<const GetPositionResponse*>(
               &_GetPositionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(GetPositionResponse* other);
  friend void swap(GetPositionResponse& a, GetPositionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPositionResponse* New() const final {
    return CreateMaybeMessage<GetPositionResponse>(nullptr);
  }

  GetPositionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetPositionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetPositionResponse& from);
  void MergeFrom(const GetPositionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPositionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .motionService.Position position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::motionService::Position& position() const;
  ::motionService::Position* release_position();
  ::motionService::Position* mutable_position();
  void set_allocated_position(::motionService::Position* position);

  // .motionService.MotionType motion_type = 1;
  void clear_motion_type();
  static const int kMotionTypeFieldNumber = 1;
  ::motionService::MotionType motion_type() const;
  void set_motion_type(::motionService::MotionType value);

  // @@protoc_insertion_point(class_scope:motionService.GetPositionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::motionService::Position* position_;
  int motion_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class PositioningDataRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.PositioningDataRequest) */ {
 public:
  PositioningDataRequest();
  virtual ~PositioningDataRequest();

  PositioningDataRequest(const PositioningDataRequest& from);

  inline PositioningDataRequest& operator=(const PositioningDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PositioningDataRequest(PositioningDataRequest&& from) noexcept
    : PositioningDataRequest() {
    *this = ::std::move(from);
  }

  inline PositioningDataRequest& operator=(PositioningDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PositioningDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PositioningDataRequest* internal_default_instance() {
    return reinterpret_cast<const PositioningDataRequest*>(
               &_PositioningDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(PositioningDataRequest* other);
  friend void swap(PositioningDataRequest& a, PositioningDataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PositioningDataRequest* New() const final {
    return CreateMaybeMessage<PositioningDataRequest>(nullptr);
  }

  PositioningDataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PositioningDataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PositioningDataRequest& from);
  void MergeFrom(const PositioningDataRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PositioningDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .motionService.MotionType motion_type = 1;
  void clear_motion_type();
  static const int kMotionTypeFieldNumber = 1;
  ::motionService::MotionType motion_type() const;
  void set_motion_type(::motionService::MotionType value);

  // bool disability = 2;
  void clear_disability();
  static const int kDisabilityFieldNumber = 2;
  bool disability() const;
  void set_disability(bool value);

  // @@protoc_insertion_point(class_scope:motionService.PositioningDataRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int motion_type_;
  bool disability_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class PositioningDataResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.PositioningDataResponse) */ {
 public:
  PositioningDataResponse();
  virtual ~PositioningDataResponse();

  PositioningDataResponse(const PositioningDataResponse& from);

  inline PositioningDataResponse& operator=(const PositioningDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PositioningDataResponse(PositioningDataResponse&& from) noexcept
    : PositioningDataResponse() {
    *this = ::std::move(from);
  }

  inline PositioningDataResponse& operator=(PositioningDataResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PositioningDataResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PositioningDataResponse* internal_default_instance() {
    return reinterpret_cast<const PositioningDataResponse*>(
               &_PositioningDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(PositioningDataResponse* other);
  friend void swap(PositioningDataResponse& a, PositioningDataResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PositioningDataResponse* New() const final {
    return CreateMaybeMessage<PositioningDataResponse>(nullptr);
  }

  PositioningDataResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PositioningDataResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PositioningDataResponse& from);
  void MergeFrom(const PositioningDataResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PositioningDataResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .motionService.Position position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::motionService::Position& position() const;
  ::motionService::Position* release_position();
  ::motionService::Position* mutable_position();
  void set_allocated_position(::motionService::Position* position);

  // .motionService.MotionType motion_type = 1;
  void clear_motion_type();
  static const int kMotionTypeFieldNumber = 1;
  ::motionService::MotionType motion_type() const;
  void set_motion_type(::motionService::MotionType value);

  // @@protoc_insertion_point(class_scope:motionService.PositioningDataResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::motionService::Position* position_;
  int motion_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class NewGroupRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.NewGroupRequest) */ {
 public:
  NewGroupRequest();
  virtual ~NewGroupRequest();

  NewGroupRequest(const NewGroupRequest& from);

  inline NewGroupRequest& operator=(const NewGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NewGroupRequest(NewGroupRequest&& from) noexcept
    : NewGroupRequest() {
    *this = ::std::move(from);
  }

  inline NewGroupRequest& operator=(NewGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const NewGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NewGroupRequest* internal_default_instance() {
    return reinterpret_cast<const NewGroupRequest*>(
               &_NewGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(NewGroupRequest* other);
  friend void swap(NewGroupRequest& a, NewGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NewGroupRequest* New() const final {
    return CreateMaybeMessage<NewGroupRequest>(nullptr);
  }

  NewGroupRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NewGroupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NewGroupRequest& from);
  void MergeFrom(const NewGroupRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NewGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .motionService.MotionType motion_type = 1;
  void clear_motion_type();
  static const int kMotionTypeFieldNumber = 1;
  ::motionService::MotionType motion_type() const;
  void set_motion_type(::motionService::MotionType value);

  // @@protoc_insertion_point(class_scope:motionService.NewGroupRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int motion_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class NewGroupResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.NewGroupResponse) */ {
 public:
  NewGroupResponse();
  virtual ~NewGroupResponse();

  NewGroupResponse(const NewGroupResponse& from);

  inline NewGroupResponse& operator=(const NewGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NewGroupResponse(NewGroupResponse&& from) noexcept
    : NewGroupResponse() {
    *this = ::std::move(from);
  }

  inline NewGroupResponse& operator=(NewGroupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const NewGroupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NewGroupResponse* internal_default_instance() {
    return reinterpret_cast<const NewGroupResponse*>(
               &_NewGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(NewGroupResponse* other);
  friend void swap(NewGroupResponse& a, NewGroupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NewGroupResponse* New() const final {
    return CreateMaybeMessage<NewGroupResponse>(nullptr);
  }

  NewGroupResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NewGroupResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NewGroupResponse& from);
  void MergeFrom(const NewGroupResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NewGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .motionService.GroupInfo group_info = 1;
  bool has_group_info() const;
  void clear_group_info();
  static const int kGroupInfoFieldNumber = 1;
  const ::motionService::GroupInfo& group_info() const;
  ::motionService::GroupInfo* release_group_info();
  ::motionService::GroupInfo* mutable_group_info();
  void set_allocated_group_info(::motionService::GroupInfo* group_info);

  // @@protoc_insertion_point(class_scope:motionService.NewGroupResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::motionService::GroupInfo* group_info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class ListGroupsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.ListGroupsRequest) */ {
 public:
  ListGroupsRequest();
  virtual ~ListGroupsRequest();

  ListGroupsRequest(const ListGroupsRequest& from);

  inline ListGroupsRequest& operator=(const ListGroupsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListGroupsRequest(ListGroupsRequest&& from) noexcept
    : ListGroupsRequest() {
    *this = ::std::move(from);
  }

  inline ListGroupsRequest& operator=(ListGroupsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListGroupsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListGroupsRequest* internal_default_instance() {
    return reinterpret_cast<const ListGroupsRequest*>(
               &_ListGroupsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(ListGroupsRequest* other);
  friend void swap(ListGroupsRequest& a, ListGroupsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListGroupsRequest* New() const final {
    return CreateMaybeMessage<ListGroupsRequest>(nullptr);
  }

  ListGroupsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListGroupsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListGroupsRequest& from);
  void MergeFrom(const ListGroupsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListGroupsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .motionService.MotionType motion_type = 1;
  void clear_motion_type();
  static const int kMotionTypeFieldNumber = 1;
  ::motionService::MotionType motion_type() const;
  void set_motion_type(::motionService::MotionType value);

  // @@protoc_insertion_point(class_scope:motionService.ListGroupsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int motion_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class ListGroupsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.ListGroupsResponse) */ {
 public:
  ListGroupsResponse();
  virtual ~ListGroupsResponse();

  ListGroupsResponse(const ListGroupsResponse& from);

  inline ListGroupsResponse& operator=(const ListGroupsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListGroupsResponse(ListGroupsResponse&& from) noexcept
    : ListGroupsResponse() {
    *this = ::std::move(from);
  }

  inline ListGroupsResponse& operator=(ListGroupsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListGroupsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListGroupsResponse* internal_default_instance() {
    return reinterpret_cast<const ListGroupsResponse*>(
               &_ListGroupsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(ListGroupsResponse* other);
  friend void swap(ListGroupsResponse& a, ListGroupsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListGroupsResponse* New() const final {
    return CreateMaybeMessage<ListGroupsResponse>(nullptr);
  }

  ListGroupsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListGroupsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListGroupsResponse& from);
  void MergeFrom(const ListGroupsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListGroupsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .motionService.GroupInfo groups_info = 1;
  int groups_info_size() const;
  void clear_groups_info();
  static const int kGroupsInfoFieldNumber = 1;
  ::motionService::GroupInfo* mutable_groups_info(int index);
  ::google::protobuf::RepeatedPtrField< ::motionService::GroupInfo >*
      mutable_groups_info();
  const ::motionService::GroupInfo& groups_info(int index) const;
  ::motionService::GroupInfo* add_groups_info();
  const ::google::protobuf::RepeatedPtrField< ::motionService::GroupInfo >&
      groups_info() const;

  // @@protoc_insertion_point(class_scope:motionService.ListGroupsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::motionService::GroupInfo > groups_info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class UpdateGroupRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.UpdateGroupRequest) */ {
 public:
  UpdateGroupRequest();
  virtual ~UpdateGroupRequest();

  UpdateGroupRequest(const UpdateGroupRequest& from);

  inline UpdateGroupRequest& operator=(const UpdateGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateGroupRequest(UpdateGroupRequest&& from) noexcept
    : UpdateGroupRequest() {
    *this = ::std::move(from);
  }

  inline UpdateGroupRequest& operator=(UpdateGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UpdateGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateGroupRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateGroupRequest*>(
               &_UpdateGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(UpdateGroupRequest* other);
  friend void swap(UpdateGroupRequest& a, UpdateGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateGroupRequest* New() const final {
    return CreateMaybeMessage<UpdateGroupRequest>(nullptr);
  }

  UpdateGroupRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateGroupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateGroupRequest& from);
  void MergeFrom(const UpdateGroupRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:motionService.UpdateGroupRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class UpdateGroupResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.UpdateGroupResponse) */ {
 public:
  UpdateGroupResponse();
  virtual ~UpdateGroupResponse();

  UpdateGroupResponse(const UpdateGroupResponse& from);

  inline UpdateGroupResponse& operator=(const UpdateGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateGroupResponse(UpdateGroupResponse&& from) noexcept
    : UpdateGroupResponse() {
    *this = ::std::move(from);
  }

  inline UpdateGroupResponse& operator=(UpdateGroupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UpdateGroupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateGroupResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateGroupResponse*>(
               &_UpdateGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(UpdateGroupResponse* other);
  friend void swap(UpdateGroupResponse& a, UpdateGroupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateGroupResponse* New() const final {
    return CreateMaybeMessage<UpdateGroupResponse>(nullptr);
  }

  UpdateGroupResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateGroupResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateGroupResponse& from);
  void MergeFrom(const UpdateGroupResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:motionService.UpdateGroupResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class DeleteGroupsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.DeleteGroupsRequest) */ {
 public:
  DeleteGroupsRequest();
  virtual ~DeleteGroupsRequest();

  DeleteGroupsRequest(const DeleteGroupsRequest& from);

  inline DeleteGroupsRequest& operator=(const DeleteGroupsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteGroupsRequest(DeleteGroupsRequest&& from) noexcept
    : DeleteGroupsRequest() {
    *this = ::std::move(from);
  }

  inline DeleteGroupsRequest& operator=(DeleteGroupsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DeleteGroupsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteGroupsRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteGroupsRequest*>(
               &_DeleteGroupsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(DeleteGroupsRequest* other);
  friend void swap(DeleteGroupsRequest& a, DeleteGroupsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteGroupsRequest* New() const final {
    return CreateMaybeMessage<DeleteGroupsRequest>(nullptr);
  }

  DeleteGroupsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteGroupsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteGroupsRequest& from);
  void MergeFrom(const DeleteGroupsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteGroupsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string groups_id = 1;
  int groups_id_size() const;
  void clear_groups_id();
  static const int kGroupsIdFieldNumber = 1;
  const ::std::string& groups_id(int index) const;
  ::std::string* mutable_groups_id(int index);
  void set_groups_id(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_groups_id(int index, ::std::string&& value);
  #endif
  void set_groups_id(int index, const char* value);
  void set_groups_id(int index, const char* value, size_t size);
  ::std::string* add_groups_id();
  void add_groups_id(const ::std::string& value);
  #if LANG_CXX11
  void add_groups_id(::std::string&& value);
  #endif
  void add_groups_id(const char* value);
  void add_groups_id(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& groups_id() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_groups_id();

  // @@protoc_insertion_point(class_scope:motionService.DeleteGroupsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> groups_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class DeleteGroupsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.DeleteGroupsResponse) */ {
 public:
  DeleteGroupsResponse();
  virtual ~DeleteGroupsResponse();

  DeleteGroupsResponse(const DeleteGroupsResponse& from);

  inline DeleteGroupsResponse& operator=(const DeleteGroupsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteGroupsResponse(DeleteGroupsResponse&& from) noexcept
    : DeleteGroupsResponse() {
    *this = ::std::move(from);
  }

  inline DeleteGroupsResponse& operator=(DeleteGroupsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DeleteGroupsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteGroupsResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteGroupsResponse*>(
               &_DeleteGroupsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(DeleteGroupsResponse* other);
  friend void swap(DeleteGroupsResponse& a, DeleteGroupsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteGroupsResponse* New() const final {
    return CreateMaybeMessage<DeleteGroupsResponse>(nullptr);
  }

  DeleteGroupsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteGroupsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteGroupsResponse& from);
  void MergeFrom(const DeleteGroupsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteGroupsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:motionService.DeleteGroupsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class ListGroupTargetsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.ListGroupTargetsRequest) */ {
 public:
  ListGroupTargetsRequest();
  virtual ~ListGroupTargetsRequest();

  ListGroupTargetsRequest(const ListGroupTargetsRequest& from);

  inline ListGroupTargetsRequest& operator=(const ListGroupTargetsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListGroupTargetsRequest(ListGroupTargetsRequest&& from) noexcept
    : ListGroupTargetsRequest() {
    *this = ::std::move(from);
  }

  inline ListGroupTargetsRequest& operator=(ListGroupTargetsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListGroupTargetsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListGroupTargetsRequest* internal_default_instance() {
    return reinterpret_cast<const ListGroupTargetsRequest*>(
               &_ListGroupTargetsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(ListGroupTargetsRequest* other);
  friend void swap(ListGroupTargetsRequest& a, ListGroupTargetsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListGroupTargetsRequest* New() const final {
    return CreateMaybeMessage<ListGroupTargetsRequest>(nullptr);
  }

  ListGroupTargetsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListGroupTargetsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListGroupTargetsRequest& from);
  void MergeFrom(const ListGroupTargetsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListGroupTargetsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string group_id = 1;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  const ::std::string& group_id() const;
  void set_group_id(const ::std::string& value);
  #if LANG_CXX11
  void set_group_id(::std::string&& value);
  #endif
  void set_group_id(const char* value);
  void set_group_id(const char* value, size_t size);
  ::std::string* mutable_group_id();
  ::std::string* release_group_id();
  void set_allocated_group_id(::std::string* group_id);

  // @@protoc_insertion_point(class_scope:motionService.ListGroupTargetsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr group_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class ListGroupTargetsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.ListGroupTargetsResponse) */ {
 public:
  ListGroupTargetsResponse();
  virtual ~ListGroupTargetsResponse();

  ListGroupTargetsResponse(const ListGroupTargetsResponse& from);

  inline ListGroupTargetsResponse& operator=(const ListGroupTargetsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListGroupTargetsResponse(ListGroupTargetsResponse&& from) noexcept
    : ListGroupTargetsResponse() {
    *this = ::std::move(from);
  }

  inline ListGroupTargetsResponse& operator=(ListGroupTargetsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListGroupTargetsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListGroupTargetsResponse* internal_default_instance() {
    return reinterpret_cast<const ListGroupTargetsResponse*>(
               &_ListGroupTargetsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(ListGroupTargetsResponse* other);
  friend void swap(ListGroupTargetsResponse& a, ListGroupTargetsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListGroupTargetsResponse* New() const final {
    return CreateMaybeMessage<ListGroupTargetsResponse>(nullptr);
  }

  ListGroupTargetsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListGroupTargetsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListGroupTargetsResponse& from);
  void MergeFrom(const ListGroupTargetsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListGroupTargetsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .motionService.Target targets = 1;
  int targets_size() const;
  void clear_targets();
  static const int kTargetsFieldNumber = 1;
  ::motionService::Target* mutable_targets(int index);
  ::google::protobuf::RepeatedPtrField< ::motionService::Target >*
      mutable_targets();
  const ::motionService::Target& targets(int index) const;
  ::motionService::Target* add_targets();
  const ::google::protobuf::RepeatedPtrField< ::motionService::Target >&
      targets() const;

  // @@protoc_insertion_point(class_scope:motionService.ListGroupTargetsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::motionService::Target > targets_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class UpdateGroupTargetsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.UpdateGroupTargetsRequest) */ {
 public:
  UpdateGroupTargetsRequest();
  virtual ~UpdateGroupTargetsRequest();

  UpdateGroupTargetsRequest(const UpdateGroupTargetsRequest& from);

  inline UpdateGroupTargetsRequest& operator=(const UpdateGroupTargetsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateGroupTargetsRequest(UpdateGroupTargetsRequest&& from) noexcept
    : UpdateGroupTargetsRequest() {
    *this = ::std::move(from);
  }

  inline UpdateGroupTargetsRequest& operator=(UpdateGroupTargetsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UpdateGroupTargetsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateGroupTargetsRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateGroupTargetsRequest*>(
               &_UpdateGroupTargetsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(UpdateGroupTargetsRequest* other);
  friend void swap(UpdateGroupTargetsRequest& a, UpdateGroupTargetsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateGroupTargetsRequest* New() const final {
    return CreateMaybeMessage<UpdateGroupTargetsRequest>(nullptr);
  }

  UpdateGroupTargetsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateGroupTargetsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateGroupTargetsRequest& from);
  void MergeFrom(const UpdateGroupTargetsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateGroupTargetsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .motionService.Target targets = 2;
  int targets_size() const;
  void clear_targets();
  static const int kTargetsFieldNumber = 2;
  ::motionService::Target* mutable_targets(int index);
  ::google::protobuf::RepeatedPtrField< ::motionService::Target >*
      mutable_targets();
  const ::motionService::Target& targets(int index) const;
  ::motionService::Target* add_targets();
  const ::google::protobuf::RepeatedPtrField< ::motionService::Target >&
      targets() const;

  // string group_id = 1;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  const ::std::string& group_id() const;
  void set_group_id(const ::std::string& value);
  #if LANG_CXX11
  void set_group_id(::std::string&& value);
  #endif
  void set_group_id(const char* value);
  void set_group_id(const char* value, size_t size);
  ::std::string* mutable_group_id();
  ::std::string* release_group_id();
  void set_allocated_group_id(::std::string* group_id);

  // @@protoc_insertion_point(class_scope:motionService.UpdateGroupTargetsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::motionService::Target > targets_;
  ::google::protobuf::internal::ArenaStringPtr group_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// -------------------------------------------------------------------

class UpdateGroupTargetsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:motionService.UpdateGroupTargetsResponse) */ {
 public:
  UpdateGroupTargetsResponse();
  virtual ~UpdateGroupTargetsResponse();

  UpdateGroupTargetsResponse(const UpdateGroupTargetsResponse& from);

  inline UpdateGroupTargetsResponse& operator=(const UpdateGroupTargetsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateGroupTargetsResponse(UpdateGroupTargetsResponse&& from) noexcept
    : UpdateGroupTargetsResponse() {
    *this = ::std::move(from);
  }

  inline UpdateGroupTargetsResponse& operator=(UpdateGroupTargetsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UpdateGroupTargetsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateGroupTargetsResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateGroupTargetsResponse*>(
               &_UpdateGroupTargetsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(UpdateGroupTargetsResponse* other);
  friend void swap(UpdateGroupTargetsResponse& a, UpdateGroupTargetsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateGroupTargetsResponse* New() const final {
    return CreateMaybeMessage<UpdateGroupTargetsResponse>(nullptr);
  }

  UpdateGroupTargetsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateGroupTargetsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateGroupTargetsResponse& from);
  void MergeFrom(const UpdateGroupTargetsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateGroupTargetsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:motionService.UpdateGroupTargetsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_headmotion_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Position

// int32 x_axis = 1;
inline void Position::clear_x_axis() {
  x_axis_ = 0;
}
inline ::google::protobuf::int32 Position::x_axis() const {
  // @@protoc_insertion_point(field_get:motionService.Position.x_axis)
  return x_axis_;
}
inline void Position::set_x_axis(::google::protobuf::int32 value) {
  
  x_axis_ = value;
  // @@protoc_insertion_point(field_set:motionService.Position.x_axis)
}

// int32 y_axis = 2;
inline void Position::clear_y_axis() {
  y_axis_ = 0;
}
inline ::google::protobuf::int32 Position::y_axis() const {
  // @@protoc_insertion_point(field_get:motionService.Position.y_axis)
  return y_axis_;
}
inline void Position::set_y_axis(::google::protobuf::int32 value) {
  
  y_axis_ = value;
  // @@protoc_insertion_point(field_set:motionService.Position.y_axis)
}

// -------------------------------------------------------------------

// MotionConfig

// uint32 speed = 1;
inline void MotionConfig::clear_speed() {
  speed_ = 0u;
}
inline ::google::protobuf::uint32 MotionConfig::speed() const {
  // @@protoc_insertion_point(field_get:motionService.MotionConfig.speed)
  return speed_;
}
inline void MotionConfig::set_speed(::google::protobuf::uint32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:motionService.MotionConfig.speed)
}

// uint32 wait_millisecond = 2;
inline void MotionConfig::clear_wait_millisecond() {
  wait_millisecond_ = 0u;
}
inline ::google::protobuf::uint32 MotionConfig::wait_millisecond() const {
  // @@protoc_insertion_point(field_get:motionService.MotionConfig.wait_millisecond)
  return wait_millisecond_;
}
inline void MotionConfig::set_wait_millisecond(::google::protobuf::uint32 value) {
  
  wait_millisecond_ = value;
  // @@protoc_insertion_point(field_set:motionService.MotionConfig.wait_millisecond)
}

// -------------------------------------------------------------------

// Group

// .motionService.GroupInfo group_info = 1;
inline bool Group::has_group_info() const {
  return this != internal_default_instance() && group_info_ != nullptr;
}
inline void Group::clear_group_info() {
  if (GetArenaNoVirtual() == nullptr && group_info_ != nullptr) {
    delete group_info_;
  }
  group_info_ = nullptr;
}
inline const ::motionService::GroupInfo& Group::group_info() const {
  const ::motionService::GroupInfo* p = group_info_;
  // @@protoc_insertion_point(field_get:motionService.Group.group_info)
  return p != nullptr ? *p : *reinterpret_cast<const ::motionService::GroupInfo*>(
      &::motionService::_GroupInfo_default_instance_);
}
inline ::motionService::GroupInfo* Group::release_group_info() {
  // @@protoc_insertion_point(field_release:motionService.Group.group_info)
  
  ::motionService::GroupInfo* temp = group_info_;
  group_info_ = nullptr;
  return temp;
}
inline ::motionService::GroupInfo* Group::mutable_group_info() {
  
  if (group_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::motionService::GroupInfo>(GetArenaNoVirtual());
    group_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:motionService.Group.group_info)
  return group_info_;
}
inline void Group::set_allocated_group_info(::motionService::GroupInfo* group_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete group_info_;
  }
  if (group_info) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      group_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_info, submessage_arena);
    }
    
  } else {
    
  }
  group_info_ = group_info;
  // @@protoc_insertion_point(field_set_allocated:motionService.Group.group_info)
}

// repeated .motionService.Target targets = 2;
inline int Group::targets_size() const {
  return targets_.size();
}
inline void Group::clear_targets() {
  targets_.Clear();
}
inline ::motionService::Target* Group::mutable_targets(int index) {
  // @@protoc_insertion_point(field_mutable:motionService.Group.targets)
  return targets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::motionService::Target >*
Group::mutable_targets() {
  // @@protoc_insertion_point(field_mutable_list:motionService.Group.targets)
  return &targets_;
}
inline const ::motionService::Target& Group::targets(int index) const {
  // @@protoc_insertion_point(field_get:motionService.Group.targets)
  return targets_.Get(index);
}
inline ::motionService::Target* Group::add_targets() {
  // @@protoc_insertion_point(field_add:motionService.Group.targets)
  return targets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::motionService::Target >&
Group::targets() const {
  // @@protoc_insertion_point(field_list:motionService.Group.targets)
  return targets_;
}

// -------------------------------------------------------------------

// GroupInfo

// string id = 1;
inline void GroupInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupInfo::id() const {
  // @@protoc_insertion_point(field_get:motionService.GroupInfo.id)
  return id_.GetNoArena();
}
inline void GroupInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:motionService.GroupInfo.id)
}
#if LANG_CXX11
inline void GroupInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:motionService.GroupInfo.id)
}
#endif
inline void GroupInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:motionService.GroupInfo.id)
}
inline void GroupInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:motionService.GroupInfo.id)
}
inline ::std::string* GroupInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:motionService.GroupInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupInfo::release_id() {
  // @@protoc_insertion_point(field_release:motionService.GroupInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupInfo::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:motionService.GroupInfo.id)
}

// string name = 2;
inline void GroupInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupInfo::name() const {
  // @@protoc_insertion_point(field_get:motionService.GroupInfo.name)
  return name_.GetNoArena();
}
inline void GroupInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:motionService.GroupInfo.name)
}
#if LANG_CXX11
inline void GroupInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:motionService.GroupInfo.name)
}
#endif
inline void GroupInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:motionService.GroupInfo.name)
}
inline void GroupInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:motionService.GroupInfo.name)
}
inline ::std::string* GroupInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:motionService.GroupInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupInfo::release_name() {
  // @@protoc_insertion_point(field_release:motionService.GroupInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupInfo::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:motionService.GroupInfo.name)
}

// .motionService.MotionType motion_type = 3;
inline void GroupInfo::clear_motion_type() {
  motion_type_ = 0;
}
inline ::motionService::MotionType GroupInfo::motion_type() const {
  // @@protoc_insertion_point(field_get:motionService.GroupInfo.motion_type)
  return static_cast< ::motionService::MotionType >(motion_type_);
}
inline void GroupInfo::set_motion_type(::motionService::MotionType value) {
  
  motion_type_ = value;
  // @@protoc_insertion_point(field_set:motionService.GroupInfo.motion_type)
}

// -------------------------------------------------------------------

// Target

// .motionService.Position position = 1;
inline bool Target::has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline void Target::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
inline const ::motionService::Position& Target::position() const {
  const ::motionService::Position* p = position_;
  // @@protoc_insertion_point(field_get:motionService.Target.position)
  return p != nullptr ? *p : *reinterpret_cast<const ::motionService::Position*>(
      &::motionService::_Position_default_instance_);
}
inline ::motionService::Position* Target::release_position() {
  // @@protoc_insertion_point(field_release:motionService.Target.position)
  
  ::motionService::Position* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::motionService::Position* Target::mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::motionService::Position>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:motionService.Target.position)
  return position_;
}
inline void Target::set_allocated_position(::motionService::Position* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:motionService.Target.position)
}

// .motionService.MotionConfig motion_config = 2;
inline bool Target::has_motion_config() const {
  return this != internal_default_instance() && motion_config_ != nullptr;
}
inline void Target::clear_motion_config() {
  if (GetArenaNoVirtual() == nullptr && motion_config_ != nullptr) {
    delete motion_config_;
  }
  motion_config_ = nullptr;
}
inline const ::motionService::MotionConfig& Target::motion_config() const {
  const ::motionService::MotionConfig* p = motion_config_;
  // @@protoc_insertion_point(field_get:motionService.Target.motion_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::motionService::MotionConfig*>(
      &::motionService::_MotionConfig_default_instance_);
}
inline ::motionService::MotionConfig* Target::release_motion_config() {
  // @@protoc_insertion_point(field_release:motionService.Target.motion_config)
  
  ::motionService::MotionConfig* temp = motion_config_;
  motion_config_ = nullptr;
  return temp;
}
inline ::motionService::MotionConfig* Target::mutable_motion_config() {
  
  if (motion_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::motionService::MotionConfig>(GetArenaNoVirtual());
    motion_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:motionService.Target.motion_config)
  return motion_config_;
}
inline void Target::set_allocated_motion_config(::motionService::MotionConfig* motion_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete motion_config_;
  }
  if (motion_config) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      motion_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, motion_config, submessage_arena);
    }
    
  } else {
    
  }
  motion_config_ = motion_config;
  // @@protoc_insertion_point(field_set_allocated:motionService.Target.motion_config)
}

// -------------------------------------------------------------------

// GroupTargetRequest

// string id = 1;
inline bool GroupTargetRequest::has_id() const {
  return group_id_name_oneof_case() == kId;
}
inline void GroupTargetRequest::set_has_id() {
  _oneof_case_[0] = kId;
}
inline void GroupTargetRequest::clear_id() {
  if (has_id()) {
    group_id_name_oneof_.id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_group_id_name_oneof();
  }
}
inline const ::std::string& GroupTargetRequest::id() const {
  // @@protoc_insertion_point(field_get:motionService.GroupTargetRequest.id)
  if (has_id()) {
    return group_id_name_oneof_.id_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void GroupTargetRequest::set_id(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:motionService.GroupTargetRequest.id)
  if (!has_id()) {
    clear_group_id_name_oneof();
    set_has_id();
    group_id_name_oneof_.id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  group_id_name_oneof_.id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:motionService.GroupTargetRequest.id)
}
#if LANG_CXX11
inline void GroupTargetRequest::set_id(::std::string&& value) {
  // @@protoc_insertion_point(field_set:motionService.GroupTargetRequest.id)
  if (!has_id()) {
    clear_group_id_name_oneof();
    set_has_id();
    group_id_name_oneof_.id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  group_id_name_oneof_.id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:motionService.GroupTargetRequest.id)
}
#endif
inline void GroupTargetRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_id()) {
    clear_group_id_name_oneof();
    set_has_id();
    group_id_name_oneof_.id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  group_id_name_oneof_.id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:motionService.GroupTargetRequest.id)
}
inline void GroupTargetRequest::set_id(const char* value, size_t size) {
  if (!has_id()) {
    clear_group_id_name_oneof();
    set_has_id();
    group_id_name_oneof_.id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  group_id_name_oneof_.id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:motionService.GroupTargetRequest.id)
}
inline ::std::string* GroupTargetRequest::mutable_id() {
  if (!has_id()) {
    clear_group_id_name_oneof();
    set_has_id();
    group_id_name_oneof_.id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:motionService.GroupTargetRequest.id)
  return group_id_name_oneof_.id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupTargetRequest::release_id() {
  // @@protoc_insertion_point(field_release:motionService.GroupTargetRequest.id)
  if (has_id()) {
    clear_has_group_id_name_oneof();
    return group_id_name_oneof_.id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void GroupTargetRequest::set_allocated_id(::std::string* id) {
  if (has_group_id_name_oneof()) {
    clear_group_id_name_oneof();
  }
  if (id != nullptr) {
    set_has_id();
    group_id_name_oneof_.id_.UnsafeSetDefault(id);
  }
  // @@protoc_insertion_point(field_set_allocated:motionService.GroupTargetRequest.id)
}

// string name = 2;
inline bool GroupTargetRequest::has_name() const {
  return group_id_name_oneof_case() == kName;
}
inline void GroupTargetRequest::set_has_name() {
  _oneof_case_[0] = kName;
}
inline void GroupTargetRequest::clear_name() {
  if (has_name()) {
    group_id_name_oneof_.name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_group_id_name_oneof();
  }
}
inline const ::std::string& GroupTargetRequest::name() const {
  // @@protoc_insertion_point(field_get:motionService.GroupTargetRequest.name)
  if (has_name()) {
    return group_id_name_oneof_.name_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void GroupTargetRequest::set_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:motionService.GroupTargetRequest.name)
  if (!has_name()) {
    clear_group_id_name_oneof();
    set_has_name();
    group_id_name_oneof_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  group_id_name_oneof_.name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:motionService.GroupTargetRequest.name)
}
#if LANG_CXX11
inline void GroupTargetRequest::set_name(::std::string&& value) {
  // @@protoc_insertion_point(field_set:motionService.GroupTargetRequest.name)
  if (!has_name()) {
    clear_group_id_name_oneof();
    set_has_name();
    group_id_name_oneof_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  group_id_name_oneof_.name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:motionService.GroupTargetRequest.name)
}
#endif
inline void GroupTargetRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_name()) {
    clear_group_id_name_oneof();
    set_has_name();
    group_id_name_oneof_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  group_id_name_oneof_.name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:motionService.GroupTargetRequest.name)
}
inline void GroupTargetRequest::set_name(const char* value, size_t size) {
  if (!has_name()) {
    clear_group_id_name_oneof();
    set_has_name();
    group_id_name_oneof_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  group_id_name_oneof_.name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:motionService.GroupTargetRequest.name)
}
inline ::std::string* GroupTargetRequest::mutable_name() {
  if (!has_name()) {
    clear_group_id_name_oneof();
    set_has_name();
    group_id_name_oneof_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:motionService.GroupTargetRequest.name)
  return group_id_name_oneof_.name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupTargetRequest::release_name() {
  // @@protoc_insertion_point(field_release:motionService.GroupTargetRequest.name)
  if (has_name()) {
    clear_has_group_id_name_oneof();
    return group_id_name_oneof_.name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void GroupTargetRequest::set_allocated_name(::std::string* name) {
  if (has_group_id_name_oneof()) {
    clear_group_id_name_oneof();
  }
  if (name != nullptr) {
    set_has_name();
    group_id_name_oneof_.name_.UnsafeSetDefault(name);
  }
  // @@protoc_insertion_point(field_set_allocated:motionService.GroupTargetRequest.name)
}

inline bool GroupTargetRequest::has_group_id_name_oneof() const {
  return group_id_name_oneof_case() != GROUP_ID_NAME_ONEOF_NOT_SET;
}
inline void GroupTargetRequest::clear_has_group_id_name_oneof() {
  _oneof_case_[0] = GROUP_ID_NAME_ONEOF_NOT_SET;
}
inline GroupTargetRequest::GroupIdNameOneofCase GroupTargetRequest::group_id_name_oneof_case() const {
  return GroupTargetRequest::GroupIdNameOneofCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GroupsTargetRequest

// repeated .motionService.GroupTargetRequest groups = 1;
inline int GroupsTargetRequest::groups_size() const {
  return groups_.size();
}
inline void GroupsTargetRequest::clear_groups() {
  groups_.Clear();
}
inline ::motionService::GroupTargetRequest* GroupsTargetRequest::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:motionService.GroupsTargetRequest.groups)
  return groups_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::motionService::GroupTargetRequest >*
GroupsTargetRequest::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:motionService.GroupsTargetRequest.groups)
  return &groups_;
}
inline const ::motionService::GroupTargetRequest& GroupsTargetRequest::groups(int index) const {
  // @@protoc_insertion_point(field_get:motionService.GroupsTargetRequest.groups)
  return groups_.Get(index);
}
inline ::motionService::GroupTargetRequest* GroupsTargetRequest::add_groups() {
  // @@protoc_insertion_point(field_add:motionService.GroupsTargetRequest.groups)
  return groups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::motionService::GroupTargetRequest >&
GroupsTargetRequest::groups() const {
  // @@protoc_insertion_point(field_list:motionService.GroupsTargetRequest.groups)
  return groups_;
}

// -------------------------------------------------------------------

// PositionTargetRequest

// .motionService.Target absolute_target = 1;
inline bool PositionTargetRequest::has_absolute_target() const {
  return position_target_oneof_case() == kAbsoluteTarget;
}
inline void PositionTargetRequest::set_has_absolute_target() {
  _oneof_case_[0] = kAbsoluteTarget;
}
inline void PositionTargetRequest::clear_absolute_target() {
  if (has_absolute_target()) {
    delete position_target_oneof_.absolute_target_;
    clear_has_position_target_oneof();
  }
}
inline ::motionService::Target* PositionTargetRequest::release_absolute_target() {
  // @@protoc_insertion_point(field_release:motionService.PositionTargetRequest.absolute_target)
  if (has_absolute_target()) {
    clear_has_position_target_oneof();
      ::motionService::Target* temp = position_target_oneof_.absolute_target_;
    position_target_oneof_.absolute_target_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::motionService::Target& PositionTargetRequest::absolute_target() const {
  // @@protoc_insertion_point(field_get:motionService.PositionTargetRequest.absolute_target)
  return has_absolute_target()
      ? *position_target_oneof_.absolute_target_
      : *reinterpret_cast< ::motionService::Target*>(&::motionService::_Target_default_instance_);
}
inline ::motionService::Target* PositionTargetRequest::mutable_absolute_target() {
  if (!has_absolute_target()) {
    clear_position_target_oneof();
    set_has_absolute_target();
    position_target_oneof_.absolute_target_ = CreateMaybeMessage< ::motionService::Target >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:motionService.PositionTargetRequest.absolute_target)
  return position_target_oneof_.absolute_target_;
}

// .motionService.Target relative_target = 2;
inline bool PositionTargetRequest::has_relative_target() const {
  return position_target_oneof_case() == kRelativeTarget;
}
inline void PositionTargetRequest::set_has_relative_target() {
  _oneof_case_[0] = kRelativeTarget;
}
inline void PositionTargetRequest::clear_relative_target() {
  if (has_relative_target()) {
    delete position_target_oneof_.relative_target_;
    clear_has_position_target_oneof();
  }
}
inline ::motionService::Target* PositionTargetRequest::release_relative_target() {
  // @@protoc_insertion_point(field_release:motionService.PositionTargetRequest.relative_target)
  if (has_relative_target()) {
    clear_has_position_target_oneof();
      ::motionService::Target* temp = position_target_oneof_.relative_target_;
    position_target_oneof_.relative_target_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::motionService::Target& PositionTargetRequest::relative_target() const {
  // @@protoc_insertion_point(field_get:motionService.PositionTargetRequest.relative_target)
  return has_relative_target()
      ? *position_target_oneof_.relative_target_
      : *reinterpret_cast< ::motionService::Target*>(&::motionService::_Target_default_instance_);
}
inline ::motionService::Target* PositionTargetRequest::mutable_relative_target() {
  if (!has_relative_target()) {
    clear_position_target_oneof();
    set_has_relative_target();
    position_target_oneof_.relative_target_ = CreateMaybeMessage< ::motionService::Target >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:motionService.PositionTargetRequest.relative_target)
  return position_target_oneof_.relative_target_;
}

inline bool PositionTargetRequest::has_position_target_oneof() const {
  return position_target_oneof_case() != POSITION_TARGET_ONEOF_NOT_SET;
}
inline void PositionTargetRequest::clear_has_position_target_oneof() {
  _oneof_case_[0] = POSITION_TARGET_ONEOF_NOT_SET;
}
inline PositionTargetRequest::PositionTargetOneofCase PositionTargetRequest::position_target_oneof_case() const {
  return PositionTargetRequest::PositionTargetOneofCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// MoveToRequest

// .motionService.MotionType motion_type = 1;
inline void MoveToRequest::clear_motion_type() {
  motion_type_ = 0;
}
inline ::motionService::MotionType MoveToRequest::motion_type() const {
  // @@protoc_insertion_point(field_get:motionService.MoveToRequest.motion_type)
  return static_cast< ::motionService::MotionType >(motion_type_);
}
inline void MoveToRequest::set_motion_type(::motionService::MotionType value) {
  
  motion_type_ = value;
  // @@protoc_insertion_point(field_set:motionService.MoveToRequest.motion_type)
}

// .motionService.GroupsTargetRequest groups_target_request = 2;
inline bool MoveToRequest::has_groups_target_request() const {
  return target_request_oneof_case() == kGroupsTargetRequest;
}
inline void MoveToRequest::set_has_groups_target_request() {
  _oneof_case_[0] = kGroupsTargetRequest;
}
inline void MoveToRequest::clear_groups_target_request() {
  if (has_groups_target_request()) {
    delete target_request_oneof_.groups_target_request_;
    clear_has_target_request_oneof();
  }
}
inline ::motionService::GroupsTargetRequest* MoveToRequest::release_groups_target_request() {
  // @@protoc_insertion_point(field_release:motionService.MoveToRequest.groups_target_request)
  if (has_groups_target_request()) {
    clear_has_target_request_oneof();
      ::motionService::GroupsTargetRequest* temp = target_request_oneof_.groups_target_request_;
    target_request_oneof_.groups_target_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::motionService::GroupsTargetRequest& MoveToRequest::groups_target_request() const {
  // @@protoc_insertion_point(field_get:motionService.MoveToRequest.groups_target_request)
  return has_groups_target_request()
      ? *target_request_oneof_.groups_target_request_
      : *reinterpret_cast< ::motionService::GroupsTargetRequest*>(&::motionService::_GroupsTargetRequest_default_instance_);
}
inline ::motionService::GroupsTargetRequest* MoveToRequest::mutable_groups_target_request() {
  if (!has_groups_target_request()) {
    clear_target_request_oneof();
    set_has_groups_target_request();
    target_request_oneof_.groups_target_request_ = CreateMaybeMessage< ::motionService::GroupsTargetRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:motionService.MoveToRequest.groups_target_request)
  return target_request_oneof_.groups_target_request_;
}

// .motionService.PositionTargetRequest position_target_request = 3;
inline bool MoveToRequest::has_position_target_request() const {
  return target_request_oneof_case() == kPositionTargetRequest;
}
inline void MoveToRequest::set_has_position_target_request() {
  _oneof_case_[0] = kPositionTargetRequest;
}
inline void MoveToRequest::clear_position_target_request() {
  if (has_position_target_request()) {
    delete target_request_oneof_.position_target_request_;
    clear_has_target_request_oneof();
  }
}
inline ::motionService::PositionTargetRequest* MoveToRequest::release_position_target_request() {
  // @@protoc_insertion_point(field_release:motionService.MoveToRequest.position_target_request)
  if (has_position_target_request()) {
    clear_has_target_request_oneof();
      ::motionService::PositionTargetRequest* temp = target_request_oneof_.position_target_request_;
    target_request_oneof_.position_target_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::motionService::PositionTargetRequest& MoveToRequest::position_target_request() const {
  // @@protoc_insertion_point(field_get:motionService.MoveToRequest.position_target_request)
  return has_position_target_request()
      ? *target_request_oneof_.position_target_request_
      : *reinterpret_cast< ::motionService::PositionTargetRequest*>(&::motionService::_PositionTargetRequest_default_instance_);
}
inline ::motionService::PositionTargetRequest* MoveToRequest::mutable_position_target_request() {
  if (!has_position_target_request()) {
    clear_target_request_oneof();
    set_has_position_target_request();
    target_request_oneof_.position_target_request_ = CreateMaybeMessage< ::motionService::PositionTargetRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:motionService.MoveToRequest.position_target_request)
  return target_request_oneof_.position_target_request_;
}

// bool immediately = 4;
inline void MoveToRequest::clear_immediately() {
  immediately_ = false;
}
inline bool MoveToRequest::immediately() const {
  // @@protoc_insertion_point(field_get:motionService.MoveToRequest.immediately)
  return immediately_;
}
inline void MoveToRequest::set_immediately(bool value) {
  
  immediately_ = value;
  // @@protoc_insertion_point(field_set:motionService.MoveToRequest.immediately)
}

inline bool MoveToRequest::has_target_request_oneof() const {
  return target_request_oneof_case() != TARGET_REQUEST_ONEOF_NOT_SET;
}
inline void MoveToRequest::clear_has_target_request_oneof() {
  _oneof_case_[0] = TARGET_REQUEST_ONEOF_NOT_SET;
}
inline MoveToRequest::TargetRequestOneofCase MoveToRequest::target_request_oneof_case() const {
  return MoveToRequest::TargetRequestOneofCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// MoveToResponse

// -------------------------------------------------------------------

// GetPositionRequest

// .motionService.MotionType motion_type = 1;
inline void GetPositionRequest::clear_motion_type() {
  motion_type_ = 0;
}
inline ::motionService::MotionType GetPositionRequest::motion_type() const {
  // @@protoc_insertion_point(field_get:motionService.GetPositionRequest.motion_type)
  return static_cast< ::motionService::MotionType >(motion_type_);
}
inline void GetPositionRequest::set_motion_type(::motionService::MotionType value) {
  
  motion_type_ = value;
  // @@protoc_insertion_point(field_set:motionService.GetPositionRequest.motion_type)
}

// -------------------------------------------------------------------

// GetPositionResponse

// .motionService.MotionType motion_type = 1;
inline void GetPositionResponse::clear_motion_type() {
  motion_type_ = 0;
}
inline ::motionService::MotionType GetPositionResponse::motion_type() const {
  // @@protoc_insertion_point(field_get:motionService.GetPositionResponse.motion_type)
  return static_cast< ::motionService::MotionType >(motion_type_);
}
inline void GetPositionResponse::set_motion_type(::motionService::MotionType value) {
  
  motion_type_ = value;
  // @@protoc_insertion_point(field_set:motionService.GetPositionResponse.motion_type)
}

// .motionService.Position position = 2;
inline bool GetPositionResponse::has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline void GetPositionResponse::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
inline const ::motionService::Position& GetPositionResponse::position() const {
  const ::motionService::Position* p = position_;
  // @@protoc_insertion_point(field_get:motionService.GetPositionResponse.position)
  return p != nullptr ? *p : *reinterpret_cast<const ::motionService::Position*>(
      &::motionService::_Position_default_instance_);
}
inline ::motionService::Position* GetPositionResponse::release_position() {
  // @@protoc_insertion_point(field_release:motionService.GetPositionResponse.position)
  
  ::motionService::Position* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::motionService::Position* GetPositionResponse::mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::motionService::Position>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:motionService.GetPositionResponse.position)
  return position_;
}
inline void GetPositionResponse::set_allocated_position(::motionService::Position* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:motionService.GetPositionResponse.position)
}

// -------------------------------------------------------------------

// PositioningDataRequest

// .motionService.MotionType motion_type = 1;
inline void PositioningDataRequest::clear_motion_type() {
  motion_type_ = 0;
}
inline ::motionService::MotionType PositioningDataRequest::motion_type() const {
  // @@protoc_insertion_point(field_get:motionService.PositioningDataRequest.motion_type)
  return static_cast< ::motionService::MotionType >(motion_type_);
}
inline void PositioningDataRequest::set_motion_type(::motionService::MotionType value) {
  
  motion_type_ = value;
  // @@protoc_insertion_point(field_set:motionService.PositioningDataRequest.motion_type)
}

// bool disability = 2;
inline void PositioningDataRequest::clear_disability() {
  disability_ = false;
}
inline bool PositioningDataRequest::disability() const {
  // @@protoc_insertion_point(field_get:motionService.PositioningDataRequest.disability)
  return disability_;
}
inline void PositioningDataRequest::set_disability(bool value) {
  
  disability_ = value;
  // @@protoc_insertion_point(field_set:motionService.PositioningDataRequest.disability)
}

// -------------------------------------------------------------------

// PositioningDataResponse

// .motionService.MotionType motion_type = 1;
inline void PositioningDataResponse::clear_motion_type() {
  motion_type_ = 0;
}
inline ::motionService::MotionType PositioningDataResponse::motion_type() const {
  // @@protoc_insertion_point(field_get:motionService.PositioningDataResponse.motion_type)
  return static_cast< ::motionService::MotionType >(motion_type_);
}
inline void PositioningDataResponse::set_motion_type(::motionService::MotionType value) {
  
  motion_type_ = value;
  // @@protoc_insertion_point(field_set:motionService.PositioningDataResponse.motion_type)
}

// .motionService.Position position = 2;
inline bool PositioningDataResponse::has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline void PositioningDataResponse::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
inline const ::motionService::Position& PositioningDataResponse::position() const {
  const ::motionService::Position* p = position_;
  // @@protoc_insertion_point(field_get:motionService.PositioningDataResponse.position)
  return p != nullptr ? *p : *reinterpret_cast<const ::motionService::Position*>(
      &::motionService::_Position_default_instance_);
}
inline ::motionService::Position* PositioningDataResponse::release_position() {
  // @@protoc_insertion_point(field_release:motionService.PositioningDataResponse.position)
  
  ::motionService::Position* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::motionService::Position* PositioningDataResponse::mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::motionService::Position>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:motionService.PositioningDataResponse.position)
  return position_;
}
inline void PositioningDataResponse::set_allocated_position(::motionService::Position* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:motionService.PositioningDataResponse.position)
}

// -------------------------------------------------------------------

// NewGroupRequest

// .motionService.MotionType motion_type = 1;
inline void NewGroupRequest::clear_motion_type() {
  motion_type_ = 0;
}
inline ::motionService::MotionType NewGroupRequest::motion_type() const {
  // @@protoc_insertion_point(field_get:motionService.NewGroupRequest.motion_type)
  return static_cast< ::motionService::MotionType >(motion_type_);
}
inline void NewGroupRequest::set_motion_type(::motionService::MotionType value) {
  
  motion_type_ = value;
  // @@protoc_insertion_point(field_set:motionService.NewGroupRequest.motion_type)
}

// string name = 2;
inline void NewGroupRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NewGroupRequest::name() const {
  // @@protoc_insertion_point(field_get:motionService.NewGroupRequest.name)
  return name_.GetNoArena();
}
inline void NewGroupRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:motionService.NewGroupRequest.name)
}
#if LANG_CXX11
inline void NewGroupRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:motionService.NewGroupRequest.name)
}
#endif
inline void NewGroupRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:motionService.NewGroupRequest.name)
}
inline void NewGroupRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:motionService.NewGroupRequest.name)
}
inline ::std::string* NewGroupRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:motionService.NewGroupRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewGroupRequest::release_name() {
  // @@protoc_insertion_point(field_release:motionService.NewGroupRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewGroupRequest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:motionService.NewGroupRequest.name)
}

// -------------------------------------------------------------------

// NewGroupResponse

// .motionService.GroupInfo group_info = 1;
inline bool NewGroupResponse::has_group_info() const {
  return this != internal_default_instance() && group_info_ != nullptr;
}
inline void NewGroupResponse::clear_group_info() {
  if (GetArenaNoVirtual() == nullptr && group_info_ != nullptr) {
    delete group_info_;
  }
  group_info_ = nullptr;
}
inline const ::motionService::GroupInfo& NewGroupResponse::group_info() const {
  const ::motionService::GroupInfo* p = group_info_;
  // @@protoc_insertion_point(field_get:motionService.NewGroupResponse.group_info)
  return p != nullptr ? *p : *reinterpret_cast<const ::motionService::GroupInfo*>(
      &::motionService::_GroupInfo_default_instance_);
}
inline ::motionService::GroupInfo* NewGroupResponse::release_group_info() {
  // @@protoc_insertion_point(field_release:motionService.NewGroupResponse.group_info)
  
  ::motionService::GroupInfo* temp = group_info_;
  group_info_ = nullptr;
  return temp;
}
inline ::motionService::GroupInfo* NewGroupResponse::mutable_group_info() {
  
  if (group_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::motionService::GroupInfo>(GetArenaNoVirtual());
    group_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:motionService.NewGroupResponse.group_info)
  return group_info_;
}
inline void NewGroupResponse::set_allocated_group_info(::motionService::GroupInfo* group_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete group_info_;
  }
  if (group_info) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      group_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_info, submessage_arena);
    }
    
  } else {
    
  }
  group_info_ = group_info;
  // @@protoc_insertion_point(field_set_allocated:motionService.NewGroupResponse.group_info)
}

// -------------------------------------------------------------------

// ListGroupsRequest

// .motionService.MotionType motion_type = 1;
inline void ListGroupsRequest::clear_motion_type() {
  motion_type_ = 0;
}
inline ::motionService::MotionType ListGroupsRequest::motion_type() const {
  // @@protoc_insertion_point(field_get:motionService.ListGroupsRequest.motion_type)
  return static_cast< ::motionService::MotionType >(motion_type_);
}
inline void ListGroupsRequest::set_motion_type(::motionService::MotionType value) {
  
  motion_type_ = value;
  // @@protoc_insertion_point(field_set:motionService.ListGroupsRequest.motion_type)
}

// -------------------------------------------------------------------

// ListGroupsResponse

// repeated .motionService.GroupInfo groups_info = 1;
inline int ListGroupsResponse::groups_info_size() const {
  return groups_info_.size();
}
inline void ListGroupsResponse::clear_groups_info() {
  groups_info_.Clear();
}
inline ::motionService::GroupInfo* ListGroupsResponse::mutable_groups_info(int index) {
  // @@protoc_insertion_point(field_mutable:motionService.ListGroupsResponse.groups_info)
  return groups_info_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::motionService::GroupInfo >*
ListGroupsResponse::mutable_groups_info() {
  // @@protoc_insertion_point(field_mutable_list:motionService.ListGroupsResponse.groups_info)
  return &groups_info_;
}
inline const ::motionService::GroupInfo& ListGroupsResponse::groups_info(int index) const {
  // @@protoc_insertion_point(field_get:motionService.ListGroupsResponse.groups_info)
  return groups_info_.Get(index);
}
inline ::motionService::GroupInfo* ListGroupsResponse::add_groups_info() {
  // @@protoc_insertion_point(field_add:motionService.ListGroupsResponse.groups_info)
  return groups_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::motionService::GroupInfo >&
ListGroupsResponse::groups_info() const {
  // @@protoc_insertion_point(field_list:motionService.ListGroupsResponse.groups_info)
  return groups_info_;
}

// -------------------------------------------------------------------

// UpdateGroupRequest

// string id = 1;
inline void UpdateGroupRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateGroupRequest::id() const {
  // @@protoc_insertion_point(field_get:motionService.UpdateGroupRequest.id)
  return id_.GetNoArena();
}
inline void UpdateGroupRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:motionService.UpdateGroupRequest.id)
}
#if LANG_CXX11
inline void UpdateGroupRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:motionService.UpdateGroupRequest.id)
}
#endif
inline void UpdateGroupRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:motionService.UpdateGroupRequest.id)
}
inline void UpdateGroupRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:motionService.UpdateGroupRequest.id)
}
inline ::std::string* UpdateGroupRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:motionService.UpdateGroupRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateGroupRequest::release_id() {
  // @@protoc_insertion_point(field_release:motionService.UpdateGroupRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateGroupRequest::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:motionService.UpdateGroupRequest.id)
}

// string name = 2;
inline void UpdateGroupRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateGroupRequest::name() const {
  // @@protoc_insertion_point(field_get:motionService.UpdateGroupRequest.name)
  return name_.GetNoArena();
}
inline void UpdateGroupRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:motionService.UpdateGroupRequest.name)
}
#if LANG_CXX11
inline void UpdateGroupRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:motionService.UpdateGroupRequest.name)
}
#endif
inline void UpdateGroupRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:motionService.UpdateGroupRequest.name)
}
inline void UpdateGroupRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:motionService.UpdateGroupRequest.name)
}
inline ::std::string* UpdateGroupRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:motionService.UpdateGroupRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateGroupRequest::release_name() {
  // @@protoc_insertion_point(field_release:motionService.UpdateGroupRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateGroupRequest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:motionService.UpdateGroupRequest.name)
}

// -------------------------------------------------------------------

// UpdateGroupResponse

// -------------------------------------------------------------------

// DeleteGroupsRequest

// repeated string groups_id = 1;
inline int DeleteGroupsRequest::groups_id_size() const {
  return groups_id_.size();
}
inline void DeleteGroupsRequest::clear_groups_id() {
  groups_id_.Clear();
}
inline const ::std::string& DeleteGroupsRequest::groups_id(int index) const {
  // @@protoc_insertion_point(field_get:motionService.DeleteGroupsRequest.groups_id)
  return groups_id_.Get(index);
}
inline ::std::string* DeleteGroupsRequest::mutable_groups_id(int index) {
  // @@protoc_insertion_point(field_mutable:motionService.DeleteGroupsRequest.groups_id)
  return groups_id_.Mutable(index);
}
inline void DeleteGroupsRequest::set_groups_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:motionService.DeleteGroupsRequest.groups_id)
  groups_id_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void DeleteGroupsRequest::set_groups_id(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:motionService.DeleteGroupsRequest.groups_id)
  groups_id_.Mutable(index)->assign(std::move(value));
}
#endif
inline void DeleteGroupsRequest::set_groups_id(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  groups_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:motionService.DeleteGroupsRequest.groups_id)
}
inline void DeleteGroupsRequest::set_groups_id(int index, const char* value, size_t size) {
  groups_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:motionService.DeleteGroupsRequest.groups_id)
}
inline ::std::string* DeleteGroupsRequest::add_groups_id() {
  // @@protoc_insertion_point(field_add_mutable:motionService.DeleteGroupsRequest.groups_id)
  return groups_id_.Add();
}
inline void DeleteGroupsRequest::add_groups_id(const ::std::string& value) {
  groups_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:motionService.DeleteGroupsRequest.groups_id)
}
#if LANG_CXX11
inline void DeleteGroupsRequest::add_groups_id(::std::string&& value) {
  groups_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:motionService.DeleteGroupsRequest.groups_id)
}
#endif
inline void DeleteGroupsRequest::add_groups_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  groups_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:motionService.DeleteGroupsRequest.groups_id)
}
inline void DeleteGroupsRequest::add_groups_id(const char* value, size_t size) {
  groups_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:motionService.DeleteGroupsRequest.groups_id)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
DeleteGroupsRequest::groups_id() const {
  // @@protoc_insertion_point(field_list:motionService.DeleteGroupsRequest.groups_id)
  return groups_id_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
DeleteGroupsRequest::mutable_groups_id() {
  // @@protoc_insertion_point(field_mutable_list:motionService.DeleteGroupsRequest.groups_id)
  return &groups_id_;
}

// -------------------------------------------------------------------

// DeleteGroupsResponse

// -------------------------------------------------------------------

// ListGroupTargetsRequest

// string group_id = 1;
inline void ListGroupTargetsRequest::clear_group_id() {
  group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListGroupTargetsRequest::group_id() const {
  // @@protoc_insertion_point(field_get:motionService.ListGroupTargetsRequest.group_id)
  return group_id_.GetNoArena();
}
inline void ListGroupTargetsRequest::set_group_id(const ::std::string& value) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:motionService.ListGroupTargetsRequest.group_id)
}
#if LANG_CXX11
inline void ListGroupTargetsRequest::set_group_id(::std::string&& value) {
  
  group_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:motionService.ListGroupTargetsRequest.group_id)
}
#endif
inline void ListGroupTargetsRequest::set_group_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:motionService.ListGroupTargetsRequest.group_id)
}
inline void ListGroupTargetsRequest::set_group_id(const char* value, size_t size) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:motionService.ListGroupTargetsRequest.group_id)
}
inline ::std::string* ListGroupTargetsRequest::mutable_group_id() {
  
  // @@protoc_insertion_point(field_mutable:motionService.ListGroupTargetsRequest.group_id)
  return group_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGroupTargetsRequest::release_group_id() {
  // @@protoc_insertion_point(field_release:motionService.ListGroupTargetsRequest.group_id)
  
  return group_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGroupTargetsRequest::set_allocated_group_id(::std::string* group_id) {
  if (group_id != nullptr) {
    
  } else {
    
  }
  group_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_id);
  // @@protoc_insertion_point(field_set_allocated:motionService.ListGroupTargetsRequest.group_id)
}

// -------------------------------------------------------------------

// ListGroupTargetsResponse

// repeated .motionService.Target targets = 1;
inline int ListGroupTargetsResponse::targets_size() const {
  return targets_.size();
}
inline void ListGroupTargetsResponse::clear_targets() {
  targets_.Clear();
}
inline ::motionService::Target* ListGroupTargetsResponse::mutable_targets(int index) {
  // @@protoc_insertion_point(field_mutable:motionService.ListGroupTargetsResponse.targets)
  return targets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::motionService::Target >*
ListGroupTargetsResponse::mutable_targets() {
  // @@protoc_insertion_point(field_mutable_list:motionService.ListGroupTargetsResponse.targets)
  return &targets_;
}
inline const ::motionService::Target& ListGroupTargetsResponse::targets(int index) const {
  // @@protoc_insertion_point(field_get:motionService.ListGroupTargetsResponse.targets)
  return targets_.Get(index);
}
inline ::motionService::Target* ListGroupTargetsResponse::add_targets() {
  // @@protoc_insertion_point(field_add:motionService.ListGroupTargetsResponse.targets)
  return targets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::motionService::Target >&
ListGroupTargetsResponse::targets() const {
  // @@protoc_insertion_point(field_list:motionService.ListGroupTargetsResponse.targets)
  return targets_;
}

// -------------------------------------------------------------------

// UpdateGroupTargetsRequest

// string group_id = 1;
inline void UpdateGroupTargetsRequest::clear_group_id() {
  group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateGroupTargetsRequest::group_id() const {
  // @@protoc_insertion_point(field_get:motionService.UpdateGroupTargetsRequest.group_id)
  return group_id_.GetNoArena();
}
inline void UpdateGroupTargetsRequest::set_group_id(const ::std::string& value) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:motionService.UpdateGroupTargetsRequest.group_id)
}
#if LANG_CXX11
inline void UpdateGroupTargetsRequest::set_group_id(::std::string&& value) {
  
  group_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:motionService.UpdateGroupTargetsRequest.group_id)
}
#endif
inline void UpdateGroupTargetsRequest::set_group_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:motionService.UpdateGroupTargetsRequest.group_id)
}
inline void UpdateGroupTargetsRequest::set_group_id(const char* value, size_t size) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:motionService.UpdateGroupTargetsRequest.group_id)
}
inline ::std::string* UpdateGroupTargetsRequest::mutable_group_id() {
  
  // @@protoc_insertion_point(field_mutable:motionService.UpdateGroupTargetsRequest.group_id)
  return group_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateGroupTargetsRequest::release_group_id() {
  // @@protoc_insertion_point(field_release:motionService.UpdateGroupTargetsRequest.group_id)
  
  return group_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateGroupTargetsRequest::set_allocated_group_id(::std::string* group_id) {
  if (group_id != nullptr) {
    
  } else {
    
  }
  group_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_id);
  // @@protoc_insertion_point(field_set_allocated:motionService.UpdateGroupTargetsRequest.group_id)
}

// repeated .motionService.Target targets = 2;
inline int UpdateGroupTargetsRequest::targets_size() const {
  return targets_.size();
}
inline void UpdateGroupTargetsRequest::clear_targets() {
  targets_.Clear();
}
inline ::motionService::Target* UpdateGroupTargetsRequest::mutable_targets(int index) {
  // @@protoc_insertion_point(field_mutable:motionService.UpdateGroupTargetsRequest.targets)
  return targets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::motionService::Target >*
UpdateGroupTargetsRequest::mutable_targets() {
  // @@protoc_insertion_point(field_mutable_list:motionService.UpdateGroupTargetsRequest.targets)
  return &targets_;
}
inline const ::motionService::Target& UpdateGroupTargetsRequest::targets(int index) const {
  // @@protoc_insertion_point(field_get:motionService.UpdateGroupTargetsRequest.targets)
  return targets_.Get(index);
}
inline ::motionService::Target* UpdateGroupTargetsRequest::add_targets() {
  // @@protoc_insertion_point(field_add:motionService.UpdateGroupTargetsRequest.targets)
  return targets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::motionService::Target >&
UpdateGroupTargetsRequest::targets() const {
  // @@protoc_insertion_point(field_list:motionService.UpdateGroupTargetsRequest.targets)
  return targets_;
}

// -------------------------------------------------------------------

// UpdateGroupTargetsResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace motionService

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::motionService::MotionType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::motionService::MotionType>() {
  return ::motionService::MotionType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_headmotion_2eproto
