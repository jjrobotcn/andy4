// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: capability.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Handsmotion {

  /// <summary>Holder for reflection information generated from capability.proto</summary>
  public static partial class CapabilityReflection {

    #region Descriptor
    /// <summary>File descriptor for capability.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CapabilityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBjYXBhYmlsaXR5LnByb3RvEgtoYW5kc21vdGlvbhocZ29vZ2xlL2FwaS9h",
            "bm5vdGF0aW9ucy5wcm90byK6AgoYRmluZ2Vyc0FkanVzdG1lbnRSZXF1ZXN0",
            "EhAKCGhhbmRfaWR4GAEgASgNEg8KBXJlc2V0GAIgASgISAASQAoEbW92ZRgD",
            "IAEoCzIwLmhhbmRzbW90aW9uLkZpbmdlcnNBZGp1c3RtZW50UmVxdWVzdC5G",
            "aW5nZXJNb3ZlSAAasQEKCkZpbmdlck1vdmUSEgoKZmluZ2VyX2lkeBgCIAEo",
            "DRJSCgR0eXBlGAMgASgOMkQuaGFuZHNtb3Rpb24uRmluZ2Vyc0FkanVzdG1l",
            "bnRSZXF1ZXN0LkZpbmdlck1vdmUuRmluZ2VyTW92ZW1lbnRUeXBlcxIOCgZz",
            "dHJva2UYBCABKAUiKwoTRmluZ2VyTW92ZW1lbnRUeXBlcxIJCgVMT09TRRAA",
            "EgkKBVRJR0hUEAFCBQoDcmVxIhsKGUZpbmdlcnNBZGp1c3RtZW50UmVzcG9u",
            "c2UiVgoUQXJtQWRqdXN0bWVudFJlcXVlc3QSEAoIaGFuZF9pZHgYASABKA0S",
            "DwoFcmVzZXQYAiABKAhIABIUCgpkaXNhYmlsaXR5GAMgASgISABCBQoDcmVx",
            "IhcKFUFybUFkanVzdG1lbnRSZXNwb25zZSIYCghQb3NpdGlvbhIMCgRkYXRh",
            "GAEgASgMIh8KHU1hcmtBc09yaWdpbmFsUG9zaXRpb25SZXF1ZXN0IiAKHk1h",
            "cmtBc09yaWdpbmFsUG9zaXRpb25SZXNwb25zZSJeCg5Nb3ZlbWVudFNjcmlw",
            "dBInCghwb3NpdGlvbhgBIAEoCzIVLmhhbmRzbW90aW9uLlBvc2l0aW9uEhAK",
            "CHJ1bl90aW1lGAIgASgFEhEKCWtlZXBfdGltZRgDIAEoBSIcChpHZXRBYnNv",
            "bHV0ZVBvc2l0aW9uUmVxdWVzdCJGChtHZXRBYnNvbHV0ZVBvc2l0aW9uUmVz",
            "cG9uc2USJwoIcG9zaXRpb24YASABKAsyFS5oYW5kc21vdGlvbi5Qb3NpdGlv",
            "biJWChNBYnNvbHV0ZU1vdmVSZXF1ZXN0EiwKB3NjcmlwdHMYASADKAsyGy5o",
            "YW5kc21vdGlvbi5Nb3ZlbWVudFNjcmlwdBIRCglzeW5jX21vZGUYAiABKAgi",
            "FgoUQWJzb2x1dGVNb3ZlUmVzcG9uc2UyuAYKCkNhcGFiaWxpdHkSoQEKEUZp",
            "bmdlcnNBZGp1c3RtZW50EiUuaGFuZHNtb3Rpb24uRmluZ2Vyc0FkanVzdG1l",
            "bnRSZXF1ZXN0GiYuaGFuZHNtb3Rpb24uRmluZ2Vyc0FkanVzdG1lbnRSZXNw",
            "b25zZSI9gtPkkwI3IjIvYXBpL3YyL21vdGlvbi9oYW5kcy9jYXBhYmlsaXR5",
            "L2ZpbmdlcnNfYWRqdXN0bWVudDoBKhKRAQoNQXJtQWRqdXN0bWVudBIhLmhh",
            "bmRzbW90aW9uLkFybUFkanVzdG1lbnRSZXF1ZXN0GiIuaGFuZHNtb3Rpb24u",
            "QXJtQWRqdXN0bWVudFJlc3BvbnNlIjmC0+STAjMiLi9hcGkvdjIvbW90aW9u",
            "L2hhbmRzL2NhcGFiaWxpdHkvYXJtX2FkanVzdG1lbnQ6ASoStwEKFk1hcmtB",
            "c09yaWdpbmFsUG9zaXRpb24SKi5oYW5kc21vdGlvbi5NYXJrQXNPcmlnaW5h",
            "bFBvc2l0aW9uUmVxdWVzdBorLmhhbmRzbW90aW9uLk1hcmtBc09yaWdpbmFs",
            "UG9zaXRpb25SZXNwb25zZSJEgtPkkwI+IjkvYXBpL3YyL21vdGlvbi9oYW5k",
            "cy9jYXBhYmlsaXR5L21hcmtfYXNfb3JpZ2luYWxfcG9zaXRpb246ASoSpwEK",
            "E0dldEFic29sdXRlUG9zaXRpb24SJy5oYW5kc21vdGlvbi5HZXRBYnNvbHV0",
            "ZVBvc2l0aW9uUmVxdWVzdBooLmhhbmRzbW90aW9uLkdldEFic29sdXRlUG9z",
            "aXRpb25SZXNwb25zZSI9gtPkkwI3EjUvYXBpL3YyL21vdGlvbi9oYW5kcy9j",
            "YXBhYmlsaXR5L2dldF9hYnNvbHV0ZV9wb3NpdGlvbhKNAQoMQWJzb2x1dGVN",
            "b3ZlEiAuaGFuZHNtb3Rpb24uQWJzb2x1dGVNb3ZlUmVxdWVzdBohLmhhbmRz",
            "bW90aW9uLkFic29sdXRlTW92ZVJlc3BvbnNlIjiC0+STAjIiLS9hcGkvdjIv",
            "bW90aW9uL2hhbmRzL2NhcGFiaWxpdHkvYWJzb2x1dGVfbW92ZToBKmIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Handsmotion.FingersAdjustmentRequest), global::Handsmotion.FingersAdjustmentRequest.Parser, new[]{ "HandIdx", "Reset", "Move" }, new[]{ "Req" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Handsmotion.FingersAdjustmentRequest.Types.FingerMove), global::Handsmotion.FingersAdjustmentRequest.Types.FingerMove.Parser, new[]{ "FingerIdx", "Type", "Stroke" }, null, new[]{ typeof(global::Handsmotion.FingersAdjustmentRequest.Types.FingerMove.Types.FingerMovementTypes) }, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Handsmotion.FingersAdjustmentResponse), global::Handsmotion.FingersAdjustmentResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Handsmotion.ArmAdjustmentRequest), global::Handsmotion.ArmAdjustmentRequest.Parser, new[]{ "HandIdx", "Reset", "Disability" }, new[]{ "Req" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Handsmotion.ArmAdjustmentResponse), global::Handsmotion.ArmAdjustmentResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Handsmotion.Position), global::Handsmotion.Position.Parser, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Handsmotion.MarkAsOriginalPositionRequest), global::Handsmotion.MarkAsOriginalPositionRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Handsmotion.MarkAsOriginalPositionResponse), global::Handsmotion.MarkAsOriginalPositionResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Handsmotion.MovementScript), global::Handsmotion.MovementScript.Parser, new[]{ "Position", "RunTime", "KeepTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Handsmotion.GetAbsolutePositionRequest), global::Handsmotion.GetAbsolutePositionRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Handsmotion.GetAbsolutePositionResponse), global::Handsmotion.GetAbsolutePositionResponse.Parser, new[]{ "Position" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Handsmotion.AbsoluteMoveRequest), global::Handsmotion.AbsoluteMoveRequest.Parser, new[]{ "Scripts", "SyncMode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Handsmotion.AbsoluteMoveResponse), global::Handsmotion.AbsoluteMoveResponse.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FingersAdjustmentRequest : pb::IMessage<FingersAdjustmentRequest> {
    private static readonly pb::MessageParser<FingersAdjustmentRequest> _parser = new pb::MessageParser<FingersAdjustmentRequest>(() => new FingersAdjustmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FingersAdjustmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Handsmotion.CapabilityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FingersAdjustmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FingersAdjustmentRequest(FingersAdjustmentRequest other) : this() {
      handIdx_ = other.handIdx_;
      switch (other.ReqCase) {
        case ReqOneofCase.Reset:
          Reset = other.Reset;
          break;
        case ReqOneofCase.Move:
          Move = other.Move.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FingersAdjustmentRequest Clone() {
      return new FingersAdjustmentRequest(this);
    }

    /// <summary>Field number for the "hand_idx" field.</summary>
    public const int HandIdxFieldNumber = 1;
    private uint handIdx_;
    /// <summary>
    /// 手index 0: 左手 1：右手
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HandIdx {
      get { return handIdx_; }
      set {
        handIdx_ = value;
      }
    }

    /// <summary>Field number for the "reset" field.</summary>
    public const int ResetFieldNumber = 2;
    /// <summary>
    /// 重置至手指原点位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reset {
      get { return reqCase_ == ReqOneofCase.Reset ? (bool) req_ : false; }
      set {
        req_ = value;
        reqCase_ = ReqOneofCase.Reset;
      }
    }

    /// <summary>Field number for the "move" field.</summary>
    public const int MoveFieldNumber = 3;
    /// <summary>
    /// 手指移动
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Handsmotion.FingersAdjustmentRequest.Types.FingerMove Move {
      get { return reqCase_ == ReqOneofCase.Move ? (global::Handsmotion.FingersAdjustmentRequest.Types.FingerMove) req_ : null; }
      set {
        req_ = value;
        reqCase_ = value == null ? ReqOneofCase.None : ReqOneofCase.Move;
      }
    }

    private object req_;
    /// <summary>Enum of possible cases for the "req" oneof.</summary>
    public enum ReqOneofCase {
      None = 0,
      Reset = 2,
      Move = 3,
    }
    private ReqOneofCase reqCase_ = ReqOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqOneofCase ReqCase {
      get { return reqCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReq() {
      reqCase_ = ReqOneofCase.None;
      req_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FingersAdjustmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FingersAdjustmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HandIdx != other.HandIdx) return false;
      if (Reset != other.Reset) return false;
      if (!object.Equals(Move, other.Move)) return false;
      if (ReqCase != other.ReqCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HandIdx != 0) hash ^= HandIdx.GetHashCode();
      if (reqCase_ == ReqOneofCase.Reset) hash ^= Reset.GetHashCode();
      if (reqCase_ == ReqOneofCase.Move) hash ^= Move.GetHashCode();
      hash ^= (int) reqCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HandIdx != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(HandIdx);
      }
      if (reqCase_ == ReqOneofCase.Reset) {
        output.WriteRawTag(16);
        output.WriteBool(Reset);
      }
      if (reqCase_ == ReqOneofCase.Move) {
        output.WriteRawTag(26);
        output.WriteMessage(Move);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HandIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HandIdx);
      }
      if (reqCase_ == ReqOneofCase.Reset) {
        size += 1 + 1;
      }
      if (reqCase_ == ReqOneofCase.Move) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Move);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FingersAdjustmentRequest other) {
      if (other == null) {
        return;
      }
      if (other.HandIdx != 0) {
        HandIdx = other.HandIdx;
      }
      switch (other.ReqCase) {
        case ReqOneofCase.Reset:
          Reset = other.Reset;
          break;
        case ReqOneofCase.Move:
          if (Move == null) {
            Move = new global::Handsmotion.FingersAdjustmentRequest.Types.FingerMove();
          }
          Move.MergeFrom(other.Move);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HandIdx = input.ReadUInt32();
            break;
          }
          case 16: {
            Reset = input.ReadBool();
            break;
          }
          case 26: {
            global::Handsmotion.FingersAdjustmentRequest.Types.FingerMove subBuilder = new global::Handsmotion.FingersAdjustmentRequest.Types.FingerMove();
            if (reqCase_ == ReqOneofCase.Move) {
              subBuilder.MergeFrom(Move);
            }
            input.ReadMessage(subBuilder);
            Move = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FingersAdjustmentRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class FingerMove : pb::IMessage<FingerMove> {
        private static readonly pb::MessageParser<FingerMove> _parser = new pb::MessageParser<FingerMove>(() => new FingerMove());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FingerMove> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Handsmotion.FingersAdjustmentRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FingerMove() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FingerMove(FingerMove other) : this() {
          fingerIdx_ = other.fingerIdx_;
          type_ = other.type_;
          stroke_ = other.stroke_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FingerMove Clone() {
          return new FingerMove(this);
        }

        /// <summary>Field number for the "finger_idx" field.</summary>
        public const int FingerIdxFieldNumber = 2;
        private uint fingerIdx_;
        /// <summary>
        /// 手指index 0: 拇指 4：尾指
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint FingerIdx {
          get { return fingerIdx_; }
          set {
            fingerIdx_ = value;
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 3;
        private global::Handsmotion.FingersAdjustmentRequest.Types.FingerMove.Types.FingerMovementTypes type_ = 0;
        /// <summary>
        /// 手指移动类型
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Handsmotion.FingersAdjustmentRequest.Types.FingerMove.Types.FingerMovementTypes Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "stroke" field.</summary>
        public const int StrokeFieldNumber = 4;
        private int stroke_;
        /// <summary>
        /// 移动行程 0-3600
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Stroke {
          get { return stroke_; }
          set {
            stroke_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FingerMove);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FingerMove other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FingerIdx != other.FingerIdx) return false;
          if (Type != other.Type) return false;
          if (Stroke != other.Stroke) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (FingerIdx != 0) hash ^= FingerIdx.GetHashCode();
          if (Type != 0) hash ^= Type.GetHashCode();
          if (Stroke != 0) hash ^= Stroke.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (FingerIdx != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(FingerIdx);
          }
          if (Type != 0) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Type);
          }
          if (Stroke != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Stroke);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (FingerIdx != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FingerIdx);
          }
          if (Type != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (Stroke != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stroke);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FingerMove other) {
          if (other == null) {
            return;
          }
          if (other.FingerIdx != 0) {
            FingerIdx = other.FingerIdx;
          }
          if (other.Type != 0) {
            Type = other.Type;
          }
          if (other.Stroke != 0) {
            Stroke = other.Stroke;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 16: {
                FingerIdx = input.ReadUInt32();
                break;
              }
              case 24: {
                Type = (global::Handsmotion.FingersAdjustmentRequest.Types.FingerMove.Types.FingerMovementTypes) input.ReadEnum();
                break;
              }
              case 32: {
                Stroke = input.ReadInt32();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the FingerMove message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// 手指移动类型
          /// </summary>
          public enum FingerMovementTypes {
            /// <summary>
            /// 手指松开
            /// </summary>
            [pbr::OriginalName("LOOSE")] Loose = 0,
            /// <summary>
            /// 手指收紧
            /// </summary>
            [pbr::OriginalName("TIGHT")] Tight = 1,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class FingersAdjustmentResponse : pb::IMessage<FingersAdjustmentResponse> {
    private static readonly pb::MessageParser<FingersAdjustmentResponse> _parser = new pb::MessageParser<FingersAdjustmentResponse>(() => new FingersAdjustmentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FingersAdjustmentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Handsmotion.CapabilityReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FingersAdjustmentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FingersAdjustmentResponse(FingersAdjustmentResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FingersAdjustmentResponse Clone() {
      return new FingersAdjustmentResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FingersAdjustmentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FingersAdjustmentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FingersAdjustmentResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ArmAdjustmentRequest : pb::IMessage<ArmAdjustmentRequest> {
    private static readonly pb::MessageParser<ArmAdjustmentRequest> _parser = new pb::MessageParser<ArmAdjustmentRequest>(() => new ArmAdjustmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArmAdjustmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Handsmotion.CapabilityReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmAdjustmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmAdjustmentRequest(ArmAdjustmentRequest other) : this() {
      handIdx_ = other.handIdx_;
      switch (other.ReqCase) {
        case ReqOneofCase.Reset:
          Reset = other.Reset;
          break;
        case ReqOneofCase.Disability:
          Disability = other.Disability;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmAdjustmentRequest Clone() {
      return new ArmAdjustmentRequest(this);
    }

    /// <summary>Field number for the "hand_idx" field.</summary>
    public const int HandIdxFieldNumber = 1;
    private uint handIdx_;
    /// <summary>
    /// 手index 0: 左手 1：右手
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HandIdx {
      get { return handIdx_; }
      set {
        handIdx_ = value;
      }
    }

    /// <summary>Field number for the "reset" field.</summary>
    public const int ResetFieldNumber = 2;
    /// <summary>
    /// 重置至手臂原点位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reset {
      get { return reqCase_ == ReqOneofCase.Reset ? (bool) req_ : false; }
      set {
        req_ = value;
        reqCase_ = ReqOneofCase.Reset;
      }
    }

    /// <summary>Field number for the "disability" field.</summary>
    public const int DisabilityFieldNumber = 3;
    /// <summary>
    /// 手臂失能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Disability {
      get { return reqCase_ == ReqOneofCase.Disability ? (bool) req_ : false; }
      set {
        req_ = value;
        reqCase_ = ReqOneofCase.Disability;
      }
    }

    private object req_;
    /// <summary>Enum of possible cases for the "req" oneof.</summary>
    public enum ReqOneofCase {
      None = 0,
      Reset = 2,
      Disability = 3,
    }
    private ReqOneofCase reqCase_ = ReqOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqOneofCase ReqCase {
      get { return reqCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReq() {
      reqCase_ = ReqOneofCase.None;
      req_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArmAdjustmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArmAdjustmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HandIdx != other.HandIdx) return false;
      if (Reset != other.Reset) return false;
      if (Disability != other.Disability) return false;
      if (ReqCase != other.ReqCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HandIdx != 0) hash ^= HandIdx.GetHashCode();
      if (reqCase_ == ReqOneofCase.Reset) hash ^= Reset.GetHashCode();
      if (reqCase_ == ReqOneofCase.Disability) hash ^= Disability.GetHashCode();
      hash ^= (int) reqCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HandIdx != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(HandIdx);
      }
      if (reqCase_ == ReqOneofCase.Reset) {
        output.WriteRawTag(16);
        output.WriteBool(Reset);
      }
      if (reqCase_ == ReqOneofCase.Disability) {
        output.WriteRawTag(24);
        output.WriteBool(Disability);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HandIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HandIdx);
      }
      if (reqCase_ == ReqOneofCase.Reset) {
        size += 1 + 1;
      }
      if (reqCase_ == ReqOneofCase.Disability) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArmAdjustmentRequest other) {
      if (other == null) {
        return;
      }
      if (other.HandIdx != 0) {
        HandIdx = other.HandIdx;
      }
      switch (other.ReqCase) {
        case ReqOneofCase.Reset:
          Reset = other.Reset;
          break;
        case ReqOneofCase.Disability:
          Disability = other.Disability;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HandIdx = input.ReadUInt32();
            break;
          }
          case 16: {
            Reset = input.ReadBool();
            break;
          }
          case 24: {
            Disability = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArmAdjustmentResponse : pb::IMessage<ArmAdjustmentResponse> {
    private static readonly pb::MessageParser<ArmAdjustmentResponse> _parser = new pb::MessageParser<ArmAdjustmentResponse>(() => new ArmAdjustmentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArmAdjustmentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Handsmotion.CapabilityReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmAdjustmentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmAdjustmentResponse(ArmAdjustmentResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmAdjustmentResponse Clone() {
      return new ArmAdjustmentResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArmAdjustmentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArmAdjustmentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArmAdjustmentResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 位置数据
  /// </summary>
  public sealed partial class Position : pb::IMessage<Position> {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Handsmotion.CapabilityReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position(Position other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MarkAsOriginalPositionRequest : pb::IMessage<MarkAsOriginalPositionRequest> {
    private static readonly pb::MessageParser<MarkAsOriginalPositionRequest> _parser = new pb::MessageParser<MarkAsOriginalPositionRequest>(() => new MarkAsOriginalPositionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarkAsOriginalPositionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Handsmotion.CapabilityReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarkAsOriginalPositionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarkAsOriginalPositionRequest(MarkAsOriginalPositionRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarkAsOriginalPositionRequest Clone() {
      return new MarkAsOriginalPositionRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarkAsOriginalPositionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarkAsOriginalPositionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarkAsOriginalPositionRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class MarkAsOriginalPositionResponse : pb::IMessage<MarkAsOriginalPositionResponse> {
    private static readonly pb::MessageParser<MarkAsOriginalPositionResponse> _parser = new pb::MessageParser<MarkAsOriginalPositionResponse>(() => new MarkAsOriginalPositionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarkAsOriginalPositionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Handsmotion.CapabilityReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarkAsOriginalPositionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarkAsOriginalPositionResponse(MarkAsOriginalPositionResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarkAsOriginalPositionResponse Clone() {
      return new MarkAsOriginalPositionResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarkAsOriginalPositionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarkAsOriginalPositionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarkAsOriginalPositionResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 运动脚本
  /// </summary>
  public sealed partial class MovementScript : pb::IMessage<MovementScript> {
    private static readonly pb::MessageParser<MovementScript> _parser = new pb::MessageParser<MovementScript>(() => new MovementScript());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MovementScript> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Handsmotion.CapabilityReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MovementScript() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MovementScript(MovementScript other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      runTime_ = other.runTime_;
      keepTime_ = other.keepTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MovementScript Clone() {
      return new MovementScript(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::Handsmotion.Position position_;
    /// <summary>
    /// 位置数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Handsmotion.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "run_time" field.</summary>
    public const int RunTimeFieldNumber = 2;
    private int runTime_;
    /// <summary>
    /// 运动时间ms
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RunTime {
      get { return runTime_; }
      set {
        runTime_ = value;
      }
    }

    /// <summary>Field number for the "keep_time" field.</summary>
    public const int KeepTimeFieldNumber = 3;
    private int keepTime_;
    /// <summary>
    /// 保持时间ms
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KeepTime {
      get { return keepTime_; }
      set {
        keepTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MovementScript);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MovementScript other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (RunTime != other.RunTime) return false;
      if (KeepTime != other.KeepTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (RunTime != 0) hash ^= RunTime.GetHashCode();
      if (KeepTime != 0) hash ^= KeepTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (RunTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RunTime);
      }
      if (KeepTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(KeepTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (RunTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RunTime);
      }
      if (KeepTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KeepTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MovementScript other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Handsmotion.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.RunTime != 0) {
        RunTime = other.RunTime;
      }
      if (other.KeepTime != 0) {
        KeepTime = other.KeepTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Handsmotion.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 16: {
            RunTime = input.ReadInt32();
            break;
          }
          case 24: {
            KeepTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAbsolutePositionRequest : pb::IMessage<GetAbsolutePositionRequest> {
    private static readonly pb::MessageParser<GetAbsolutePositionRequest> _parser = new pb::MessageParser<GetAbsolutePositionRequest>(() => new GetAbsolutePositionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAbsolutePositionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Handsmotion.CapabilityReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAbsolutePositionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAbsolutePositionRequest(GetAbsolutePositionRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAbsolutePositionRequest Clone() {
      return new GetAbsolutePositionRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAbsolutePositionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAbsolutePositionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAbsolutePositionRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetAbsolutePositionResponse : pb::IMessage<GetAbsolutePositionResponse> {
    private static readonly pb::MessageParser<GetAbsolutePositionResponse> _parser = new pb::MessageParser<GetAbsolutePositionResponse>(() => new GetAbsolutePositionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAbsolutePositionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Handsmotion.CapabilityReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAbsolutePositionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAbsolutePositionResponse(GetAbsolutePositionResponse other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAbsolutePositionResponse Clone() {
      return new GetAbsolutePositionResponse(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::Handsmotion.Position position_;
    /// <summary>
    /// 位置数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Handsmotion.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAbsolutePositionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAbsolutePositionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAbsolutePositionResponse other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Handsmotion.Position();
        }
        Position.MergeFrom(other.Position);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Handsmotion.Position();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AbsoluteMoveRequest : pb::IMessage<AbsoluteMoveRequest> {
    private static readonly pb::MessageParser<AbsoluteMoveRequest> _parser = new pb::MessageParser<AbsoluteMoveRequest>(() => new AbsoluteMoveRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AbsoluteMoveRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Handsmotion.CapabilityReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbsoluteMoveRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbsoluteMoveRequest(AbsoluteMoveRequest other) : this() {
      scripts_ = other.scripts_.Clone();
      syncMode_ = other.syncMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbsoluteMoveRequest Clone() {
      return new AbsoluteMoveRequest(this);
    }

    /// <summary>Field number for the "scripts" field.</summary>
    public const int ScriptsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Handsmotion.MovementScript> _repeated_scripts_codec
        = pb::FieldCodec.ForMessage(10, global::Handsmotion.MovementScript.Parser);
    private readonly pbc::RepeatedField<global::Handsmotion.MovementScript> scripts_ = new pbc::RepeatedField<global::Handsmotion.MovementScript>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Handsmotion.MovementScript> Scripts {
      get { return scripts_; }
    }

    /// <summary>Field number for the "sync_mode" field.</summary>
    public const int SyncModeFieldNumber = 2;
    private bool syncMode_;
    /// <summary>
    /// 同步标识
    /// true: 等待动作完成时返回
    /// false: 动作开始执行时立即返回
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SyncMode {
      get { return syncMode_; }
      set {
        syncMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AbsoluteMoveRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AbsoluteMoveRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!scripts_.Equals(other.scripts_)) return false;
      if (SyncMode != other.SyncMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= scripts_.GetHashCode();
      if (SyncMode != false) hash ^= SyncMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      scripts_.WriteTo(output, _repeated_scripts_codec);
      if (SyncMode != false) {
        output.WriteRawTag(16);
        output.WriteBool(SyncMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += scripts_.CalculateSize(_repeated_scripts_codec);
      if (SyncMode != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AbsoluteMoveRequest other) {
      if (other == null) {
        return;
      }
      scripts_.Add(other.scripts_);
      if (other.SyncMode != false) {
        SyncMode = other.SyncMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            scripts_.AddEntriesFrom(input, _repeated_scripts_codec);
            break;
          }
          case 16: {
            SyncMode = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AbsoluteMoveResponse : pb::IMessage<AbsoluteMoveResponse> {
    private static readonly pb::MessageParser<AbsoluteMoveResponse> _parser = new pb::MessageParser<AbsoluteMoveResponse>(() => new AbsoluteMoveResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AbsoluteMoveResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Handsmotion.CapabilityReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbsoluteMoveResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbsoluteMoveResponse(AbsoluteMoveResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbsoluteMoveResponse Clone() {
      return new AbsoluteMoveResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AbsoluteMoveResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AbsoluteMoveResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AbsoluteMoveResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
